ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****  *
   3:Src/main.c    ****  * Tenace Crane
   4:Src/main.c    ****  * U0986849
   5:Src/main.c    ****  *
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * File Name          : main.c
   8:Src/main.c    ****  * Description        : Main program body
   9:Src/main.c    ****  ******************************************************************************
  10:Src/main.c    ****  ** This notice applies to any and all portions of this file
  11:Src/main.c    ****  * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****  * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****  * inserted by the user or by software development tools
  14:Src/main.c    ****  * are owned by their respective copyright owners.
  15:Src/main.c    ****  *
  16:Src/main.c    ****  * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****  *
  18:Src/main.c    ****  * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****  * are permitted provided that the following conditions are met:
  20:Src/main.c    ****  *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****  *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****  *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****  *      and/or other materials provided with the distribution.
  25:Src/main.c    ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****  *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****  *      without specific prior written permission.
  28:Src/main.c    ****  *
  29:Src/main.c    ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 2


  33:Src/main.c    ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****  *
  40:Src/main.c    ****  ******************************************************************************
  41:Src/main.c    ****  */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** void _Error_Handler(char *file, int line);
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  73:Src/main.c    ****   HAL_Init();
  74:Src/main.c    ****   SystemClock_Config(); // Configure the system clock
  75:Src/main.c    **** 
  76:Src/main.c    ****   // Enable the GPIOC clock
  77:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  78:Src/main.c    ****   // Enable the GPIOA clock
  79:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
  80:Src/main.c    **** 
  81:Src/main.c    ****   // Clear the bits for PC6-7
  82:Src/main.c    ****   GPIOC->MODER &= ~(3 << 12);
  83:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
  84:Src/main.c    ****   // Setting PC6-7 to General-Purpose Output Mode
  85:Src/main.c    ****   GPIOC->MODER |= (1 << 12) | (1 << 14);
  86:Src/main.c    ****   // Setting PC6-7 to Push-Pull Output Type
  87:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
  88:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
  89:Src/main.c    ****   // Set PC6-7 to Low Speed
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 3


  90:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 12);
  91:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
  92:Src/main.c    ****   // Clear the bits for PC6-7
  93:Src/main.c    ****   // This also sets the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
  94:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 12);
  95:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
  96:Src/main.c    **** 
  97:Src/main.c    ****   // Setting PA0 to Digital Input Mode
  98:Src/main.c    ****   GPIOA->MODER &= ~(3 << 0);
  99:Src/main.c    ****   // Set PA0 to Low Speed
 100:Src/main.c    ****   GPIOA->OSPEEDR &= 0;
 101:Src/main.c    ****   // Set PA0 to Pull Down Resistor
 102:Src/main.c    ****   GPIOA->PUPDR |= (2 << 0);
 103:Src/main.c    **** 
 104:Src/main.c    ****   //Set PC6 to High
 105:Src/main.c    ****   GPIOC->ODR |= (1 << 6);
 106:Src/main.c    ****   //Set PC7 to Low
 107:Src/main.c    ****   GPIOC->ODR &= ~(1 << 7);
 108:Src/main.c    **** 
 109:Src/main.c    ****   uint32_t debouncer = 0;
 110:Src/main.c    ****   while (1)
 111:Src/main.c    ****   {
 112:Src/main.c    ****     HAL_Delay(2); // Delay 5ms
 113:Src/main.c    **** 
 114:Src/main.c    ****     debouncer = (debouncer << 1); // Always shift every loop iteration
 115:Src/main.c    ****     if(GPIOA->IDR & (1 << 0)) // If the button is pressed
 116:Src/main.c    ****     {
 117:Src/main.c    ****       debouncer |= 1; // Set the LSB to 1
 118:Src/main.c    ****     }
 119:Src/main.c    ****     
 120:Src/main.c    ****     if(debouncer == 0x0FFFFFFF)
 121:Src/main.c    ****     {
 122:Src/main.c    ****       GPIOC->ODR ^= (1 << 6); // Toggle PC6
 123:Src/main.c    ****       GPIOC->ODR ^= (1 << 7); // Toggle PC7
 124:Src/main.c    ****     }
 125:Src/main.c    ****   }
 126:Src/main.c    **** 
 127:Src/main.c    **** }
 128:Src/main.c    **** 
 129:Src/main.c    **** /** System Clock Configuration
 130:Src/main.c    ****  */
 131:Src/main.c    **** void SystemClock_Config(void)
 132:Src/main.c    **** {
 133:Src/main.c    **** 
 134:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 135:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 136:Src/main.c    **** 
 137:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 138:Src/main.c    ****    */
 139:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 140:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 141:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 143:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 144:Src/main.c    ****   {
 145:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 146:Src/main.c    ****   }
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 149:Src/main.c    ****    */
 150:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 151:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 152:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 153:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 154:Src/main.c    **** 
 155:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 156:Src/main.c    ****   {
 157:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 158:Src/main.c    ****   }
 159:Src/main.c    **** 
 160:Src/main.c    ****   /**Configure the Systick interrupt time
 161:Src/main.c    ****    */
 162:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 163:Src/main.c    **** 
 164:Src/main.c    ****   /**Configure the Systick
 165:Src/main.c    ****    */
 166:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 169:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 170:Src/main.c    **** }
 171:Src/main.c    **** 
 172:Src/main.c    **** /* USER CODE BEGIN 4 */
 173:Src/main.c    **** 
 174:Src/main.c    **** /* USER CODE END 4 */
 175:Src/main.c    **** 
 176:Src/main.c    **** /**
 177:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 178:Src/main.c    ****  * @param  None
 179:Src/main.c    ****  * @retval None
 180:Src/main.c    ****  */
 181:Src/main.c    **** void _Error_Handler(char *file, int line)
 182:Src/main.c    **** {
  27              		.loc 1 182 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 183:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 184:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 185:Src/main.c    ****   while (1)
  35              		.loc 1 185 3 view .LVU1
 186:Src/main.c    ****   {
 187:Src/main.c    ****   }
  36              		.loc 1 187 3 view .LVU2
 185:Src/main.c    ****   {
  37              		.loc 1 185 9 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 5


  43              		.align	2
  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 132:Src/main.c    **** 
  56              		.loc 1 132 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 134:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 134 3 view .LVU5
 135:Src/main.c    **** 
  68              		.loc 1 135 3 view .LVU6
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 139 3 view .LVU7
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 139 36 is_stmt 0 view .LVU8
  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 140 3 is_stmt 1 view .LVU9
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 140 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 141 3 is_stmt 1 view .LVU11
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 141 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
 142:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 142 3 is_stmt 1 view .LVU13
 142:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 142 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
 143:Src/main.c    ****   {
  85              		.loc 1 143 3 is_stmt 1 view .LVU15
 143:Src/main.c    ****   {
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 6


  86              		.loc 1 143 7 is_stmt 0 view .LVU16
  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL1:
 143:Src/main.c    ****   {
  90              		.loc 1 143 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
 150:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  93              		.loc 1 150 3 is_stmt 1 view .LVU18
 150:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  94              		.loc 1 150 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 151:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 151 3 is_stmt 1 view .LVU20
 151:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 151 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 152:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 152 3 is_stmt 1 view .LVU22
 152:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 152 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 153:Src/main.c    **** 
 104              		.loc 1 153 3 is_stmt 1 view .LVU24
 153:Src/main.c    **** 
 105              		.loc 1 153 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
 155:Src/main.c    ****   {
 107              		.loc 1 155 3 is_stmt 1 view .LVU26
 155:Src/main.c    ****   {
 108              		.loc 1 155 7 is_stmt 0 view .LVU27
 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
 155:Src/main.c    ****   {
 113              		.loc 1 155 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 162:Src/main.c    **** 
 116              		.loc 1 162 3 is_stmt 1 view .LVU29
 162:Src/main.c    **** 
 117              		.loc 1 162 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
 162:Src/main.c    **** 
 120              		.loc 1 162 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 166:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 7


 127              		.loc 1 166 3 is_stmt 1 view .LVU32
 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 169:Src/main.c    **** }
 131              		.loc 1 169 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
 134 0050 0021     		movs	r1, #0
 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 170:Src/main.c    **** 
 138              		.loc 1 170 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 145:Src/main.c    ****   }
 143              		.loc 1 145 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e 9121     		movs	r1, #145
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 157:Src/main.c    ****   }
 149              		.loc 1 157 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
 151 0066 9D21     		movs	r1, #157
 152 0068 FFF7FEFF 		bl	_Error_Handler
 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  72:Src/main.c    ****   HAL_Init();
 170              		.loc 1 72 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 70B5     		push	{r4, r5, r6, lr}
 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 4, -16
 178              		.cfi_offset 5, -12
 179              		.cfi_offset 6, -8
 180              		.cfi_offset 14, -4
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 8


  73:Src/main.c    ****   SystemClock_Config(); // Configure the system clock
 181              		.loc 1 73 3 view .LVU38
 182 0002 FFF7FEFF 		bl	HAL_Init
 183              	.LVL10:
  74:Src/main.c    **** 
 184              		.loc 1 74 3 view .LVU39
 185 0006 FFF7FEFF 		bl	SystemClock_Config
 186              	.LVL11:
  77:Src/main.c    ****   // Enable the GPIOA clock
 187              		.loc 1 77 3 view .LVU40
  77:Src/main.c    ****   // Enable the GPIOA clock
 188              		.loc 1 77 6 is_stmt 0 view .LVU41
 189 000a 2C4B     		ldr	r3, .L16
 190 000c 5969     		ldr	r1, [r3, #20]
  77:Src/main.c    ****   // Enable the GPIOA clock
 191              		.loc 1 77 15 view .LVU42
 192 000e 8022     		movs	r2, #128
 193 0010 1203     		lsls	r2, r2, #12
 194 0012 0A43     		orrs	r2, r1
 195 0014 5A61     		str	r2, [r3, #20]
  79:Src/main.c    **** 
 196              		.loc 1 79 3 is_stmt 1 view .LVU43
  79:Src/main.c    **** 
 197              		.loc 1 79 6 is_stmt 0 view .LVU44
 198 0016 5969     		ldr	r1, [r3, #20]
  79:Src/main.c    **** 
 199              		.loc 1 79 15 view .LVU45
 200 0018 8022     		movs	r2, #128
 201 001a 9202     		lsls	r2, r2, #10
 202 001c 0A43     		orrs	r2, r1
 203 001e 5A61     		str	r2, [r3, #20]
  82:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 204              		.loc 1 82 3 is_stmt 1 view .LVU46
  82:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 205              		.loc 1 82 8 is_stmt 0 view .LVU47
 206 0020 274B     		ldr	r3, .L16+4
 207 0022 1A68     		ldr	r2, [r3]
  82:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 208              		.loc 1 82 16 view .LVU48
 209 0024 274D     		ldr	r5, .L16+8
 210 0026 2A40     		ands	r2, r5
 211 0028 1A60     		str	r2, [r3]
  83:Src/main.c    ****   // Setting PC6-7 to General-Purpose Output Mode
 212              		.loc 1 83 3 is_stmt 1 view .LVU49
  83:Src/main.c    ****   // Setting PC6-7 to General-Purpose Output Mode
 213              		.loc 1 83 8 is_stmt 0 view .LVU50
 214 002a 1A68     		ldr	r2, [r3]
  83:Src/main.c    ****   // Setting PC6-7 to General-Purpose Output Mode
 215              		.loc 1 83 16 view .LVU51
 216 002c 2649     		ldr	r1, .L16+12
 217 002e 0A40     		ands	r2, r1
 218 0030 1A60     		str	r2, [r3]
  85:Src/main.c    ****   // Setting PC6-7 to Push-Pull Output Type
 219              		.loc 1 85 3 is_stmt 1 view .LVU52
  85:Src/main.c    ****   // Setting PC6-7 to Push-Pull Output Type
 220              		.loc 1 85 8 is_stmt 0 view .LVU53
 221 0032 1868     		ldr	r0, [r3]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 9


  85:Src/main.c    ****   // Setting PC6-7 to Push-Pull Output Type
 222              		.loc 1 85 16 view .LVU54
 223 0034 A022     		movs	r2, #160
 224 0036 D201     		lsls	r2, r2, #7
 225 0038 0243     		orrs	r2, r0
 226 003a 1A60     		str	r2, [r3]
  87:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 227              		.loc 1 87 3 is_stmt 1 view .LVU55
  87:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 228              		.loc 1 87 8 is_stmt 0 view .LVU56
 229 003c 5A68     		ldr	r2, [r3, #4]
  87:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 230              		.loc 1 87 17 view .LVU57
 231 003e 4024     		movs	r4, #64
 232 0040 A243     		bics	r2, r4
 233 0042 5A60     		str	r2, [r3, #4]
  88:Src/main.c    ****   // Set PC6-7 to Low Speed
 234              		.loc 1 88 3 is_stmt 1 view .LVU58
  88:Src/main.c    ****   // Set PC6-7 to Low Speed
 235              		.loc 1 88 8 is_stmt 0 view .LVU59
 236 0044 5A68     		ldr	r2, [r3, #4]
  88:Src/main.c    ****   // Set PC6-7 to Low Speed
 237              		.loc 1 88 17 view .LVU60
 238 0046 8020     		movs	r0, #128
 239 0048 8243     		bics	r2, r0
 240 004a 5A60     		str	r2, [r3, #4]
  90:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
 241              		.loc 1 90 3 is_stmt 1 view .LVU61
  90:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
 242              		.loc 1 90 8 is_stmt 0 view .LVU62
 243 004c 9A68     		ldr	r2, [r3, #8]
  90:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
 244              		.loc 1 90 18 view .LVU63
 245 004e 9A60     		str	r2, [r3, #8]
  91:Src/main.c    ****   // Clear the bits for PC6-7
 246              		.loc 1 91 3 is_stmt 1 view .LVU64
  91:Src/main.c    ****   // Clear the bits for PC6-7
 247              		.loc 1 91 8 is_stmt 0 view .LVU65
 248 0050 9A68     		ldr	r2, [r3, #8]
  91:Src/main.c    ****   // Clear the bits for PC6-7
 249              		.loc 1 91 18 view .LVU66
 250 0052 9A60     		str	r2, [r3, #8]
  94:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 251              		.loc 1 94 3 is_stmt 1 view .LVU67
  94:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 252              		.loc 1 94 8 is_stmt 0 view .LVU68
 253 0054 DA68     		ldr	r2, [r3, #12]
  94:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 254              		.loc 1 94 16 view .LVU69
 255 0056 2A40     		ands	r2, r5
 256 0058 DA60     		str	r2, [r3, #12]
  95:Src/main.c    **** 
 257              		.loc 1 95 3 is_stmt 1 view .LVU70
  95:Src/main.c    **** 
 258              		.loc 1 95 8 is_stmt 0 view .LVU71
 259 005a DA68     		ldr	r2, [r3, #12]
  95:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 10


 260              		.loc 1 95 16 view .LVU72
 261 005c 0A40     		ands	r2, r1
 262 005e DA60     		str	r2, [r3, #12]
  98:Src/main.c    ****   // Set PA0 to Low Speed
 263              		.loc 1 98 3 is_stmt 1 view .LVU73
  98:Src/main.c    ****   // Set PA0 to Low Speed
 264              		.loc 1 98 8 is_stmt 0 view .LVU74
 265 0060 9022     		movs	r2, #144
 266 0062 D205     		lsls	r2, r2, #23
 267 0064 1168     		ldr	r1, [r2]
  98:Src/main.c    ****   // Set PA0 to Low Speed
 268              		.loc 1 98 16 view .LVU75
 269 0066 0325     		movs	r5, #3
 270 0068 A943     		bics	r1, r5
 271 006a 1160     		str	r1, [r2]
 100:Src/main.c    ****   // Set PA0 to Pull Down Resistor
 272              		.loc 1 100 3 is_stmt 1 view .LVU76
 100:Src/main.c    ****   // Set PA0 to Pull Down Resistor
 273              		.loc 1 100 8 is_stmt 0 view .LVU77
 274 006c 9168     		ldr	r1, [r2, #8]
 100:Src/main.c    ****   // Set PA0 to Pull Down Resistor
 275              		.loc 1 100 18 view .LVU78
 276 006e 0021     		movs	r1, #0
 277 0070 9160     		str	r1, [r2, #8]
 102:Src/main.c    **** 
 278              		.loc 1 102 3 is_stmt 1 view .LVU79
 102:Src/main.c    **** 
 279              		.loc 1 102 8 is_stmt 0 view .LVU80
 280 0072 D168     		ldr	r1, [r2, #12]
 102:Src/main.c    **** 
 281              		.loc 1 102 16 view .LVU81
 282 0074 013D     		subs	r5, r5, #1
 283 0076 2943     		orrs	r1, r5
 284 0078 D160     		str	r1, [r2, #12]
 105:Src/main.c    ****   //Set PC7 to Low
 285              		.loc 1 105 3 is_stmt 1 view .LVU82
 105:Src/main.c    ****   //Set PC7 to Low
 286              		.loc 1 105 8 is_stmt 0 view .LVU83
 287 007a 5A69     		ldr	r2, [r3, #20]
 105:Src/main.c    ****   //Set PC7 to Low
 288              		.loc 1 105 14 view .LVU84
 289 007c 2243     		orrs	r2, r4
 290 007e 5A61     		str	r2, [r3, #20]
 107:Src/main.c    **** 
 291              		.loc 1 107 3 is_stmt 1 view .LVU85
 107:Src/main.c    **** 
 292              		.loc 1 107 8 is_stmt 0 view .LVU86
 293 0080 5A69     		ldr	r2, [r3, #20]
 107:Src/main.c    **** 
 294              		.loc 1 107 14 view .LVU87
 295 0082 8243     		bics	r2, r0
 296 0084 5A61     		str	r2, [r3, #20]
 109:Src/main.c    ****   while (1)
 297              		.loc 1 109 3 is_stmt 1 view .LVU88
 298              	.LVL12:
 109:Src/main.c    ****   while (1)
 299              		.loc 1 109 12 is_stmt 0 view .LVU89
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 11


 300 0086 0024     		movs	r4, #0
 301 0088 02E0     		b	.L11
 302              	.LVL13:
 303              	.L12:
 120:Src/main.c    ****     {
 304              		.loc 1 120 5 is_stmt 1 view .LVU90
 120:Src/main.c    ****     {
 305              		.loc 1 120 7 is_stmt 0 view .LVU91
 306 008a 104B     		ldr	r3, .L16+16
 307 008c 9C42     		cmp	r4, r3
 308 008e 0BD0     		beq	.L15
 309              	.LVL14:
 310              	.L11:
 110:Src/main.c    ****   {
 311              		.loc 1 110 3 is_stmt 1 view .LVU92
 112:Src/main.c    **** 
 312              		.loc 1 112 5 view .LVU93
 313 0090 0220     		movs	r0, #2
 314 0092 FFF7FEFF 		bl	HAL_Delay
 315              	.LVL15:
 114:Src/main.c    ****     if(GPIOA->IDR & (1 << 0)) // If the button is pressed
 316              		.loc 1 114 5 view .LVU94
 114:Src/main.c    ****     if(GPIOA->IDR & (1 << 0)) // If the button is pressed
 317              		.loc 1 114 15 is_stmt 0 view .LVU95
 318 0096 6400     		lsls	r4, r4, #1
 319              	.LVL16:
 115:Src/main.c    ****     {
 320              		.loc 1 115 5 is_stmt 1 view .LVU96
 115:Src/main.c    ****     {
 321              		.loc 1 115 13 is_stmt 0 view .LVU97
 322 0098 9023     		movs	r3, #144
 323 009a DB05     		lsls	r3, r3, #23
 324 009c 1B69     		ldr	r3, [r3, #16]
 115:Src/main.c    ****     {
 325              		.loc 1 115 7 view .LVU98
 326 009e DB07     		lsls	r3, r3, #31
 327 00a0 F3D5     		bpl	.L12
 117:Src/main.c    ****     }
 328              		.loc 1 117 7 is_stmt 1 view .LVU99
 117:Src/main.c    ****     }
 329              		.loc 1 117 17 is_stmt 0 view .LVU100
 330 00a2 0123     		movs	r3, #1
 331 00a4 1C43     		orrs	r4, r3
 332              	.LVL17:
 117:Src/main.c    ****     }
 333              		.loc 1 117 17 view .LVU101
 334 00a6 F0E7     		b	.L12
 335              	.L15:
 122:Src/main.c    ****       GPIOC->ODR ^= (1 << 7); // Toggle PC7
 336              		.loc 1 122 7 is_stmt 1 view .LVU102
 122:Src/main.c    ****       GPIOC->ODR ^= (1 << 7); // Toggle PC7
 337              		.loc 1 122 12 is_stmt 0 view .LVU103
 338 00a8 054B     		ldr	r3, .L16+4
 339 00aa 5A69     		ldr	r2, [r3, #20]
 122:Src/main.c    ****       GPIOC->ODR ^= (1 << 7); // Toggle PC7
 340              		.loc 1 122 18 view .LVU104
 341 00ac 4021     		movs	r1, #64
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 12


 342 00ae 4A40     		eors	r2, r1
 343 00b0 5A61     		str	r2, [r3, #20]
 123:Src/main.c    ****     }
 344              		.loc 1 123 7 is_stmt 1 view .LVU105
 123:Src/main.c    ****     }
 345              		.loc 1 123 12 is_stmt 0 view .LVU106
 346 00b2 5A69     		ldr	r2, [r3, #20]
 123:Src/main.c    ****     }
 347              		.loc 1 123 18 view .LVU107
 348 00b4 4031     		adds	r1, r1, #64
 349 00b6 4A40     		eors	r2, r1
 350 00b8 5A61     		str	r2, [r3, #20]
 351 00ba E9E7     		b	.L11
 352              	.L17:
 353              		.align	2
 354              	.L16:
 355 00bc 00100240 		.word	1073876992
 356 00c0 00080048 		.word	1207961600
 357 00c4 FFCFFFFF 		.word	-12289
 358 00c8 FF3FFFFF 		.word	-49153
 359 00cc FFFFFF0F 		.word	268435455
 360              		.cfi_endproc
 361              	.LFE40:
 363              		.text
 364              	.Letext0:
 365              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 366              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 367              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 368              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 369              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 370              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 371              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s:19     .text._Error_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s:162    .text.main:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s:168    .text.main:00000000 main
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRzOLAg.s:355    .text.main:000000bc $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_Delay
