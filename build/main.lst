ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****  *
   3:Src/main.c    ****  * Tenace Crane
   4:Src/main.c    ****  * U0986849
   5:Src/main.c    ****  *
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * File Name          : main.c
   8:Src/main.c    ****  * Description        : Main program body
   9:Src/main.c    ****  ******************************************************************************
  10:Src/main.c    ****  ** This notice applies to any and all portions of this file
  11:Src/main.c    ****  * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****  * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****  * inserted by the user or by software development tools
  14:Src/main.c    ****  * are owned by their respective copyright owners.
  15:Src/main.c    ****  *
  16:Src/main.c    ****  * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****  *
  18:Src/main.c    ****  * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****  * are permitted provided that the following conditions are met:
  20:Src/main.c    ****  *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****  *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****  *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****  *      and/or other materials provided with the distribution.
  25:Src/main.c    ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****  *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****  *      without specific prior written permission.
  28:Src/main.c    ****  *
  29:Src/main.c    ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 2


  33:Src/main.c    ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****  *
  40:Src/main.c    ****  ******************************************************************************
  41:Src/main.c    ****  */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** void _Error_Handler(char *file, int line);
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  73:Src/main.c    ****   HAL_Init();
  74:Src/main.c    ****   SystemClock_Config(); // Configure the system clock
  75:Src/main.c    **** 
  76:Src/main.c    ****   // Enable the GPIOC clock
  77:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  78:Src/main.c    **** 
  79:Src/main.c    ****   // Clear the bits for PC6-9
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 12);
  81:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
  82:Src/main.c    ****   // GPIOC->MODER &= ~(3 << 16);
  83:Src/main.c    ****   // GPIOC->MODER &= ~(3 << 18);
  84:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
  85:Src/main.c    ****   // GPIOC->MODER |= (1 << 12) | (1 << 14) | (1 << 16) | (1 << 18);
  86:Src/main.c    ****   GPIOC->MODER |= (1 << 12) | (1 << 14);
  87:Src/main.c    ****   // GPIOC->MODER |= (1 << 16) | (1 << 18);
  88:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 3


  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
  91:Src/main.c    ****   // GPIOC->OTYPER &= ~(1 << 8);
  92:Src/main.c    ****   // GPIOC->OTYPER &= ~(1 << 9);
  93:Src/main.c    ****   // Set PC6-9 to Low Speed
  94:Src/main.c    ****   GPIOC->OSPEEDR |= (0 << 12);
  95:Src/main.c    ****   GPIOC->OSPEEDR |= (0 << 14);
  96:Src/main.c    ****   // GPIOC->OSPEEDR |= (0 << 16);
  97:Src/main.c    ****   // GPIOC->OSPEEDR |= (0 << 18);
  98:Src/main.c    ****   // Clear the bits for PC6-9
  99:Src/main.c    ****   // This also sets the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 12);
 101:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 102:Src/main.c    ****   // GPIOC->PUPDR &= ~(3 << 16);
 103:Src/main.c    ****   // GPIOC->PUPDR &= ~(3 << 18);
 104:Src/main.c    **** 
 105:Src/main.c    ****   // Setting PA0 to Digital Input Mode
 106:Src/main.c    ****   // GPIOA->MODER &= ~(3 << 0);
 107:Src/main.c    ****   // Set PA0 to Low Speed
 108:Src/main.c    ****   // GPIOA->OSPEEDR |= (0 << 0);
 109:Src/main.c    ****   // Set PA0 to Pull Down Resistor
 110:Src/main.c    ****   // GPIOA->PUPDR |= (2 << 0);
 111:Src/main.c    **** 
 112:Src/main.c    ****   //Set PC6 to High
 113:Src/main.c    ****   GPIOC->ODR |= (1 << 6);
 114:Src/main.c    ****   //Set PC7 to Low
 115:Src/main.c    ****   GPIOC->ODR &= ~(1 << 7);
 116:Src/main.c    **** 
 117:Src/main.c    ****   while (1)
 118:Src/main.c    ****   {
 119:Src/main.c    ****     HAL_Delay(200); // Delay 200ms
 120:Src/main.c    ****     // Toggle the output state of both PC8 and PC9
 121:Src/main.c    ****     GPIOC->ODR ^= (1 << 6);
 122:Src/main.c    ****     GPIOC->ODR ^= (1 << 7);
 123:Src/main.c    ****   }
 124:Src/main.c    ****   
 125:Src/main.c    **** 
 126:Src/main.c    **** }
 127:Src/main.c    **** 
 128:Src/main.c    **** /** System Clock Configuration
 129:Src/main.c    ****  */
 130:Src/main.c    **** void SystemClock_Config(void)
 131:Src/main.c    **** {
 132:Src/main.c    **** 
 133:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 134:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 135:Src/main.c    **** 
 136:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 137:Src/main.c    ****    */
 138:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 142:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 143:Src/main.c    ****   {
 144:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 145:Src/main.c    ****   }
 146:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 4


 147:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 148:Src/main.c    ****    */
 149:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 150:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 151:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 152:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 153:Src/main.c    **** 
 154:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 155:Src/main.c    ****   {
 156:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 157:Src/main.c    ****   }
 158:Src/main.c    **** 
 159:Src/main.c    ****   /**Configure the Systick interrupt time
 160:Src/main.c    ****    */
 161:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 162:Src/main.c    **** 
 163:Src/main.c    ****   /**Configure the Systick
 164:Src/main.c    ****    */
 165:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 166:Src/main.c    **** 
 167:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 168:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 169:Src/main.c    **** }
 170:Src/main.c    **** 
 171:Src/main.c    **** /* USER CODE BEGIN 4 */
 172:Src/main.c    **** 
 173:Src/main.c    **** /* USER CODE END 4 */
 174:Src/main.c    **** 
 175:Src/main.c    **** /**
 176:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 177:Src/main.c    ****  * @param  None
 178:Src/main.c    ****  * @retval None
 179:Src/main.c    ****  */
 180:Src/main.c    **** void _Error_Handler(char *file, int line)
 181:Src/main.c    **** {
  27              		.loc 1 181 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 182:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 183:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 184:Src/main.c    ****   while (1)
  35              		.loc 1 184 3 view .LVU1
 185:Src/main.c    ****   {
 186:Src/main.c    ****   }
  36              		.loc 1 186 3 view .LVU2
 184:Src/main.c    ****   {
  37              		.loc 1 184 9 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  43              		.align	2
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 5


  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 131:Src/main.c    **** 
  56              		.loc 1 131 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 133:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 133 3 view .LVU5
 134:Src/main.c    **** 
  68              		.loc 1 134 3 view .LVU6
 138:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 138 3 view .LVU7
 138:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 138 36 is_stmt 0 view .LVU8
  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 139:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 139 3 is_stmt 1 view .LVU9
 139:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 139 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 140 3 is_stmt 1 view .LVU11
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 140 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
 141:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 141 3 is_stmt 1 view .LVU13
 141:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 141 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
 142:Src/main.c    ****   {
  85              		.loc 1 142 3 is_stmt 1 view .LVU15
 142:Src/main.c    ****   {
  86              		.loc 1 142 7 is_stmt 0 view .LVU16
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 6


  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL1:
 142:Src/main.c    ****   {
  90              		.loc 1 142 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
 149:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  93              		.loc 1 149 3 is_stmt 1 view .LVU18
 149:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  94              		.loc 1 149 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 150:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 150 3 is_stmt 1 view .LVU20
 150:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 150 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 151:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 151 3 is_stmt 1 view .LVU22
 151:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 151 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 152:Src/main.c    **** 
 104              		.loc 1 152 3 is_stmt 1 view .LVU24
 152:Src/main.c    **** 
 105              		.loc 1 152 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
 154:Src/main.c    ****   {
 107              		.loc 1 154 3 is_stmt 1 view .LVU26
 154:Src/main.c    ****   {
 108              		.loc 1 154 7 is_stmt 0 view .LVU27
 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
 154:Src/main.c    ****   {
 113              		.loc 1 154 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 161:Src/main.c    **** 
 116              		.loc 1 161 3 is_stmt 1 view .LVU29
 161:Src/main.c    **** 
 117              		.loc 1 161 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
 161:Src/main.c    **** 
 120              		.loc 1 161 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 165:Src/main.c    **** 
 127              		.loc 1 165 3 is_stmt 1 view .LVU32
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 7


 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 168:Src/main.c    **** }
 131              		.loc 1 168 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
 134 0050 0021     		movs	r1, #0
 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 169:Src/main.c    **** 
 138              		.loc 1 169 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 144:Src/main.c    ****   }
 143              		.loc 1 144 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e 9021     		movs	r1, #144
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 156:Src/main.c    ****   }
 149              		.loc 1 156 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
 151 0066 9C21     		movs	r1, #156
 152 0068 FFF7FEFF 		bl	_Error_Handler
 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  72:Src/main.c    ****   HAL_Init();
 170              		.loc 1 72 1 view -0
 171              		.cfi_startproc
 172              		@ Volatile: function does not return.
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 70B5     		push	{r4, r5, r6, lr}
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 16
 178              		.cfi_offset 4, -16
 179              		.cfi_offset 5, -12
 180              		.cfi_offset 6, -8
 181              		.cfi_offset 14, -4
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 8


  73:Src/main.c    ****   SystemClock_Config(); // Configure the system clock
 182              		.loc 1 73 3 view .LVU38
 183 0002 FFF7FEFF 		bl	HAL_Init
 184              	.LVL10:
  74:Src/main.c    **** 
 185              		.loc 1 74 3 view .LVU39
 186 0006 FFF7FEFF 		bl	SystemClock_Config
 187              	.LVL11:
  77:Src/main.c    **** 
 188              		.loc 1 77 3 view .LVU40
  77:Src/main.c    **** 
 189              		.loc 1 77 6 is_stmt 0 view .LVU41
 190 000a 1C4A     		ldr	r2, .L12
 191 000c 5169     		ldr	r1, [r2, #20]
  77:Src/main.c    **** 
 192              		.loc 1 77 15 view .LVU42
 193 000e 8023     		movs	r3, #128
 194 0010 1B03     		lsls	r3, r3, #12
 195 0012 0B43     		orrs	r3, r1
 196 0014 5361     		str	r3, [r2, #20]
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 197              		.loc 1 80 3 is_stmt 1 view .LVU43
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 198              		.loc 1 80 8 is_stmt 0 view .LVU44
 199 0016 1A4B     		ldr	r3, .L12+4
 200 0018 1A68     		ldr	r2, [r3]
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 201              		.loc 1 80 16 view .LVU45
 202 001a 1A4D     		ldr	r5, .L12+8
 203 001c 2A40     		ands	r2, r5
 204 001e 1A60     		str	r2, [r3]
  81:Src/main.c    ****   // GPIOC->MODER &= ~(3 << 16);
 205              		.loc 1 81 3 is_stmt 1 view .LVU46
  81:Src/main.c    ****   // GPIOC->MODER &= ~(3 << 16);
 206              		.loc 1 81 8 is_stmt 0 view .LVU47
 207 0020 1A68     		ldr	r2, [r3]
  81:Src/main.c    ****   // GPIOC->MODER &= ~(3 << 16);
 208              		.loc 1 81 16 view .LVU48
 209 0022 1948     		ldr	r0, .L12+12
 210 0024 0240     		ands	r2, r0
 211 0026 1A60     		str	r2, [r3]
  86:Src/main.c    ****   // GPIOC->MODER |= (1 << 16) | (1 << 18);
 212              		.loc 1 86 3 is_stmt 1 view .LVU49
  86:Src/main.c    ****   // GPIOC->MODER |= (1 << 16) | (1 << 18);
 213              		.loc 1 86 8 is_stmt 0 view .LVU50
 214 0028 1968     		ldr	r1, [r3]
  86:Src/main.c    ****   // GPIOC->MODER |= (1 << 16) | (1 << 18);
 215              		.loc 1 86 16 view .LVU51
 216 002a A022     		movs	r2, #160
 217 002c D201     		lsls	r2, r2, #7
 218 002e 0A43     		orrs	r2, r1
 219 0030 1A60     		str	r2, [r3]
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 220              		.loc 1 89 3 is_stmt 1 view .LVU52
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 221              		.loc 1 89 8 is_stmt 0 view .LVU53
 222 0032 5A68     		ldr	r2, [r3, #4]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 9


  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 223              		.loc 1 89 17 view .LVU54
 224 0034 4024     		movs	r4, #64
 225 0036 A243     		bics	r2, r4
 226 0038 5A60     		str	r2, [r3, #4]
  90:Src/main.c    ****   // GPIOC->OTYPER &= ~(1 << 8);
 227              		.loc 1 90 3 is_stmt 1 view .LVU55
  90:Src/main.c    ****   // GPIOC->OTYPER &= ~(1 << 8);
 228              		.loc 1 90 8 is_stmt 0 view .LVU56
 229 003a 5A68     		ldr	r2, [r3, #4]
  90:Src/main.c    ****   // GPIOC->OTYPER &= ~(1 << 8);
 230              		.loc 1 90 17 view .LVU57
 231 003c 8021     		movs	r1, #128
 232 003e 8A43     		bics	r2, r1
 233 0040 5A60     		str	r2, [r3, #4]
  94:Src/main.c    ****   GPIOC->OSPEEDR |= (0 << 14);
 234              		.loc 1 94 3 is_stmt 1 view .LVU58
  94:Src/main.c    ****   GPIOC->OSPEEDR |= (0 << 14);
 235              		.loc 1 94 8 is_stmt 0 view .LVU59
 236 0042 9A68     		ldr	r2, [r3, #8]
  94:Src/main.c    ****   GPIOC->OSPEEDR |= (0 << 14);
 237              		.loc 1 94 18 view .LVU60
 238 0044 9A60     		str	r2, [r3, #8]
  95:Src/main.c    ****   // GPIOC->OSPEEDR |= (0 << 16);
 239              		.loc 1 95 3 is_stmt 1 view .LVU61
  95:Src/main.c    ****   // GPIOC->OSPEEDR |= (0 << 16);
 240              		.loc 1 95 8 is_stmt 0 view .LVU62
 241 0046 9A68     		ldr	r2, [r3, #8]
  95:Src/main.c    ****   // GPIOC->OSPEEDR |= (0 << 16);
 242              		.loc 1 95 18 view .LVU63
 243 0048 9A60     		str	r2, [r3, #8]
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 244              		.loc 1 100 3 is_stmt 1 view .LVU64
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 245              		.loc 1 100 8 is_stmt 0 view .LVU65
 246 004a DA68     		ldr	r2, [r3, #12]
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 247              		.loc 1 100 16 view .LVU66
 248 004c 2A40     		ands	r2, r5
 249 004e DA60     		str	r2, [r3, #12]
 101:Src/main.c    ****   // GPIOC->PUPDR &= ~(3 << 16);
 250              		.loc 1 101 3 is_stmt 1 view .LVU67
 101:Src/main.c    ****   // GPIOC->PUPDR &= ~(3 << 16);
 251              		.loc 1 101 8 is_stmt 0 view .LVU68
 252 0050 DA68     		ldr	r2, [r3, #12]
 101:Src/main.c    ****   // GPIOC->PUPDR &= ~(3 << 16);
 253              		.loc 1 101 16 view .LVU69
 254 0052 0240     		ands	r2, r0
 255 0054 DA60     		str	r2, [r3, #12]
 113:Src/main.c    ****   //Set PC7 to Low
 256              		.loc 1 113 3 is_stmt 1 view .LVU70
 113:Src/main.c    ****   //Set PC7 to Low
 257              		.loc 1 113 8 is_stmt 0 view .LVU71
 258 0056 5A69     		ldr	r2, [r3, #20]
 113:Src/main.c    ****   //Set PC7 to Low
 259              		.loc 1 113 14 view .LVU72
 260 0058 2243     		orrs	r2, r4
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 10


 261 005a 5A61     		str	r2, [r3, #20]
 115:Src/main.c    **** 
 262              		.loc 1 115 3 is_stmt 1 view .LVU73
 115:Src/main.c    **** 
 263              		.loc 1 115 8 is_stmt 0 view .LVU74
 264 005c 5A69     		ldr	r2, [r3, #20]
 115:Src/main.c    **** 
 265              		.loc 1 115 14 view .LVU75
 266 005e 8A43     		bics	r2, r1
 267 0060 5A61     		str	r2, [r3, #20]
 268              	.L11:
 117:Src/main.c    ****   {
 269              		.loc 1 117 3 is_stmt 1 view .LVU76
 119:Src/main.c    ****     // Toggle the output state of both PC8 and PC9
 270              		.loc 1 119 5 view .LVU77
 271 0062 C820     		movs	r0, #200
 272 0064 FFF7FEFF 		bl	HAL_Delay
 273              	.LVL12:
 121:Src/main.c    ****     GPIOC->ODR ^= (1 << 7);
 274              		.loc 1 121 5 view .LVU78
 121:Src/main.c    ****     GPIOC->ODR ^= (1 << 7);
 275              		.loc 1 121 10 is_stmt 0 view .LVU79
 276 0068 054B     		ldr	r3, .L12+4
 277 006a 5A69     		ldr	r2, [r3, #20]
 121:Src/main.c    ****     GPIOC->ODR ^= (1 << 7);
 278              		.loc 1 121 16 view .LVU80
 279 006c 4021     		movs	r1, #64
 280 006e 4A40     		eors	r2, r1
 281 0070 5A61     		str	r2, [r3, #20]
 122:Src/main.c    ****   }
 282              		.loc 1 122 5 is_stmt 1 discriminator 1 view .LVU81
 122:Src/main.c    ****   }
 283              		.loc 1 122 10 is_stmt 0 discriminator 1 view .LVU82
 284 0072 5A69     		ldr	r2, [r3, #20]
 122:Src/main.c    ****   }
 285              		.loc 1 122 16 discriminator 1 view .LVU83
 286 0074 4031     		adds	r1, r1, #64
 287 0076 4A40     		eors	r2, r1
 288 0078 5A61     		str	r2, [r3, #20]
 117:Src/main.c    ****   {
 289              		.loc 1 117 9 is_stmt 1 view .LVU84
 290 007a F2E7     		b	.L11
 291              	.L13:
 292              		.align	2
 293              	.L12:
 294 007c 00100240 		.word	1073876992
 295 0080 00080048 		.word	1207961600
 296 0084 FFCFFFFF 		.word	-12289
 297 0088 FF3FFFFF 		.word	-49153
 298              		.cfi_endproc
 299              	.LFE40:
 301              		.text
 302              	.Letext0:
 303              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 304              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 305              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 306              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 11


 307              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 308              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 309              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s:19     .text._Error_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s:162    .text.main:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s:168    .text.main:00000000 main
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccstHGXp.s:294    .text.main:0000007c $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_Delay
