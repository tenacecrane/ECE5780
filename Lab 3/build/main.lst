ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * File Name          : main.c
   5:Src/main.c    ****   * Description        : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  41:Src/main.c    **** #include "main.h"
  42:Src/main.c    **** #include "stm32f0xx_hal.h"
  43:Src/main.c    **** void _Error_Handler(char * file, int line);
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** int main(void)
  70:Src/main.c    **** {
  71:Src/main.c    ****   SystemClock_Config();
  72:Src/main.c    **** 
  73:Src/main.c    ****   // Enable TIM2, TIM3, PC8 (Green LED), PC9 (Orange LED)
  74:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
  75:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
  76:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  77:Src/main.c    **** 
  78:Src/main.c    ****   // Set PC8 and PC9 to output
  79:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
  80:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
  81:Src/main.c    **** 
  82:Src/main.c    ****   // Set PC8 and PC9 to push-pull
  83:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
  84:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
  85:Src/main.c    **** 
  86:Src/main.c    ****   // Set PC8 and PC9 to low speed
  87:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
  88:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
  89:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 3


  90:Src/main.c    ****   // Set PC8 and PC9 to no pull-up, no pull-down
  91:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
  92:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
  93:Src/main.c    **** 
  94:Src/main.c    ****   // Target Frequency = Clock Frequency / PSC * ARR
  95:Src/main.c    ****   // Target Frequency = 800Hz
  96:Src/main.c    ****   // Clock Frequency = 8MHz
  97:Src/main.c    **** 
  98:Src/main.c    ****   // 800Hz = 8MHz / PSC * ARR
  99:Src/main.c    ****   // PSC = 7999 a reduce clock frequency from 8MHz to 1kHz (1000Hz)
 100:Src/main.c    ****   // 800Hz = 1kHz / ARR
 101:Src/main.c    ****   // ARR = 1kHz / 800Hz = 1250
 102:Src/main.c    **** 
 103:Src/main.c    ****   // Set TIM3 PSC to 7999 to get 1kHz
 104:Src/main.c    ****   TIM3->PSC = 7999;
 105:Src/main.c    **** 
 106:Src/main.c    ****   // Set TIM3 ARR to 1250 to get 800Hz
 107:Src/main.c    ****   TIM3->ARR = 1250;
 108:Src/main.c    **** 
 109:Src/main.c    ****   // Set CC1S and CC2S to 00 to set the channels as output
 110:Src/main.c    ****   TIM3->CCMR1 &= ~(3 << 0);
 111:Src/main.c    ****   TIM3->CCMR1 &= ~(3 << 8);
 112:Src/main.c    **** 
 113:Src/main.c    ****   // Set OC1M to 111 to set the output to PWM mode 2
 114:Src/main.c    ****   TIM3->CCMR1 |= (7 << 4);
 115:Src/main.c    ****   // Set OC2M to 110 to set the output to PWM mode 1
 116:Src/main.c    ****   TIM3->CCMR1 |= (6 << 12);
 117:Src/main.c    **** 
 118:Src/main.c    ****   // Set OC1PE and OC2PE to 1 to enable preload
 119:Src/main.c    ****   TIM3->CCMR1 |= (1 << 3);
 120:Src/main.c    ****   TIM3->CCMR1 |= (1 << 11);
 121:Src/main.c    **** 
 122:Src/main.c    ****   // Set the output enable bits for channel 1 and 2 in the CCER register
 123:Src/main.c    ****   TIM3->CCER |= (1 << 0);
 124:Src/main.c    ****   TIM3->CCER |= (1 << 4);
 125:Src/main.c    **** 
 126:Src/main.c    ****   // Set the capture/compare registers (CCRx) for both channels to 20% of ARR value.
 127:Src/main.c    ****   TIM3->CCR1 = 250;
 128:Src/main.c    ****   TIM3->CCR2 = 250;
 129:Src/main.c    **** 
 130:Src/main.c    ****   
 131:Src/main.c    ****   
 132:Src/main.c    **** }
 133:Src/main.c    **** 
 134:Src/main.c    **** /** System Clock Configuration
 135:Src/main.c    **** */
 136:Src/main.c    **** void SystemClock_Config(void)
 137:Src/main.c    **** {
 138:Src/main.c    **** 
 139:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 140:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 141:Src/main.c    **** 
 142:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 143:Src/main.c    ****     */
 144:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 145:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 146:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 4


 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 148:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 149:Src/main.c    ****   {
 150:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 151:Src/main.c    ****   }
 152:Src/main.c    **** 
 153:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 154:Src/main.c    ****     */
 155:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 156:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 157:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 158:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 159:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 160:Src/main.c    **** 
 161:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 162:Src/main.c    ****   {
 163:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 164:Src/main.c    ****   }
 165:Src/main.c    **** 
 166:Src/main.c    ****     /**Configure the Systick interrupt time
 167:Src/main.c    ****     */
 168:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 169:Src/main.c    **** 
 170:Src/main.c    ****     /**Configure the Systick
 171:Src/main.c    ****     */
 172:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 173:Src/main.c    **** 
 174:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 175:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 176:Src/main.c    **** }
 177:Src/main.c    **** 
 178:Src/main.c    **** /* USER CODE BEGIN 4 */
 179:Src/main.c    **** 
 180:Src/main.c    **** /* USER CODE END 4 */
 181:Src/main.c    **** 
 182:Src/main.c    **** /**
 183:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 184:Src/main.c    ****   * @param  None
 185:Src/main.c    ****   * @retval None
 186:Src/main.c    ****   */
 187:Src/main.c    **** void _Error_Handler(char * file, int line)
 188:Src/main.c    **** {
  27              		.loc 1 188 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 189:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 190:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 191:Src/main.c    ****   while(1)
  35              		.loc 1 191 3 view .LVU1
 192:Src/main.c    ****   {
 193:Src/main.c    ****   }
  36              		.loc 1 193 3 view .LVU2
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 5


 191:Src/main.c    ****   {
  37              		.loc 1 191 8 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  43              		.align	2
  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 137:Src/main.c    **** 
  56              		.loc 1 137 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 139:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 139 3 view .LVU5
 140:Src/main.c    **** 
  68              		.loc 1 140 3 view .LVU6
 144:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 144 3 view .LVU7
 144:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 144 36 is_stmt 0 view .LVU8
  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 145:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 145 3 is_stmt 1 view .LVU9
 145:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 145 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 146 3 is_stmt 1 view .LVU11
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 146 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
 147:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 147 3 is_stmt 1 view .LVU13
 147:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 6


  82              		.loc 1 147 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
 148:Src/main.c    ****   {
  85              		.loc 1 148 3 is_stmt 1 view .LVU15
 148:Src/main.c    ****   {
  86              		.loc 1 148 7 is_stmt 0 view .LVU16
  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL1:
 148:Src/main.c    ****   {
  90              		.loc 1 148 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
 155:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  93              		.loc 1 155 3 is_stmt 1 view .LVU18
 155:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  94              		.loc 1 155 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 157:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 157 3 is_stmt 1 view .LVU20
 157:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 157 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 158:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 158 3 is_stmt 1 view .LVU22
 158:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 158 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 159:Src/main.c    **** 
 104              		.loc 1 159 3 is_stmt 1 view .LVU24
 159:Src/main.c    **** 
 105              		.loc 1 159 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
 161:Src/main.c    ****   {
 107              		.loc 1 161 3 is_stmt 1 view .LVU26
 161:Src/main.c    ****   {
 108              		.loc 1 161 7 is_stmt 0 view .LVU27
 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
 161:Src/main.c    ****   {
 113              		.loc 1 161 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 168:Src/main.c    **** 
 116              		.loc 1 168 3 is_stmt 1 view .LVU29
 168:Src/main.c    **** 
 117              		.loc 1 168 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
 168:Src/main.c    **** 
 120              		.loc 1 168 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 7


 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 172:Src/main.c    **** 
 127              		.loc 1 172 3 is_stmt 1 view .LVU32
 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 175:Src/main.c    **** }
 131              		.loc 1 175 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
 134 0050 0021     		movs	r1, #0
 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 176:Src/main.c    **** 
 138              		.loc 1 176 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 150:Src/main.c    ****   }
 143              		.loc 1 150 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e 9621     		movs	r1, #150
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 163:Src/main.c    ****   }
 149              		.loc 1 163 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
 151 0066 A321     		movs	r1, #163
 152 0068 FFF7FEFF 		bl	_Error_Handler
 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  70:Src/main.c    ****   SystemClock_Config();
 170              		.loc 1 70 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 10B5     		push	{r4, lr}
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 8


 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
  71:Src/main.c    **** 
 179              		.loc 1 71 3 view .LVU38
 180 0002 FFF7FEFF 		bl	SystemClock_Config
 181              	.LVL10:
  74:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 182              		.loc 1 74 3 view .LVU39
  74:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 183              		.loc 1 74 6 is_stmt 0 view .LVU40
 184 0006 2C4B     		ldr	r3, .L11
 185 0008 DA69     		ldr	r2, [r3, #28]
  74:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 186              		.loc 1 74 16 view .LVU41
 187 000a 0121     		movs	r1, #1
 188 000c 0A43     		orrs	r2, r1
 189 000e DA61     		str	r2, [r3, #28]
  75:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 190              		.loc 1 75 3 is_stmt 1 view .LVU42
  75:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 191              		.loc 1 75 6 is_stmt 0 view .LVU43
 192 0010 DA69     		ldr	r2, [r3, #28]
  75:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 193              		.loc 1 75 16 view .LVU44
 194 0012 0220     		movs	r0, #2
 195 0014 0243     		orrs	r2, r0
 196 0016 DA61     		str	r2, [r3, #28]
  76:Src/main.c    **** 
 197              		.loc 1 76 3 is_stmt 1 view .LVU45
  76:Src/main.c    **** 
 198              		.loc 1 76 6 is_stmt 0 view .LVU46
 199 0018 5869     		ldr	r0, [r3, #20]
  76:Src/main.c    **** 
 200              		.loc 1 76 15 view .LVU47
 201 001a 8022     		movs	r2, #128
 202 001c 1203     		lsls	r2, r2, #12
 203 001e 0243     		orrs	r2, r0
 204 0020 5A61     		str	r2, [r3, #20]
  79:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 205              		.loc 1 79 3 is_stmt 1 view .LVU48
  79:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 206              		.loc 1 79 8 is_stmt 0 view .LVU49
 207 0022 264B     		ldr	r3, .L11+4
 208 0024 1868     		ldr	r0, [r3]
  79:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 209              		.loc 1 79 16 view .LVU50
 210 0026 8022     		movs	r2, #128
 211 0028 5202     		lsls	r2, r2, #9
 212 002a 0243     		orrs	r2, r0
 213 002c 1A60     		str	r2, [r3]
  80:Src/main.c    **** 
 214              		.loc 1 80 3 is_stmt 1 view .LVU51
  80:Src/main.c    **** 
 215              		.loc 1 80 8 is_stmt 0 view .LVU52
 216 002e 1868     		ldr	r0, [r3]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 9


  80:Src/main.c    **** 
 217              		.loc 1 80 16 view .LVU53
 218 0030 8022     		movs	r2, #128
 219 0032 D202     		lsls	r2, r2, #11
 220 0034 0243     		orrs	r2, r0
 221 0036 1A60     		str	r2, [r3]
  83:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 222              		.loc 1 83 3 is_stmt 1 view .LVU54
  83:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 223              		.loc 1 83 8 is_stmt 0 view .LVU55
 224 0038 5A68     		ldr	r2, [r3, #4]
  83:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 225              		.loc 1 83 17 view .LVU56
 226 003a 2148     		ldr	r0, .L11+8
 227 003c 0240     		ands	r2, r0
 228 003e 5A60     		str	r2, [r3, #4]
  84:Src/main.c    **** 
 229              		.loc 1 84 3 is_stmt 1 view .LVU57
  84:Src/main.c    **** 
 230              		.loc 1 84 8 is_stmt 0 view .LVU58
 231 0040 5A68     		ldr	r2, [r3, #4]
  84:Src/main.c    **** 
 232              		.loc 1 84 17 view .LVU59
 233 0042 2048     		ldr	r0, .L11+12
 234 0044 0240     		ands	r2, r0
 235 0046 5A60     		str	r2, [r3, #4]
  87:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 236              		.loc 1 87 3 is_stmt 1 view .LVU60
  87:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 237              		.loc 1 87 8 is_stmt 0 view .LVU61
 238 0048 9A68     		ldr	r2, [r3, #8]
  87:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 239              		.loc 1 87 18 view .LVU62
 240 004a 9A60     		str	r2, [r3, #8]
  88:Src/main.c    **** 
 241              		.loc 1 88 3 is_stmt 1 view .LVU63
  88:Src/main.c    **** 
 242              		.loc 1 88 8 is_stmt 0 view .LVU64
 243 004c 9A68     		ldr	r2, [r3, #8]
  88:Src/main.c    **** 
 244              		.loc 1 88 18 view .LVU65
 245 004e 9A60     		str	r2, [r3, #8]
  91:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 246              		.loc 1 91 3 is_stmt 1 view .LVU66
  91:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 247              		.loc 1 91 8 is_stmt 0 view .LVU67
 248 0050 DA68     		ldr	r2, [r3, #12]
  91:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 249              		.loc 1 91 16 view .LVU68
 250 0052 1D48     		ldr	r0, .L11+16
 251 0054 0240     		ands	r2, r0
 252 0056 DA60     		str	r2, [r3, #12]
  92:Src/main.c    **** 
 253              		.loc 1 92 3 is_stmt 1 view .LVU69
  92:Src/main.c    **** 
 254              		.loc 1 92 8 is_stmt 0 view .LVU70
 255 0058 DA68     		ldr	r2, [r3, #12]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 10


  92:Src/main.c    **** 
 256              		.loc 1 92 16 view .LVU71
 257 005a 1C48     		ldr	r0, .L11+20
 258 005c 0240     		ands	r2, r0
 259 005e DA60     		str	r2, [r3, #12]
 104:Src/main.c    **** 
 260              		.loc 1 104 3 is_stmt 1 view .LVU72
 104:Src/main.c    **** 
 261              		.loc 1 104 13 is_stmt 0 view .LVU73
 262 0060 1B4B     		ldr	r3, .L11+24
 263 0062 1C4A     		ldr	r2, .L11+28
 264 0064 9A62     		str	r2, [r3, #40]
 107:Src/main.c    **** 
 265              		.loc 1 107 3 is_stmt 1 view .LVU74
 107:Src/main.c    **** 
 266              		.loc 1 107 13 is_stmt 0 view .LVU75
 267 0066 1C4A     		ldr	r2, .L11+32
 268 0068 DA62     		str	r2, [r3, #44]
 110:Src/main.c    ****   TIM3->CCMR1 &= ~(3 << 8);
 269              		.loc 1 110 3 is_stmt 1 view .LVU76
 110:Src/main.c    ****   TIM3->CCMR1 &= ~(3 << 8);
 270              		.loc 1 110 7 is_stmt 0 view .LVU77
 271 006a 9A69     		ldr	r2, [r3, #24]
 110:Src/main.c    ****   TIM3->CCMR1 &= ~(3 << 8);
 272              		.loc 1 110 15 view .LVU78
 273 006c 0320     		movs	r0, #3
 274 006e 8243     		bics	r2, r0
 275 0070 9A61     		str	r2, [r3, #24]
 111:Src/main.c    **** 
 276              		.loc 1 111 3 is_stmt 1 view .LVU79
 111:Src/main.c    **** 
 277              		.loc 1 111 7 is_stmt 0 view .LVU80
 278 0072 9A69     		ldr	r2, [r3, #24]
 111:Src/main.c    **** 
 279              		.loc 1 111 15 view .LVU81
 280 0074 1948     		ldr	r0, .L11+36
 281 0076 0240     		ands	r2, r0
 282 0078 9A61     		str	r2, [r3, #24]
 114:Src/main.c    ****   // Set OC2M to 110 to set the output to PWM mode 1
 283              		.loc 1 114 3 is_stmt 1 view .LVU82
 114:Src/main.c    ****   // Set OC2M to 110 to set the output to PWM mode 1
 284              		.loc 1 114 7 is_stmt 0 view .LVU83
 285 007a 9A69     		ldr	r2, [r3, #24]
 114:Src/main.c    ****   // Set OC2M to 110 to set the output to PWM mode 1
 286              		.loc 1 114 15 view .LVU84
 287 007c 7020     		movs	r0, #112
 288 007e 0243     		orrs	r2, r0
 289 0080 9A61     		str	r2, [r3, #24]
 116:Src/main.c    **** 
 290              		.loc 1 116 3 is_stmt 1 view .LVU85
 116:Src/main.c    **** 
 291              		.loc 1 116 7 is_stmt 0 view .LVU86
 292 0082 9869     		ldr	r0, [r3, #24]
 116:Src/main.c    **** 
 293              		.loc 1 116 15 view .LVU87
 294 0084 C022     		movs	r2, #192
 295 0086 D201     		lsls	r2, r2, #7
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 11


 296 0088 0243     		orrs	r2, r0
 297 008a 9A61     		str	r2, [r3, #24]
 119:Src/main.c    ****   TIM3->CCMR1 |= (1 << 11);
 298              		.loc 1 119 3 is_stmt 1 view .LVU88
 119:Src/main.c    ****   TIM3->CCMR1 |= (1 << 11);
 299              		.loc 1 119 7 is_stmt 0 view .LVU89
 300 008c 9A69     		ldr	r2, [r3, #24]
 119:Src/main.c    ****   TIM3->CCMR1 |= (1 << 11);
 301              		.loc 1 119 15 view .LVU90
 302 008e 0820     		movs	r0, #8
 303 0090 0243     		orrs	r2, r0
 304 0092 9A61     		str	r2, [r3, #24]
 120:Src/main.c    **** 
 305              		.loc 1 120 3 is_stmt 1 view .LVU91
 120:Src/main.c    **** 
 306              		.loc 1 120 7 is_stmt 0 view .LVU92
 307 0094 9869     		ldr	r0, [r3, #24]
 120:Src/main.c    **** 
 308              		.loc 1 120 15 view .LVU93
 309 0096 8022     		movs	r2, #128
 310 0098 1201     		lsls	r2, r2, #4
 311 009a 0243     		orrs	r2, r0
 312 009c 9A61     		str	r2, [r3, #24]
 123:Src/main.c    ****   TIM3->CCER |= (1 << 4);
 313              		.loc 1 123 3 is_stmt 1 view .LVU94
 123:Src/main.c    ****   TIM3->CCER |= (1 << 4);
 314              		.loc 1 123 7 is_stmt 0 view .LVU95
 315 009e 1A6A     		ldr	r2, [r3, #32]
 123:Src/main.c    ****   TIM3->CCER |= (1 << 4);
 316              		.loc 1 123 14 view .LVU96
 317 00a0 0A43     		orrs	r2, r1
 318 00a2 1A62     		str	r2, [r3, #32]
 124:Src/main.c    **** 
 319              		.loc 1 124 3 is_stmt 1 view .LVU97
 124:Src/main.c    **** 
 320              		.loc 1 124 7 is_stmt 0 view .LVU98
 321 00a4 1A6A     		ldr	r2, [r3, #32]
 124:Src/main.c    **** 
 322              		.loc 1 124 14 view .LVU99
 323 00a6 0F31     		adds	r1, r1, #15
 324 00a8 0A43     		orrs	r2, r1
 325 00aa 1A62     		str	r2, [r3, #32]
 127:Src/main.c    ****   TIM3->CCR2 = 250;
 326              		.loc 1 127 3 is_stmt 1 view .LVU100
 127:Src/main.c    ****   TIM3->CCR2 = 250;
 327              		.loc 1 127 14 is_stmt 0 view .LVU101
 328 00ac FA22     		movs	r2, #250
 329 00ae 5A63     		str	r2, [r3, #52]
 128:Src/main.c    **** 
 330              		.loc 1 128 3 is_stmt 1 view .LVU102
 128:Src/main.c    **** 
 331              		.loc 1 128 14 is_stmt 0 view .LVU103
 332 00b0 9A63     		str	r2, [r3, #56]
 132:Src/main.c    **** 
 333              		.loc 1 132 1 view .LVU104
 334 00b2 0020     		movs	r0, #0
 335              		@ sp needed
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 12


 336 00b4 10BD     		pop	{r4, pc}
 337              	.L12:
 338 00b6 C046     		.align	2
 339              	.L11:
 340 00b8 00100240 		.word	1073876992
 341 00bc 00080048 		.word	1207961600
 342 00c0 FFFEFFFF 		.word	-257
 343 00c4 FFFDFFFF 		.word	-513
 344 00c8 FFFFFCFF 		.word	-196609
 345 00cc FFFFF3FF 		.word	-786433
 346 00d0 00040040 		.word	1073742848
 347 00d4 3F1F0000 		.word	7999
 348 00d8 E2040000 		.word	1250
 349 00dc FFFCFFFF 		.word	-769
 350              		.cfi_endproc
 351              	.LFE40:
 353              		.text
 354              	.Letext0:
 355              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 356              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 357              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 358              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 359              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 360              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s:19     .text._Error_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s:162    .text.main:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s:168    .text.main:00000000 main
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccr7cde3.s:340    .text.main:000000b8 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
