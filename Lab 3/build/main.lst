ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * File Name          : main.c
   5:Src/main.c    ****   * Description        : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  41:Src/main.c    **** #include "main.h"
  42:Src/main.c    **** #include "stm32f0xx_hal.h"
  43:Src/main.c    **** void _Error_Handler(char * file, int line);
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** int main(void)
  70:Src/main.c    **** {
  71:Src/main.c    ****   SystemClock_Config();
  72:Src/main.c    **** 
  73:Src/main.c    ****   // Enable TIM3, PC6 (Red LED), PC7 (Blue LED)
  74:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
  75:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  76:Src/main.c    **** 
  77:Src/main.c    ****   // Set PC6 and PC7 to alternate function mode
  78:Src/main.c    ****   GPIOC->MODER &= ~(3 << 12);
  79:Src/main.c    ****   GPIOC->MODER |= (2 << 12);
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
  81:Src/main.c    ****   GPIOC->MODER |= (2 << 14);
  82:Src/main.c    **** 
  83:Src/main.c    ****   // Set PC6 and PC7 to low speed
  84:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 12);
  85:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
  86:Src/main.c    **** 
  87:Src/main.c    ****   // Set PC6 and PC7 to no pull-up, no pull-down
  88:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 12);
  89:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   // Target Frequency = Clock Frequency / PSC * ARR
  92:Src/main.c    ****   // Target Frequency = 800Hz
  93:Src/main.c    ****   // Clock Frequency = 8MHz
  94:Src/main.c    **** 
  95:Src/main.c    ****   // Set TIM3 PSC to 999 to get 8kHz
  96:Src/main.c    ****   TIM3->PSC = 999;
  97:Src/main.c    **** 
  98:Src/main.c    ****   // Set TIM3 ARR to 10 to get 800Hz
  99:Src/main.c    ****   TIM3->ARR = 10;
 100:Src/main.c    **** 
 101:Src/main.c    ****   // Set CC1S and CC2S to 00 to set the channels as output
 102:Src/main.c    ****   TIM3->CCMR1 &= ~(3 << 0);
 103:Src/main.c    ****   TIM3->CCMR1 &= ~(3 << 8);
 104:Src/main.c    **** 
 105:Src/main.c    ****   // Set OC1M to 111 to set to PWM mode 2
 106:Src/main.c    ****   TIM3->CCMR1 |= (7 << 4);
 107:Src/main.c    ****   // Set OC2M to 110 to set to PWM mode 1
 108:Src/main.c    ****   TIM3->CCMR1 |= (6 << 12);
 109:Src/main.c    **** 
 110:Src/main.c    ****   // Set OC1PE and OC2PE to 1 to enable preload
 111:Src/main.c    ****   TIM3->CCMR1 |= (1 << 3);
 112:Src/main.c    ****   TIM3->CCMR1 |= (1 << 11);
 113:Src/main.c    **** 
 114:Src/main.c    ****   // Set the output enable bits for channel 1 and 2 in the CCER register
 115:Src/main.c    ****   TIM3->CCER |= TIM_CCER_CC1E;
 116:Src/main.c    ****   TIM3->CCER |= TIM_CCER_CC2E;
 117:Src/main.c    **** 
 118:Src/main.c    ****   // Set the capture/compare registers (CCRx) for both channels to 20% of ARR value.
 119:Src/main.c    ****   TIM3->CCR1 = 2;
 120:Src/main.c    ****   TIM3->CCR2 = 2;
 121:Src/main.c    **** 
 122:Src/main.c    ****   // Set PC6 and PC7 to AF0 to use TIM3 for PWM output
 123:Src/main.c    ****   GPIOC->AFR[0] &= ~(0xF << 24); // Clear AFRL6
 124:Src/main.c    ****   GPIOC->AFR[0] |= (0 << 24); // Set AFRL6 to AF0
 125:Src/main.c    ****   GPIOC->AFR[0] &= ~(0xF << 28); // Clear AFRL7
 126:Src/main.c    ****   GPIOC->AFR[0] |= (0 << 28); // Set AFRL7 to AF0
 127:Src/main.c    **** 
 128:Src/main.c    ****   // Enable the counter
 129:Src/main.c    ****   TIM3->CR1 |= TIM_CR1_CEN;
 130:Src/main.c    **** 
 131:Src/main.c    ****   while(1) {
 132:Src/main.c    **** 
 133:Src/main.c    ****   }
 134:Src/main.c    **** 
 135:Src/main.c    **** }
 136:Src/main.c    **** 
 137:Src/main.c    **** /** System Clock Configuration
 138:Src/main.c    **** */
 139:Src/main.c    **** void SystemClock_Config(void)
 140:Src/main.c    **** {
 141:Src/main.c    **** 
 142:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 143:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 144:Src/main.c    **** 
 145:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 146:Src/main.c    ****     */
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 4


 147:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 148:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 149:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 151:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 152:Src/main.c    ****   {
 153:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 154:Src/main.c    ****   }
 155:Src/main.c    **** 
 156:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 157:Src/main.c    ****     */
 158:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 159:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 160:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 161:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 162:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 163:Src/main.c    **** 
 164:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 165:Src/main.c    ****   {
 166:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 167:Src/main.c    ****   }
 168:Src/main.c    **** 
 169:Src/main.c    ****     /**Configure the Systick interrupt time
 170:Src/main.c    ****     */
 171:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 172:Src/main.c    **** 
 173:Src/main.c    ****     /**Configure the Systick
 174:Src/main.c    ****     */
 175:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 176:Src/main.c    **** 
 177:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 178:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 179:Src/main.c    **** }
 180:Src/main.c    **** 
 181:Src/main.c    **** /* USER CODE BEGIN 4 */
 182:Src/main.c    **** 
 183:Src/main.c    **** /* USER CODE END 4 */
 184:Src/main.c    **** 
 185:Src/main.c    **** /**
 186:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 187:Src/main.c    ****   * @param  None
 188:Src/main.c    ****   * @retval None
 189:Src/main.c    ****   */
 190:Src/main.c    **** void _Error_Handler(char * file, int line)
 191:Src/main.c    **** {
  27              		.loc 1 191 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 192:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 193:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 194:Src/main.c    ****   while(1)
  35              		.loc 1 194 3 view .LVU1
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 5


 195:Src/main.c    ****   {
 196:Src/main.c    ****   }
  36              		.loc 1 196 3 view .LVU2
 194:Src/main.c    ****   {
  37              		.loc 1 194 8 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  43              		.align	2
  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 140:Src/main.c    **** 
  56              		.loc 1 140 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 142:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 142 3 view .LVU5
 143:Src/main.c    **** 
  68              		.loc 1 143 3 view .LVU6
 147:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 147 3 view .LVU7
 147:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 147 36 is_stmt 0 view .LVU8
  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 148:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 148 3 is_stmt 1 view .LVU9
 148:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 148 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 149 3 is_stmt 1 view .LVU11
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 149 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 6


 150:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 150 3 is_stmt 1 view .LVU13
 150:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 150 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
 151:Src/main.c    ****   {
  85              		.loc 1 151 3 is_stmt 1 view .LVU15
 151:Src/main.c    ****   {
  86              		.loc 1 151 7 is_stmt 0 view .LVU16
  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL1:
 151:Src/main.c    ****   {
  90              		.loc 1 151 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
 158:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  93              		.loc 1 158 3 is_stmt 1 view .LVU18
 158:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  94              		.loc 1 158 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 160:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 160 3 is_stmt 1 view .LVU20
 160:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 160 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 161:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 161 3 is_stmt 1 view .LVU22
 161:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 161 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 162:Src/main.c    **** 
 104              		.loc 1 162 3 is_stmt 1 view .LVU24
 162:Src/main.c    **** 
 105              		.loc 1 162 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
 164:Src/main.c    ****   {
 107              		.loc 1 164 3 is_stmt 1 view .LVU26
 164:Src/main.c    ****   {
 108              		.loc 1 164 7 is_stmt 0 view .LVU27
 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
 164:Src/main.c    ****   {
 113              		.loc 1 164 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 171:Src/main.c    **** 
 116              		.loc 1 171 3 is_stmt 1 view .LVU29
 171:Src/main.c    **** 
 117              		.loc 1 171 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 7


 171:Src/main.c    **** 
 120              		.loc 1 171 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 175:Src/main.c    **** 
 127              		.loc 1 175 3 is_stmt 1 view .LVU32
 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 178:Src/main.c    **** }
 131              		.loc 1 178 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
 134 0050 0021     		movs	r1, #0
 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 179:Src/main.c    **** 
 138              		.loc 1 179 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 153:Src/main.c    ****   }
 143              		.loc 1 153 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e 9921     		movs	r1, #153
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 166:Src/main.c    ****   }
 149              		.loc 1 166 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
 151 0066 A621     		movs	r1, #166
 152 0068 FFF7FEFF 		bl	_Error_Handler
 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  70:Src/main.c    ****   SystemClock_Config();
 170              		.loc 1 70 1 view -0
 171              		.cfi_startproc
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 8


 172              		@ Volatile: function does not return.
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 70B5     		push	{r4, r5, r6, lr}
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 16
 178              		.cfi_offset 4, -16
 179              		.cfi_offset 5, -12
 180              		.cfi_offset 6, -8
 181              		.cfi_offset 14, -4
  71:Src/main.c    **** 
 182              		.loc 1 71 3 view .LVU38
 183 0002 FFF7FEFF 		bl	SystemClock_Config
 184              	.LVL10:
  74:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 185              		.loc 1 74 3 view .LVU39
  74:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 186              		.loc 1 74 6 is_stmt 0 view .LVU40
 187 0006 314B     		ldr	r3, .L12
 188 0008 DA69     		ldr	r2, [r3, #28]
  74:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 189              		.loc 1 74 16 view .LVU41
 190 000a 0221     		movs	r1, #2
 191 000c 0A43     		orrs	r2, r1
 192 000e DA61     		str	r2, [r3, #28]
  75:Src/main.c    **** 
 193              		.loc 1 75 3 is_stmt 1 view .LVU42
  75:Src/main.c    **** 
 194              		.loc 1 75 6 is_stmt 0 view .LVU43
 195 0010 5869     		ldr	r0, [r3, #20]
  75:Src/main.c    **** 
 196              		.loc 1 75 15 view .LVU44
 197 0012 8022     		movs	r2, #128
 198 0014 1203     		lsls	r2, r2, #12
 199 0016 0243     		orrs	r2, r0
 200 0018 5A61     		str	r2, [r3, #20]
  78:Src/main.c    ****   GPIOC->MODER |= (2 << 12);
 201              		.loc 1 78 3 is_stmt 1 view .LVU45
  78:Src/main.c    ****   GPIOC->MODER |= (2 << 12);
 202              		.loc 1 78 8 is_stmt 0 view .LVU46
 203 001a 2D4B     		ldr	r3, .L12+4
 204 001c 1A68     		ldr	r2, [r3]
  78:Src/main.c    ****   GPIOC->MODER |= (2 << 12);
 205              		.loc 1 78 16 view .LVU47
 206 001e 2D4C     		ldr	r4, .L12+8
 207 0020 2240     		ands	r2, r4
 208 0022 1A60     		str	r2, [r3]
  79:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 209              		.loc 1 79 3 is_stmt 1 view .LVU48
  79:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 210              		.loc 1 79 8 is_stmt 0 view .LVU49
 211 0024 1868     		ldr	r0, [r3]
  79:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 212              		.loc 1 79 16 view .LVU50
 213 0026 8022     		movs	r2, #128
 214 0028 9201     		lsls	r2, r2, #6
 215 002a 0243     		orrs	r2, r0
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 9


 216 002c 1A60     		str	r2, [r3]
  80:Src/main.c    ****   GPIOC->MODER |= (2 << 14);
 217              		.loc 1 80 3 is_stmt 1 view .LVU51
  80:Src/main.c    ****   GPIOC->MODER |= (2 << 14);
 218              		.loc 1 80 8 is_stmt 0 view .LVU52
 219 002e 1A68     		ldr	r2, [r3]
  80:Src/main.c    ****   GPIOC->MODER |= (2 << 14);
 220              		.loc 1 80 16 view .LVU53
 221 0030 2948     		ldr	r0, .L12+12
 222 0032 0240     		ands	r2, r0
 223 0034 1A60     		str	r2, [r3]
  81:Src/main.c    **** 
 224              		.loc 1 81 3 is_stmt 1 view .LVU54
  81:Src/main.c    **** 
 225              		.loc 1 81 8 is_stmt 0 view .LVU55
 226 0036 1D68     		ldr	r5, [r3]
  81:Src/main.c    **** 
 227              		.loc 1 81 16 view .LVU56
 228 0038 8022     		movs	r2, #128
 229 003a 1202     		lsls	r2, r2, #8
 230 003c 2A43     		orrs	r2, r5
 231 003e 1A60     		str	r2, [r3]
  84:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
 232              		.loc 1 84 3 is_stmt 1 view .LVU57
  84:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
 233              		.loc 1 84 8 is_stmt 0 view .LVU58
 234 0040 9A68     		ldr	r2, [r3, #8]
  84:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
 235              		.loc 1 84 18 view .LVU59
 236 0042 2240     		ands	r2, r4
 237 0044 9A60     		str	r2, [r3, #8]
  85:Src/main.c    **** 
 238              		.loc 1 85 3 is_stmt 1 view .LVU60
  85:Src/main.c    **** 
 239              		.loc 1 85 8 is_stmt 0 view .LVU61
 240 0046 9A68     		ldr	r2, [r3, #8]
  85:Src/main.c    **** 
 241              		.loc 1 85 18 view .LVU62
 242 0048 0240     		ands	r2, r0
 243 004a 9A60     		str	r2, [r3, #8]
  88:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 244              		.loc 1 88 3 is_stmt 1 view .LVU63
  88:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 245              		.loc 1 88 8 is_stmt 0 view .LVU64
 246 004c DA68     		ldr	r2, [r3, #12]
  88:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 247              		.loc 1 88 16 view .LVU65
 248 004e 2240     		ands	r2, r4
 249 0050 DA60     		str	r2, [r3, #12]
  89:Src/main.c    **** 
 250              		.loc 1 89 3 is_stmt 1 view .LVU66
  89:Src/main.c    **** 
 251              		.loc 1 89 8 is_stmt 0 view .LVU67
 252 0052 DA68     		ldr	r2, [r3, #12]
  89:Src/main.c    **** 
 253              		.loc 1 89 16 view .LVU68
 254 0054 0240     		ands	r2, r0
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 10


 255 0056 DA60     		str	r2, [r3, #12]
  96:Src/main.c    **** 
 256              		.loc 1 96 3 is_stmt 1 view .LVU69
  96:Src/main.c    **** 
 257              		.loc 1 96 13 is_stmt 0 view .LVU70
 258 0058 204A     		ldr	r2, .L12+16
 259 005a 2148     		ldr	r0, .L12+20
 260 005c 9062     		str	r0, [r2, #40]
  99:Src/main.c    **** 
 261              		.loc 1 99 3 is_stmt 1 view .LVU71
  99:Src/main.c    **** 
 262              		.loc 1 99 13 is_stmt 0 view .LVU72
 263 005e 0A20     		movs	r0, #10
 264 0060 D062     		str	r0, [r2, #44]
 102:Src/main.c    ****   TIM3->CCMR1 &= ~(3 << 8);
 265              		.loc 1 102 3 is_stmt 1 view .LVU73
 102:Src/main.c    ****   TIM3->CCMR1 &= ~(3 << 8);
 266              		.loc 1 102 7 is_stmt 0 view .LVU74
 267 0062 9069     		ldr	r0, [r2, #24]
 102:Src/main.c    ****   TIM3->CCMR1 &= ~(3 << 8);
 268              		.loc 1 102 15 view .LVU75
 269 0064 0324     		movs	r4, #3
 270 0066 A043     		bics	r0, r4
 271 0068 9061     		str	r0, [r2, #24]
 103:Src/main.c    **** 
 272              		.loc 1 103 3 is_stmt 1 view .LVU76
 103:Src/main.c    **** 
 273              		.loc 1 103 7 is_stmt 0 view .LVU77
 274 006a 9069     		ldr	r0, [r2, #24]
 103:Src/main.c    **** 
 275              		.loc 1 103 15 view .LVU78
 276 006c 1D4C     		ldr	r4, .L12+24
 277 006e 2040     		ands	r0, r4
 278 0070 9061     		str	r0, [r2, #24]
 106:Src/main.c    ****   // Set OC2M to 110 to set to PWM mode 1
 279              		.loc 1 106 3 is_stmt 1 view .LVU79
 106:Src/main.c    ****   // Set OC2M to 110 to set to PWM mode 1
 280              		.loc 1 106 7 is_stmt 0 view .LVU80
 281 0072 9069     		ldr	r0, [r2, #24]
 106:Src/main.c    ****   // Set OC2M to 110 to set to PWM mode 1
 282              		.loc 1 106 15 view .LVU81
 283 0074 7024     		movs	r4, #112
 284 0076 2043     		orrs	r0, r4
 285 0078 9061     		str	r0, [r2, #24]
 108:Src/main.c    **** 
 286              		.loc 1 108 3 is_stmt 1 view .LVU82
 108:Src/main.c    **** 
 287              		.loc 1 108 7 is_stmt 0 view .LVU83
 288 007a 9469     		ldr	r4, [r2, #24]
 108:Src/main.c    **** 
 289              		.loc 1 108 15 view .LVU84
 290 007c C020     		movs	r0, #192
 291 007e C001     		lsls	r0, r0, #7
 292 0080 2043     		orrs	r0, r4
 293 0082 9061     		str	r0, [r2, #24]
 111:Src/main.c    ****   TIM3->CCMR1 |= (1 << 11);
 294              		.loc 1 111 3 is_stmt 1 view .LVU85
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 11


 111:Src/main.c    ****   TIM3->CCMR1 |= (1 << 11);
 295              		.loc 1 111 7 is_stmt 0 view .LVU86
 296 0084 9069     		ldr	r0, [r2, #24]
 111:Src/main.c    ****   TIM3->CCMR1 |= (1 << 11);
 297              		.loc 1 111 15 view .LVU87
 298 0086 0824     		movs	r4, #8
 299 0088 2043     		orrs	r0, r4
 300 008a 9061     		str	r0, [r2, #24]
 112:Src/main.c    **** 
 301              		.loc 1 112 3 is_stmt 1 view .LVU88
 112:Src/main.c    **** 
 302              		.loc 1 112 7 is_stmt 0 view .LVU89
 303 008c 9469     		ldr	r4, [r2, #24]
 112:Src/main.c    **** 
 304              		.loc 1 112 15 view .LVU90
 305 008e 8020     		movs	r0, #128
 306 0090 0001     		lsls	r0, r0, #4
 307 0092 2043     		orrs	r0, r4
 308 0094 9061     		str	r0, [r2, #24]
 115:Src/main.c    ****   TIM3->CCER |= TIM_CCER_CC2E;
 309              		.loc 1 115 3 is_stmt 1 view .LVU91
 115:Src/main.c    ****   TIM3->CCER |= TIM_CCER_CC2E;
 310              		.loc 1 115 7 is_stmt 0 view .LVU92
 311 0096 106A     		ldr	r0, [r2, #32]
 115:Src/main.c    ****   TIM3->CCER |= TIM_CCER_CC2E;
 312              		.loc 1 115 14 view .LVU93
 313 0098 0124     		movs	r4, #1
 314 009a 2043     		orrs	r0, r4
 315 009c 1062     		str	r0, [r2, #32]
 116:Src/main.c    **** 
 316              		.loc 1 116 3 is_stmt 1 view .LVU94
 116:Src/main.c    **** 
 317              		.loc 1 116 7 is_stmt 0 view .LVU95
 318 009e 106A     		ldr	r0, [r2, #32]
 116:Src/main.c    **** 
 319              		.loc 1 116 14 view .LVU96
 320 00a0 1025     		movs	r5, #16
 321 00a2 2843     		orrs	r0, r5
 322 00a4 1062     		str	r0, [r2, #32]
 119:Src/main.c    ****   TIM3->CCR2 = 2;
 323              		.loc 1 119 3 is_stmt 1 view .LVU97
 119:Src/main.c    ****   TIM3->CCR2 = 2;
 324              		.loc 1 119 14 is_stmt 0 view .LVU98
 325 00a6 5163     		str	r1, [r2, #52]
 120:Src/main.c    **** 
 326              		.loc 1 120 3 is_stmt 1 view .LVU99
 120:Src/main.c    **** 
 327              		.loc 1 120 14 is_stmt 0 view .LVU100
 328 00a8 9163     		str	r1, [r2, #56]
 123:Src/main.c    ****   GPIOC->AFR[0] |= (0 << 24); // Set AFRL6 to AF0
 329              		.loc 1 123 3 is_stmt 1 view .LVU101
 123:Src/main.c    ****   GPIOC->AFR[0] |= (0 << 24); // Set AFRL6 to AF0
 330              		.loc 1 123 13 is_stmt 0 view .LVU102
 331 00aa 196A     		ldr	r1, [r3, #32]
 123:Src/main.c    ****   GPIOC->AFR[0] |= (0 << 24); // Set AFRL6 to AF0
 332              		.loc 1 123 17 view .LVU103
 333 00ac 0E48     		ldr	r0, .L12+28
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 12


 334 00ae 0140     		ands	r1, r0
 335 00b0 1962     		str	r1, [r3, #32]
 124:Src/main.c    ****   GPIOC->AFR[0] &= ~(0xF << 28); // Clear AFRL7
 336              		.loc 1 124 3 is_stmt 1 view .LVU104
 124:Src/main.c    ****   GPIOC->AFR[0] &= ~(0xF << 28); // Clear AFRL7
 337              		.loc 1 124 13 is_stmt 0 view .LVU105
 338 00b2 196A     		ldr	r1, [r3, #32]
 124:Src/main.c    ****   GPIOC->AFR[0] &= ~(0xF << 28); // Clear AFRL7
 339              		.loc 1 124 17 view .LVU106
 340 00b4 1962     		str	r1, [r3, #32]
 125:Src/main.c    ****   GPIOC->AFR[0] |= (0 << 28); // Set AFRL7 to AF0
 341              		.loc 1 125 3 is_stmt 1 view .LVU107
 125:Src/main.c    ****   GPIOC->AFR[0] |= (0 << 28); // Set AFRL7 to AF0
 342              		.loc 1 125 13 is_stmt 0 view .LVU108
 343 00b6 196A     		ldr	r1, [r3, #32]
 125:Src/main.c    ****   GPIOC->AFR[0] |= (0 << 28); // Set AFRL7 to AF0
 344              		.loc 1 125 17 view .LVU109
 345 00b8 0901     		lsls	r1, r1, #4
 346 00ba 0909     		lsrs	r1, r1, #4
 347 00bc 1962     		str	r1, [r3, #32]
 126:Src/main.c    **** 
 348              		.loc 1 126 3 is_stmt 1 view .LVU110
 126:Src/main.c    **** 
 349              		.loc 1 126 13 is_stmt 0 view .LVU111
 350 00be 196A     		ldr	r1, [r3, #32]
 126:Src/main.c    **** 
 351              		.loc 1 126 17 view .LVU112
 352 00c0 1962     		str	r1, [r3, #32]
 129:Src/main.c    **** 
 353              		.loc 1 129 3 is_stmt 1 view .LVU113
 129:Src/main.c    **** 
 354              		.loc 1 129 7 is_stmt 0 view .LVU114
 355 00c2 1368     		ldr	r3, [r2]
 129:Src/main.c    **** 
 356              		.loc 1 129 13 view .LVU115
 357 00c4 2343     		orrs	r3, r4
 358 00c6 1360     		str	r3, [r2]
 359              	.L11:
 131:Src/main.c    **** 
 360              		.loc 1 131 3 is_stmt 1 view .LVU116
 133:Src/main.c    **** 
 361              		.loc 1 133 3 view .LVU117
 131:Src/main.c    **** 
 362              		.loc 1 131 8 view .LVU118
 363 00c8 FEE7     		b	.L11
 364              	.L13:
 365 00ca C046     		.align	2
 366              	.L12:
 367 00cc 00100240 		.word	1073876992
 368 00d0 00080048 		.word	1207961600
 369 00d4 FFCFFFFF 		.word	-12289
 370 00d8 FF3FFFFF 		.word	-49153
 371 00dc 00040040 		.word	1073742848
 372 00e0 E7030000 		.word	999
 373 00e4 FFFCFFFF 		.word	-769
 374 00e8 FFFFFFF0 		.word	-251658241
 375              		.cfi_endproc
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 13


 376              	.LFE40:
 378              		.text
 379              	.Letext0:
 380              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 381              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 382              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 383              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 384              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 385              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s:19     .text._Error_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s:162    .text.main:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s:168    .text.main:00000000 main
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cc8zntnG.s:367    .text.main:000000cc $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
