ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****  *
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * File Name          : main.c
   5:Src/main.c    ****  * Description        : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  ** This notice applies to any and all portions of this file
   8:Src/main.c    ****  * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****  * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****  * inserted by the user or by software development tools
  11:Src/main.c    ****  * are owned by their respective copyright owners.
  12:Src/main.c    ****  *
  13:Src/main.c    ****  * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****  *
  15:Src/main.c    ****  * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****  * are permitted provided that the following conditions are met:
  17:Src/main.c    ****  *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****  *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****  *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****  *      and/or other materials provided with the distribution.
  22:Src/main.c    ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****  *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****  *      without specific prior written permission.
  25:Src/main.c    ****  *
  26:Src/main.c    ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 2


  33:Src/main.c    ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****  *
  37:Src/main.c    ****  ******************************************************************************
  38:Src/main.c    ****  */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  41:Src/main.c    **** #include "main.h"
  42:Src/main.c    **** #include "stm32f0xx_hal.h"
  43:Src/main.c    **** void _Error_Handler(char *file, int line);
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** int main(void)
  69:Src/main.c    **** {
  70:Src/main.c    ****   SystemClock_Config();
  71:Src/main.c    **** 
  72:Src/main.c    ****   // Enable GPIOB and GPOIC
  73:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN | RCC_AHBENR_GPIOCEN;
  74:Src/main.c    **** 
  75:Src/main.c    ****   // Enable I2C Clock
  76:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
  77:Src/main.c    **** 
  78:Src/main.c    ****   // Enable LED's 6-9
  79:Src/main.c    ****   // Clear the bits for PC6-9
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 12);
  81:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
  82:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
  83:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
  84:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
  85:Src/main.c    ****   GPIOC->MODER |= (1 << 12);
  86:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
  87:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
  88:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
  89:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 3


  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
  91:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
  92:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
  93:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
  94:Src/main.c    ****   // Set PC6-9 to Low Speed
  95:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 12);
  96:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
  97:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
  98:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
  99:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 12);
 101:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 102:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 103:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 104:Src/main.c    **** 
 105:Src/main.c    ****   // Set PB11 to AF1 (I2C2_SDA), open-drain mode
 106:Src/main.c    ****   GPIOB->MODER |= (1 << 23);
 107:Src/main.c    ****   GPIOB->OTYPER |= (1 << 11);
 108:Src/main.c    ****   GPIOB->AFR[1] |= (1 << 12);
 109:Src/main.c    ****   GPIOB->AFR[1] &= ~(1 << 13) | ~(1 << 14) | ~(1 << 15);
 110:Src/main.c    **** 
 111:Src/main.c    ****   // Set PB13 to AF5, open-drain mode
 112:Src/main.c    ****   GPIOB->MODER &= ~(1 << 26);
 113:Src/main.c    ****   GPIOB->MODER |= (1 << 27);
 114:Src/main.c    ****   GPIOB->OTYPER |= (1 << 13);
 115:Src/main.c    ****   GPIOB->AFR[1] &= ~(1 << 21) | ~(1 << 23);
 116:Src/main.c    ****   GPIOB->AFR[1] |= (1 << 20) | (1 << 22);
 117:Src/main.c    **** 
 118:Src/main.c    ****   // Set PB14 to output mode, push-pull, and set high
 119:Src/main.c    ****   GPIOB->MODER |= (1 << 28);
 120:Src/main.c    ****   GPIOB->MODER &= ~(1 << 29);
 121:Src/main.c    ****   GPIOB->OTYPER &= ~(1 << 14);
 122:Src/main.c    ****   GPIOB->ODR |= (1 << 14);
 123:Src/main.c    **** 
 124:Src/main.c    ****   // Set PC0 to output mode, push-pull, and set high
 125:Src/main.c    ****   GPIOC->MODER &= ~(1 << 1);
 126:Src/main.c    ****   GPIOC->MODER |= (1 << 0);
 127:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 0);
 128:Src/main.c    ****   GPIOC->ODR |= (1 << 0);
 129:Src/main.c    **** 
 130:Src/main.c    ****   // Set the I2C2 clock to 100 kHz
 131:Src/main.c    ****   I2C2->TIMINGR = (0x1 << 28) | (0x13 << 0) | (0xF << 8) | (0x2 << 16) | (0x4 << 20);
 132:Src/main.c    **** 
 133:Src/main.c    ****   // Enable I2C2
 134:Src/main.c    ****   I2C2->CR1 |= I2C_CR1_PE;
 135:Src/main.c    **** 
 136:Src/main.c    ****   // Set PC6 (red) to high to signal I2C start
 137:Src/main.c    ****   GPIOC->ODR |= (1 << 6);
 138:Src/main.c    **** 
 139:Src/main.c    ****   // Set I2C2_CR2 SADD to 0x69 (slave address set)
 140:Src/main.c    ****   I2C2->CR2 |= (1 << 16) | (0x69 << 1);
 141:Src/main.c    **** 
 142:Src/main.c    ****   // Set RD_WRN to WRN
 143:Src/main.c    ****   I2C2->CR2 &= ~I2C_CR2_RD_WRN;
 144:Src/main.c    **** 
 145:Src/main.c    ****   // Set the START bit
 146:Src/main.c    ****   I2C2->CR2 |= (1 << 13);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****   while (1)
 149:Src/main.c    ****   { // Check for TXIS flag (bit 1)
 150:Src/main.c    ****     if ((I2C2->ISR & (1 << 1)))
 151:Src/main.c    ****     {
 152:Src/main.c    ****       // Slave did not respond to the address frame
 153:Src/main.c    ****       // Just continue
 154:Src/main.c    ****       // Set PC6 (red) to low to signal I2C stop
 155:Src/main.c    ****       GPIOC->ODR &= ~(1 << 6);
 156:Src/main.c    ****       break;
 157:Src/main.c    ****     }
 158:Src/main.c    ****     // Check for NACKF flag
 159:Src/main.c    ****     else if ((I2C2->ISR & (1 << 4)))
 160:Src/main.c    ****     {
 161:Src/main.c    **** 
 162:Src/main.c    ****       // Wiring or configuration error
 163:Src/main.c    ****     }
 164:Src/main.c    ****   }
 165:Src/main.c    ****   // Send the WHO_AM_I register address
 166:Src/main.c    ****   I2C2->TXDR = 0x0F;
 167:Src/main.c    **** 
 168:Src/main.c    ****   // Wait for the TC flag to be set
 169:Src/main.c    ****   while (!(I2C2->ISR & (1 << 6)))
 170:Src/main.c    ****     ;
 171:Src/main.c    **** 
 172:Src/main.c    ****   // Reset CR2
 173:Src/main.c    ****   // Set CR2 to 0
 174:Src/main.c    ****   I2C2->CR2 = 0;
 175:Src/main.c    **** 
 176:Src/main.c    ****   // Set I2C2_CR2 SADD to 0011010010 (0x69) (slave address set)
 177:Src/main.c    ****   I2C2->CR2 |= (1 << 16) | (0x69 << 1);
 178:Src/main.c    **** 
 179:Src/main.c    ****   // Set the RD_WRN bit to 1 (read)
 180:Src/main.c    ****   I2C2->CR2 |= I2C_CR2_RD_WRN;
 181:Src/main.c    **** 
 182:Src/main.c    ****   // Set the START bit
 183:Src/main.c    ****   I2C2->CR2 |= (1 << 13);
 184:Src/main.c    **** 
 185:Src/main.c    ****   // Wait until the RXNE or NACKF flag is set
 186:Src/main.c    ****   while (1)
 187:Src/main.c    ****   {
 188:Src/main.c    ****     // If NACKF flag is set
 189:Src/main.c    ****     if (I2C2->ISR & (1 << 4))
 190:Src/main.c    ****     {
 191:Src/main.c    ****       // Slave did not respond to the address frame
 192:Src/main.c    ****       // Just continue
 193:Src/main.c    ****       // Set PC6 (red) to low to signal I2C stop
 194:Src/main.c    ****       GPIOC->ODR &= ~(1 << 6);
 195:Src/main.c    ****     }
 196:Src/main.c    ****     // If RXNE flag is set
 197:Src/main.c    ****     else if (I2C2->ISR & (1 << 2))
 198:Src/main.c    ****     {
 199:Src/main.c    ****       break;
 200:Src/main.c    ****     }
 201:Src/main.c    ****   }
 202:Src/main.c    ****   // Set PC7 to high to confirm that the WHO_AM_I register is being read correctly
 203:Src/main.c    ****   if (I2C2->RXDR == 0xD3)
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 5


 204:Src/main.c    ****   {
 205:Src/main.c    ****     GPIOC->ODR |= (1 << 7);
 206:Src/main.c    ****     // Send the stop bit
 207:Src/main.c    ****     I2C2->CR2 |= (1 << 14);
 208:Src/main.c    ****   }
 209:Src/main.c    ****   while (1);
 210:Src/main.c    ****   
 211:Src/main.c    **** }
 212:Src/main.c    **** 
 213:Src/main.c    **** /** System Clock Configuration
 214:Src/main.c    ****  */
 215:Src/main.c    **** void SystemClock_Config(void)
 216:Src/main.c    **** {
 217:Src/main.c    **** 
 218:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 219:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 220:Src/main.c    **** 
 221:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 222:Src/main.c    ****    */
 223:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 224:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 225:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 227:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 228:Src/main.c    ****   {
 229:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 230:Src/main.c    ****   }
 231:Src/main.c    **** 
 232:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 233:Src/main.c    ****    */
 234:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 235:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 236:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 237:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 238:Src/main.c    **** 
 239:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 240:Src/main.c    ****   {
 241:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 242:Src/main.c    ****   }
 243:Src/main.c    **** 
 244:Src/main.c    ****   /**Configure the Systick interrupt time
 245:Src/main.c    ****    */
 246:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 247:Src/main.c    **** 
 248:Src/main.c    ****   /**Configure the Systick
 249:Src/main.c    ****    */
 250:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 251:Src/main.c    **** 
 252:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 253:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 254:Src/main.c    **** }
 255:Src/main.c    **** 
 256:Src/main.c    **** /* USER CODE BEGIN 4 */
 257:Src/main.c    **** 
 258:Src/main.c    **** /* USER CODE END 4 */
 259:Src/main.c    **** 
 260:Src/main.c    **** /**
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 6


 261:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 262:Src/main.c    ****  * @param  None
 263:Src/main.c    ****  * @retval None
 264:Src/main.c    ****  */
 265:Src/main.c    **** void _Error_Handler(char *file, int line)
 266:Src/main.c    **** {
  27              		.loc 1 266 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 267:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 268:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 269:Src/main.c    ****   while (1)
  35              		.loc 1 269 3 view .LVU1
 270:Src/main.c    ****   {
 271:Src/main.c    ****   }
  36              		.loc 1 271 3 view .LVU2
 269:Src/main.c    ****   {
  37              		.loc 1 269 9 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  43              		.align	2
  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 216:Src/main.c    **** 
  56              		.loc 1 216 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 218:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 218 3 view .LVU5
 219:Src/main.c    **** 
  68              		.loc 1 219 3 view .LVU6
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 7


 223:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 223 3 view .LVU7
 223:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 223 36 is_stmt 0 view .LVU8
  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 224:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 224 3 is_stmt 1 view .LVU9
 224:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 224 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 225 3 is_stmt 1 view .LVU11
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 225 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
 226:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 226 3 is_stmt 1 view .LVU13
 226:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 226 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
 227:Src/main.c    ****   {
  85              		.loc 1 227 3 is_stmt 1 view .LVU15
 227:Src/main.c    ****   {
  86              		.loc 1 227 7 is_stmt 0 view .LVU16
  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL1:
 227:Src/main.c    ****   {
  90              		.loc 1 227 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
 234:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  93              		.loc 1 234 3 is_stmt 1 view .LVU18
 234:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  94              		.loc 1 234 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 235:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 235 3 is_stmt 1 view .LVU20
 235:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 235 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 236:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 236 3 is_stmt 1 view .LVU22
 236:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 236 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 237:Src/main.c    **** 
 104              		.loc 1 237 3 is_stmt 1 view .LVU24
 237:Src/main.c    **** 
 105              		.loc 1 237 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 8


 239:Src/main.c    ****   {
 107              		.loc 1 239 3 is_stmt 1 view .LVU26
 239:Src/main.c    ****   {
 108              		.loc 1 239 7 is_stmt 0 view .LVU27
 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
 239:Src/main.c    ****   {
 113              		.loc 1 239 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 246:Src/main.c    **** 
 116              		.loc 1 246 3 is_stmt 1 view .LVU29
 246:Src/main.c    **** 
 117              		.loc 1 246 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
 246:Src/main.c    **** 
 120              		.loc 1 246 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 250:Src/main.c    **** 
 127              		.loc 1 250 3 is_stmt 1 view .LVU32
 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 253:Src/main.c    **** }
 131              		.loc 1 253 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
 134 0050 0021     		movs	r1, #0
 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 254:Src/main.c    **** 
 138              		.loc 1 254 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 229:Src/main.c    ****   }
 143              		.loc 1 229 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e E521     		movs	r1, #229
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 241:Src/main.c    ****   }
 149              		.loc 1 241 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
 151 0066 F121     		movs	r1, #241
 152 0068 FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 9


 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  69:Src/main.c    ****   SystemClock_Config();
 170              		.loc 1 69 1 view -0
 171              		.cfi_startproc
 172              		@ Volatile: function does not return.
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 24
 178              		.cfi_offset 3, -24
 179              		.cfi_offset 4, -20
 180              		.cfi_offset 5, -16
 181              		.cfi_offset 6, -12
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
 184 0002 CE46     		mov	lr, r9
 185 0004 4746     		mov	r7, r8
 186 0006 80B5     		push	{r7, lr}
 187              	.LCFI3:
 188              		.cfi_def_cfa_offset 32
 189              		.cfi_offset 8, -32
 190              		.cfi_offset 9, -28
  70:Src/main.c    **** 
 191              		.loc 1 70 3 view .LVU38
 192 0008 FFF7FEFF 		bl	SystemClock_Config
 193              	.LVL10:
  73:Src/main.c    **** 
 194              		.loc 1 73 3 view .LVU39
  73:Src/main.c    **** 
 195              		.loc 1 73 6 is_stmt 0 view .LVU40
 196 000c 794B     		ldr	r3, .L23
 197 000e 5969     		ldr	r1, [r3, #20]
  73:Src/main.c    **** 
 198              		.loc 1 73 15 view .LVU41
 199 0010 C022     		movs	r2, #192
 200 0012 1203     		lsls	r2, r2, #12
 201 0014 0A43     		orrs	r2, r1
 202 0016 5A61     		str	r2, [r3, #20]
  76:Src/main.c    **** 
 203              		.loc 1 76 3 is_stmt 1 view .LVU42
  76:Src/main.c    **** 
 204              		.loc 1 76 6 is_stmt 0 view .LVU43
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 10


 205 0018 D969     		ldr	r1, [r3, #28]
  76:Src/main.c    **** 
 206              		.loc 1 76 16 view .LVU44
 207 001a 8022     		movs	r2, #128
 208 001c D203     		lsls	r2, r2, #15
 209 001e 0A43     		orrs	r2, r1
 210 0020 DA61     		str	r2, [r3, #28]
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 211              		.loc 1 80 3 is_stmt 1 view .LVU45
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 212              		.loc 1 80 8 is_stmt 0 view .LVU46
 213 0022 754B     		ldr	r3, .L23+4
 214 0024 1A68     		ldr	r2, [r3]
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 215              		.loc 1 80 16 view .LVU47
 216 0026 7549     		ldr	r1, .L23+8
 217 0028 8C46     		mov	ip, r1
 218 002a 0A40     		ands	r2, r1
 219 002c 1A60     		str	r2, [r3]
  81:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 220              		.loc 1 81 3 is_stmt 1 view .LVU48
  81:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 221              		.loc 1 81 8 is_stmt 0 view .LVU49
 222 002e 1A68     		ldr	r2, [r3]
  81:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 223              		.loc 1 81 16 view .LVU50
 224 0030 734F     		ldr	r7, .L23+12
 225 0032 3A40     		ands	r2, r7
 226 0034 1A60     		str	r2, [r3]
  82:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 227              		.loc 1 82 3 is_stmt 1 view .LVU51
  82:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 228              		.loc 1 82 8 is_stmt 0 view .LVU52
 229 0036 1A68     		ldr	r2, [r3]
  82:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 230              		.loc 1 82 16 view .LVU53
 231 0038 724E     		ldr	r6, .L23+16
 232 003a 3240     		ands	r2, r6
 233 003c 1A60     		str	r2, [r3]
  83:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
 234              		.loc 1 83 3 is_stmt 1 view .LVU54
  83:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
 235              		.loc 1 83 8 is_stmt 0 view .LVU55
 236 003e 1A68     		ldr	r2, [r3]
  83:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
 237              		.loc 1 83 16 view .LVU56
 238 0040 714C     		ldr	r4, .L23+20
 239 0042 2240     		ands	r2, r4
 240 0044 1A60     		str	r2, [r3]
  85:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
 241              		.loc 1 85 3 is_stmt 1 view .LVU57
  85:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
 242              		.loc 1 85 8 is_stmt 0 view .LVU58
 243 0046 1A68     		ldr	r2, [r3]
  85:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
 244              		.loc 1 85 16 view .LVU59
 245 0048 8021     		movs	r1, #128
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 11


 246 004a 4901     		lsls	r1, r1, #5
 247 004c 8946     		mov	r9, r1
 248 004e 0A43     		orrs	r2, r1
 249 0050 1A60     		str	r2, [r3]
  86:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
 250              		.loc 1 86 3 is_stmt 1 view .LVU60
  86:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
 251              		.loc 1 86 8 is_stmt 0 view .LVU61
 252 0052 1A68     		ldr	r2, [r3]
  86:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
 253              		.loc 1 86 16 view .LVU62
 254 0054 8020     		movs	r0, #128
 255 0056 C001     		lsls	r0, r0, #7
 256 0058 0243     		orrs	r2, r0
 257 005a 1A60     		str	r2, [r3]
  87:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 258              		.loc 1 87 3 is_stmt 1 view .LVU63
  87:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 259              		.loc 1 87 8 is_stmt 0 view .LVU64
 260 005c 1D68     		ldr	r5, [r3]
  87:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 261              		.loc 1 87 16 view .LVU65
 262 005e 8022     		movs	r2, #128
 263 0060 5202     		lsls	r2, r2, #9
 264 0062 2A43     		orrs	r2, r5
 265 0064 1A60     		str	r2, [r3]
  88:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
 266              		.loc 1 88 3 is_stmt 1 view .LVU66
  88:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
 267              		.loc 1 88 8 is_stmt 0 view .LVU67
 268 0066 1D68     		ldr	r5, [r3]
  88:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
 269              		.loc 1 88 16 view .LVU68
 270 0068 8022     		movs	r2, #128
 271 006a D202     		lsls	r2, r2, #11
 272 006c 2A43     		orrs	r2, r5
 273 006e 1A60     		str	r2, [r3]
  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 274              		.loc 1 90 3 is_stmt 1 view .LVU69
  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 275              		.loc 1 90 8 is_stmt 0 view .LVU70
 276 0070 5A68     		ldr	r2, [r3, #4]
  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 277              		.loc 1 90 17 view .LVU71
 278 0072 4025     		movs	r5, #64
 279 0074 AA43     		bics	r2, r5
 280 0076 5A60     		str	r2, [r3, #4]
  91:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 281              		.loc 1 91 3 is_stmt 1 view .LVU72
  91:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 282              		.loc 1 91 8 is_stmt 0 view .LVU73
 283 0078 5A68     		ldr	r2, [r3, #4]
  91:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 284              		.loc 1 91 17 view .LVU74
 285 007a 8021     		movs	r1, #128
 286 007c 8A43     		bics	r2, r1
 287 007e 5A60     		str	r2, [r3, #4]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 12


  92:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 288              		.loc 1 92 3 is_stmt 1 view .LVU75
  92:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 289              		.loc 1 92 8 is_stmt 0 view .LVU76
 290 0080 5A68     		ldr	r2, [r3, #4]
  92:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 291              		.loc 1 92 17 view .LVU77
 292 0082 6249     		ldr	r1, .L23+24
 293 0084 0A40     		ands	r2, r1
 294 0086 5A60     		str	r2, [r3, #4]
  93:Src/main.c    ****   // Set PC6-9 to Low Speed
 295              		.loc 1 93 3 is_stmt 1 view .LVU78
  93:Src/main.c    ****   // Set PC6-9 to Low Speed
 296              		.loc 1 93 8 is_stmt 0 view .LVU79
 297 0088 5A68     		ldr	r2, [r3, #4]
  93:Src/main.c    ****   // Set PC6-9 to Low Speed
 298              		.loc 1 93 17 view .LVU80
 299 008a 6149     		ldr	r1, .L23+28
 300 008c 0A40     		ands	r2, r1
 301 008e 5A60     		str	r2, [r3, #4]
  95:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
 302              		.loc 1 95 3 is_stmt 1 view .LVU81
  95:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
 303              		.loc 1 95 8 is_stmt 0 view .LVU82
 304 0090 9A68     		ldr	r2, [r3, #8]
  95:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
 305              		.loc 1 95 18 view .LVU83
 306 0092 9A60     		str	r2, [r3, #8]
  96:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
 307              		.loc 1 96 3 is_stmt 1 view .LVU84
  96:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
 308              		.loc 1 96 8 is_stmt 0 view .LVU85
 309 0094 9A68     		ldr	r2, [r3, #8]
  96:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
 310              		.loc 1 96 18 view .LVU86
 311 0096 9A60     		str	r2, [r3, #8]
  97:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 312              		.loc 1 97 3 is_stmt 1 view .LVU87
  97:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 313              		.loc 1 97 8 is_stmt 0 view .LVU88
 314 0098 9A68     		ldr	r2, [r3, #8]
  97:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 315              		.loc 1 97 18 view .LVU89
 316 009a 9A60     		str	r2, [r3, #8]
  98:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
 317              		.loc 1 98 3 is_stmt 1 view .LVU90
  98:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
 318              		.loc 1 98 8 is_stmt 0 view .LVU91
 319 009c 9A68     		ldr	r2, [r3, #8]
  98:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
 320              		.loc 1 98 18 view .LVU92
 321 009e 9A60     		str	r2, [r3, #8]
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 322              		.loc 1 100 3 is_stmt 1 view .LVU93
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 323              		.loc 1 100 8 is_stmt 0 view .LVU94
 324 00a0 DA68     		ldr	r2, [r3, #12]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 13


 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 325              		.loc 1 100 16 view .LVU95
 326 00a2 6146     		mov	r1, ip
 327 00a4 0A40     		ands	r2, r1
 328 00a6 DA60     		str	r2, [r3, #12]
 101:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 329              		.loc 1 101 3 is_stmt 1 view .LVU96
 101:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 330              		.loc 1 101 8 is_stmt 0 view .LVU97
 331 00a8 DA68     		ldr	r2, [r3, #12]
 101:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 332              		.loc 1 101 16 view .LVU98
 333 00aa 3A40     		ands	r2, r7
 334 00ac DA60     		str	r2, [r3, #12]
 102:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 335              		.loc 1 102 3 is_stmt 1 view .LVU99
 102:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 336              		.loc 1 102 8 is_stmt 0 view .LVU100
 337 00ae DA68     		ldr	r2, [r3, #12]
 102:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 338              		.loc 1 102 16 view .LVU101
 339 00b0 3240     		ands	r2, r6
 340 00b2 DA60     		str	r2, [r3, #12]
 103:Src/main.c    **** 
 341              		.loc 1 103 3 is_stmt 1 view .LVU102
 103:Src/main.c    **** 
 342              		.loc 1 103 8 is_stmt 0 view .LVU103
 343 00b4 DA68     		ldr	r2, [r3, #12]
 103:Src/main.c    **** 
 344              		.loc 1 103 16 view .LVU104
 345 00b6 2240     		ands	r2, r4
 346 00b8 DA60     		str	r2, [r3, #12]
 106:Src/main.c    ****   GPIOB->OTYPER |= (1 << 11);
 347              		.loc 1 106 3 is_stmt 1 view .LVU105
 106:Src/main.c    ****   GPIOB->OTYPER |= (1 << 11);
 348              		.loc 1 106 8 is_stmt 0 view .LVU106
 349 00ba 564A     		ldr	r2, .L23+32
 350 00bc 1668     		ldr	r6, [r2]
 106:Src/main.c    ****   GPIOB->OTYPER |= (1 << 11);
 351              		.loc 1 106 16 view .LVU107
 352 00be 8024     		movs	r4, #128
 353 00c0 2404     		lsls	r4, r4, #16
 354 00c2 3443     		orrs	r4, r6
 355 00c4 1460     		str	r4, [r2]
 107:Src/main.c    ****   GPIOB->AFR[1] |= (1 << 12);
 356              		.loc 1 107 3 is_stmt 1 view .LVU108
 107:Src/main.c    ****   GPIOB->AFR[1] |= (1 << 12);
 357              		.loc 1 107 8 is_stmt 0 view .LVU109
 358 00c6 5668     		ldr	r6, [r2, #4]
 107:Src/main.c    ****   GPIOB->AFR[1] |= (1 << 12);
 359              		.loc 1 107 17 view .LVU110
 360 00c8 8024     		movs	r4, #128
 361 00ca 2401     		lsls	r4, r4, #4
 362 00cc 3443     		orrs	r4, r6
 363 00ce 5460     		str	r4, [r2, #4]
 108:Src/main.c    ****   GPIOB->AFR[1] &= ~(1 << 13) | ~(1 << 14) | ~(1 << 15);
 364              		.loc 1 108 3 is_stmt 1 view .LVU111
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 14


 108:Src/main.c    ****   GPIOB->AFR[1] &= ~(1 << 13) | ~(1 << 14) | ~(1 << 15);
 365              		.loc 1 108 13 is_stmt 0 view .LVU112
 366 00d0 546A     		ldr	r4, [r2, #36]
 108:Src/main.c    ****   GPIOB->AFR[1] &= ~(1 << 13) | ~(1 << 14) | ~(1 << 15);
 367              		.loc 1 108 17 view .LVU113
 368 00d2 4946     		mov	r1, r9
 369 00d4 2143     		orrs	r1, r4
 370 00d6 5162     		str	r1, [r2, #36]
 109:Src/main.c    **** 
 371              		.loc 1 109 3 is_stmt 1 view .LVU114
 109:Src/main.c    **** 
 372              		.loc 1 109 13 is_stmt 0 view .LVU115
 373 00d8 516A     		ldr	r1, [r2, #36]
 109:Src/main.c    **** 
 374              		.loc 1 109 17 view .LVU116
 375 00da 5162     		str	r1, [r2, #36]
 112:Src/main.c    ****   GPIOB->MODER |= (1 << 27);
 376              		.loc 1 112 3 is_stmt 1 view .LVU117
 112:Src/main.c    ****   GPIOB->MODER |= (1 << 27);
 377              		.loc 1 112 8 is_stmt 0 view .LVU118
 378 00dc 1168     		ldr	r1, [r2]
 112:Src/main.c    ****   GPIOB->MODER |= (1 << 27);
 379              		.loc 1 112 16 view .LVU119
 380 00de 4E4C     		ldr	r4, .L23+36
 381 00e0 2140     		ands	r1, r4
 382 00e2 1160     		str	r1, [r2]
 113:Src/main.c    ****   GPIOB->OTYPER |= (1 << 13);
 383              		.loc 1 113 3 is_stmt 1 view .LVU120
 113:Src/main.c    ****   GPIOB->OTYPER |= (1 << 13);
 384              		.loc 1 113 8 is_stmt 0 view .LVU121
 385 00e4 1468     		ldr	r4, [r2]
 113:Src/main.c    ****   GPIOB->OTYPER |= (1 << 13);
 386              		.loc 1 113 16 view .LVU122
 387 00e6 8021     		movs	r1, #128
 388 00e8 0905     		lsls	r1, r1, #20
 389 00ea 2143     		orrs	r1, r4
 390 00ec 1160     		str	r1, [r2]
 114:Src/main.c    ****   GPIOB->AFR[1] &= ~(1 << 21) | ~(1 << 23);
 391              		.loc 1 114 3 is_stmt 1 view .LVU123
 114:Src/main.c    ****   GPIOB->AFR[1] &= ~(1 << 21) | ~(1 << 23);
 392              		.loc 1 114 8 is_stmt 0 view .LVU124
 393 00ee 5468     		ldr	r4, [r2, #4]
 114:Src/main.c    ****   GPIOB->AFR[1] &= ~(1 << 21) | ~(1 << 23);
 394              		.loc 1 114 17 view .LVU125
 395 00f0 8021     		movs	r1, #128
 396 00f2 8901     		lsls	r1, r1, #6
 397 00f4 0C43     		orrs	r4, r1
 398 00f6 5460     		str	r4, [r2, #4]
 115:Src/main.c    ****   GPIOB->AFR[1] |= (1 << 20) | (1 << 22);
 399              		.loc 1 115 3 is_stmt 1 view .LVU126
 115:Src/main.c    ****   GPIOB->AFR[1] |= (1 << 20) | (1 << 22);
 400              		.loc 1 115 13 is_stmt 0 view .LVU127
 401 00f8 546A     		ldr	r4, [r2, #36]
 115:Src/main.c    ****   GPIOB->AFR[1] |= (1 << 20) | (1 << 22);
 402              		.loc 1 115 17 view .LVU128
 403 00fa 5462     		str	r4, [r2, #36]
 116:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 15


 404              		.loc 1 116 3 is_stmt 1 view .LVU129
 116:Src/main.c    **** 
 405              		.loc 1 116 13 is_stmt 0 view .LVU130
 406 00fc 566A     		ldr	r6, [r2, #36]
 116:Src/main.c    **** 
 407              		.loc 1 116 17 view .LVU131
 408 00fe A024     		movs	r4, #160
 409 0100 E403     		lsls	r4, r4, #15
 410 0102 3443     		orrs	r4, r6
 411 0104 5462     		str	r4, [r2, #36]
 119:Src/main.c    ****   GPIOB->MODER &= ~(1 << 29);
 412              		.loc 1 119 3 is_stmt 1 view .LVU132
 119:Src/main.c    ****   GPIOB->MODER &= ~(1 << 29);
 413              		.loc 1 119 8 is_stmt 0 view .LVU133
 414 0106 1668     		ldr	r6, [r2]
 119:Src/main.c    ****   GPIOB->MODER &= ~(1 << 29);
 415              		.loc 1 119 16 view .LVU134
 416 0108 8024     		movs	r4, #128
 417 010a 6405     		lsls	r4, r4, #21
 418 010c 3443     		orrs	r4, r6
 419 010e 1460     		str	r4, [r2]
 120:Src/main.c    ****   GPIOB->OTYPER &= ~(1 << 14);
 420              		.loc 1 120 3 is_stmt 1 view .LVU135
 120:Src/main.c    ****   GPIOB->OTYPER &= ~(1 << 14);
 421              		.loc 1 120 8 is_stmt 0 view .LVU136
 422 0110 1468     		ldr	r4, [r2]
 120:Src/main.c    ****   GPIOB->OTYPER &= ~(1 << 14);
 423              		.loc 1 120 16 view .LVU137
 424 0112 424E     		ldr	r6, .L23+40
 425 0114 3440     		ands	r4, r6
 426 0116 1460     		str	r4, [r2]
 121:Src/main.c    ****   GPIOB->ODR |= (1 << 14);
 427              		.loc 1 121 3 is_stmt 1 view .LVU138
 121:Src/main.c    ****   GPIOB->ODR |= (1 << 14);
 428              		.loc 1 121 8 is_stmt 0 view .LVU139
 429 0118 5468     		ldr	r4, [r2, #4]
 121:Src/main.c    ****   GPIOB->ODR |= (1 << 14);
 430              		.loc 1 121 17 view .LVU140
 431 011a 414E     		ldr	r6, .L23+44
 432 011c 3440     		ands	r4, r6
 433 011e 5460     		str	r4, [r2, #4]
 122:Src/main.c    **** 
 434              		.loc 1 122 3 is_stmt 1 view .LVU141
 122:Src/main.c    **** 
 435              		.loc 1 122 8 is_stmt 0 view .LVU142
 436 0120 5469     		ldr	r4, [r2, #20]
 122:Src/main.c    **** 
 437              		.loc 1 122 14 view .LVU143
 438 0122 2043     		orrs	r0, r4
 439 0124 5061     		str	r0, [r2, #20]
 125:Src/main.c    ****   GPIOC->MODER |= (1 << 0);
 440              		.loc 1 125 3 is_stmt 1 view .LVU144
 125:Src/main.c    ****   GPIOC->MODER |= (1 << 0);
 441              		.loc 1 125 8 is_stmt 0 view .LVU145
 442 0126 1A68     		ldr	r2, [r3]
 125:Src/main.c    ****   GPIOC->MODER |= (1 << 0);
 443              		.loc 1 125 16 view .LVU146
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 16


 444 0128 0220     		movs	r0, #2
 445 012a 8243     		bics	r2, r0
 446 012c 1A60     		str	r2, [r3]
 126:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 0);
 447              		.loc 1 126 3 is_stmt 1 view .LVU147
 126:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 0);
 448              		.loc 1 126 8 is_stmt 0 view .LVU148
 449 012e 1A68     		ldr	r2, [r3]
 126:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 0);
 450              		.loc 1 126 16 view .LVU149
 451 0130 0138     		subs	r0, r0, #1
 452 0132 0243     		orrs	r2, r0
 453 0134 1A60     		str	r2, [r3]
 127:Src/main.c    ****   GPIOC->ODR |= (1 << 0);
 454              		.loc 1 127 3 is_stmt 1 view .LVU150
 127:Src/main.c    ****   GPIOC->ODR |= (1 << 0);
 455              		.loc 1 127 8 is_stmt 0 view .LVU151
 456 0136 5A68     		ldr	r2, [r3, #4]
 127:Src/main.c    ****   GPIOC->ODR |= (1 << 0);
 457              		.loc 1 127 17 view .LVU152
 458 0138 8243     		bics	r2, r0
 459 013a 5A60     		str	r2, [r3, #4]
 128:Src/main.c    **** 
 460              		.loc 1 128 3 is_stmt 1 view .LVU153
 128:Src/main.c    **** 
 461              		.loc 1 128 8 is_stmt 0 view .LVU154
 462 013c 5A69     		ldr	r2, [r3, #20]
 128:Src/main.c    **** 
 463              		.loc 1 128 14 view .LVU155
 464 013e 0243     		orrs	r2, r0
 465 0140 5A61     		str	r2, [r3, #20]
 131:Src/main.c    **** 
 466              		.loc 1 131 3 is_stmt 1 view .LVU156
 131:Src/main.c    **** 
 467              		.loc 1 131 17 is_stmt 0 view .LVU157
 468 0142 384A     		ldr	r2, .L23+48
 469 0144 384C     		ldr	r4, .L23+52
 470 0146 1461     		str	r4, [r2, #16]
 134:Src/main.c    **** 
 471              		.loc 1 134 3 is_stmt 1 view .LVU158
 134:Src/main.c    **** 
 472              		.loc 1 134 7 is_stmt 0 view .LVU159
 473 0148 1468     		ldr	r4, [r2]
 134:Src/main.c    **** 
 474              		.loc 1 134 13 view .LVU160
 475 014a 2043     		orrs	r0, r4
 476 014c 1060     		str	r0, [r2]
 137:Src/main.c    **** 
 477              		.loc 1 137 3 is_stmt 1 view .LVU161
 137:Src/main.c    **** 
 478              		.loc 1 137 8 is_stmt 0 view .LVU162
 479 014e 5869     		ldr	r0, [r3, #20]
 137:Src/main.c    **** 
 480              		.loc 1 137 14 view .LVU163
 481 0150 2843     		orrs	r0, r5
 482 0152 5861     		str	r0, [r3, #20]
 140:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 17


 483              		.loc 1 140 3 is_stmt 1 view .LVU164
 140:Src/main.c    **** 
 484              		.loc 1 140 7 is_stmt 0 view .LVU165
 485 0154 5068     		ldr	r0, [r2, #4]
 140:Src/main.c    **** 
 486              		.loc 1 140 13 view .LVU166
 487 0156 354B     		ldr	r3, .L23+56
 488 0158 0343     		orrs	r3, r0
 489 015a 5360     		str	r3, [r2, #4]
 143:Src/main.c    **** 
 490              		.loc 1 143 3 is_stmt 1 view .LVU167
 143:Src/main.c    **** 
 491              		.loc 1 143 7 is_stmt 0 view .LVU168
 492 015c 5368     		ldr	r3, [r2, #4]
 143:Src/main.c    **** 
 493              		.loc 1 143 13 view .LVU169
 494 015e 3448     		ldr	r0, .L23+60
 495 0160 0340     		ands	r3, r0
 496 0162 5360     		str	r3, [r2, #4]
 146:Src/main.c    **** 
 497              		.loc 1 146 3 is_stmt 1 view .LVU170
 146:Src/main.c    **** 
 498              		.loc 1 146 7 is_stmt 0 view .LVU171
 499 0164 5368     		ldr	r3, [r2, #4]
 146:Src/main.c    **** 
 500              		.loc 1 146 13 view .LVU172
 501 0166 1943     		orrs	r1, r3
 502 0168 5160     		str	r1, [r2, #4]
 503              	.L13:
 148:Src/main.c    ****   { // Check for TXIS flag (bit 1)
 504              		.loc 1 148 3 is_stmt 1 view .LVU173
 150:Src/main.c    ****     {
 505              		.loc 1 150 5 view .LVU174
 150:Src/main.c    ****     {
 506              		.loc 1 150 14 is_stmt 0 view .LVU175
 507 016a 2E4B     		ldr	r3, .L23+48
 508 016c 9B69     		ldr	r3, [r3, #24]
 150:Src/main.c    ****     {
 509              		.loc 1 150 8 view .LVU176
 510 016e 9B07     		lsls	r3, r3, #30
 511 0170 02D4     		bmi	.L20
 159:Src/main.c    ****     {
 512              		.loc 1 159 10 is_stmt 1 view .LVU177
 159:Src/main.c    ****     {
 513              		.loc 1 159 19 is_stmt 0 view .LVU178
 514 0172 2C4B     		ldr	r3, .L23+48
 515 0174 9B69     		ldr	r3, [r3, #24]
 163:Src/main.c    ****   }
 516              		.loc 1 163 5 is_stmt 1 view .LVU179
 148:Src/main.c    ****   { // Check for TXIS flag (bit 1)
 517              		.loc 1 148 9 view .LVU180
 150:Src/main.c    ****     {
 518              		.loc 1 150 8 is_stmt 0 view .LVU181
 519 0176 F8E7     		b	.L13
 520              	.L20:
 155:Src/main.c    ****       break;
 521              		.loc 1 155 7 is_stmt 1 view .LVU182
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 18


 155:Src/main.c    ****       break;
 522              		.loc 1 155 12 is_stmt 0 view .LVU183
 523 0178 1F4A     		ldr	r2, .L23+4
 524 017a 5369     		ldr	r3, [r2, #20]
 155:Src/main.c    ****       break;
 525              		.loc 1 155 18 view .LVU184
 526 017c 4021     		movs	r1, #64
 527 017e 8B43     		bics	r3, r1
 528 0180 5361     		str	r3, [r2, #20]
 156:Src/main.c    ****     }
 529              		.loc 1 156 7 is_stmt 1 view .LVU185
 166:Src/main.c    **** 
 530              		.loc 1 166 3 view .LVU186
 166:Src/main.c    **** 
 531              		.loc 1 166 14 is_stmt 0 view .LVU187
 532 0182 284B     		ldr	r3, .L23+48
 533 0184 0F22     		movs	r2, #15
 534 0186 9A62     		str	r2, [r3, #40]
 169:Src/main.c    ****     ;
 535              		.loc 1 169 3 is_stmt 1 view .LVU188
 536              	.L12:
 169:Src/main.c    ****     ;
 537              		.loc 1 169 10 discriminator 1 view .LVU189
 169:Src/main.c    ****     ;
 538              		.loc 1 169 16 is_stmt 0 discriminator 1 view .LVU190
 539 0188 264B     		ldr	r3, .L23+48
 540 018a 9B69     		ldr	r3, [r3, #24]
 169:Src/main.c    ****     ;
 541              		.loc 1 169 10 discriminator 1 view .LVU191
 542 018c 5B06     		lsls	r3, r3, #25
 543 018e FBD5     		bpl	.L12
 174:Src/main.c    **** 
 544              		.loc 1 174 3 is_stmt 1 view .LVU192
 174:Src/main.c    **** 
 545              		.loc 1 174 13 is_stmt 0 view .LVU193
 546 0190 244B     		ldr	r3, .L23+48
 547 0192 0022     		movs	r2, #0
 548 0194 5A60     		str	r2, [r3, #4]
 177:Src/main.c    **** 
 549              		.loc 1 177 3 is_stmt 1 view .LVU194
 177:Src/main.c    **** 
 550              		.loc 1 177 7 is_stmt 0 view .LVU195
 551 0196 5968     		ldr	r1, [r3, #4]
 177:Src/main.c    **** 
 552              		.loc 1 177 13 view .LVU196
 553 0198 244A     		ldr	r2, .L23+56
 554 019a 0A43     		orrs	r2, r1
 555 019c 5A60     		str	r2, [r3, #4]
 180:Src/main.c    **** 
 556              		.loc 1 180 3 is_stmt 1 view .LVU197
 180:Src/main.c    **** 
 557              		.loc 1 180 7 is_stmt 0 view .LVU198
 558 019e 5968     		ldr	r1, [r3, #4]
 180:Src/main.c    **** 
 559              		.loc 1 180 13 view .LVU199
 560 01a0 8022     		movs	r2, #128
 561 01a2 D200     		lsls	r2, r2, #3
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 19


 562 01a4 0A43     		orrs	r2, r1
 563 01a6 5A60     		str	r2, [r3, #4]
 183:Src/main.c    **** 
 564              		.loc 1 183 3 is_stmt 1 view .LVU200
 183:Src/main.c    **** 
 565              		.loc 1 183 7 is_stmt 0 view .LVU201
 566 01a8 5968     		ldr	r1, [r3, #4]
 183:Src/main.c    **** 
 567              		.loc 1 183 13 view .LVU202
 568 01aa 8022     		movs	r2, #128
 569 01ac 9201     		lsls	r2, r2, #6
 570 01ae 0A43     		orrs	r2, r1
 571 01b0 5A60     		str	r2, [r3, #4]
 572 01b2 03E0     		b	.L14
 573              	.L15:
 197:Src/main.c    ****     {
 574              		.loc 1 197 10 is_stmt 1 view .LVU203
 197:Src/main.c    ****     {
 575              		.loc 1 197 18 is_stmt 0 view .LVU204
 576 01b4 1B4B     		ldr	r3, .L23+48
 577 01b6 9B69     		ldr	r3, [r3, #24]
 197:Src/main.c    ****     {
 578              		.loc 1 197 13 view .LVU205
 579 01b8 5B07     		lsls	r3, r3, #29
 580 01ba 09D4     		bmi	.L21
 581              	.L14:
 186:Src/main.c    ****   {
 582              		.loc 1 186 3 is_stmt 1 view .LVU206
 189:Src/main.c    ****     {
 583              		.loc 1 189 5 view .LVU207
 189:Src/main.c    ****     {
 584              		.loc 1 189 13 is_stmt 0 view .LVU208
 585 01bc 194B     		ldr	r3, .L23+48
 586 01be 9B69     		ldr	r3, [r3, #24]
 189:Src/main.c    ****     {
 587              		.loc 1 189 8 view .LVU209
 588 01c0 DB06     		lsls	r3, r3, #27
 589 01c2 F7D5     		bpl	.L15
 194:Src/main.c    ****     }
 590              		.loc 1 194 7 is_stmt 1 view .LVU210
 194:Src/main.c    ****     }
 591              		.loc 1 194 12 is_stmt 0 view .LVU211
 592 01c4 0C4A     		ldr	r2, .L23+4
 593 01c6 5369     		ldr	r3, [r2, #20]
 194:Src/main.c    ****     }
 594              		.loc 1 194 18 view .LVU212
 595 01c8 4021     		movs	r1, #64
 596 01ca 8B43     		bics	r3, r1
 597 01cc 5361     		str	r3, [r2, #20]
 598 01ce F5E7     		b	.L14
 599              	.L21:
 203:Src/main.c    ****   {
 600              		.loc 1 203 3 is_stmt 1 view .LVU213
 203:Src/main.c    ****   {
 601              		.loc 1 203 11 is_stmt 0 view .LVU214
 602 01d0 144B     		ldr	r3, .L23+48
 603 01d2 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 20


 203:Src/main.c    ****   {
 604              		.loc 1 203 6 view .LVU215
 605 01d4 D32B     		cmp	r3, #211
 606 01d6 00D0     		beq	.L22
 607              	.L17:
 209:Src/main.c    ****   
 608              		.loc 1 209 3 is_stmt 1 view .LVU216
 209:Src/main.c    ****   
 609              		.loc 1 209 9 view .LVU217
 610 01d8 FEE7     		b	.L17
 611              	.L22:
 205:Src/main.c    ****     // Send the stop bit
 612              		.loc 1 205 5 view .LVU218
 205:Src/main.c    ****     // Send the stop bit
 613              		.loc 1 205 10 is_stmt 0 view .LVU219
 614 01da 074A     		ldr	r2, .L23+4
 615 01dc 5169     		ldr	r1, [r2, #20]
 205:Src/main.c    ****     // Send the stop bit
 616              		.loc 1 205 16 view .LVU220
 617 01de 533B     		subs	r3, r3, #83
 618 01e0 0B43     		orrs	r3, r1
 619 01e2 5361     		str	r3, [r2, #20]
 207:Src/main.c    ****   }
 620              		.loc 1 207 5 is_stmt 1 view .LVU221
 207:Src/main.c    ****   }
 621              		.loc 1 207 9 is_stmt 0 view .LVU222
 622 01e4 0F4A     		ldr	r2, .L23+48
 623 01e6 5168     		ldr	r1, [r2, #4]
 207:Src/main.c    ****   }
 624              		.loc 1 207 15 view .LVU223
 625 01e8 8023     		movs	r3, #128
 626 01ea DB01     		lsls	r3, r3, #7
 627 01ec 0B43     		orrs	r3, r1
 628 01ee 5360     		str	r3, [r2, #4]
 629 01f0 F2E7     		b	.L17
 630              	.L24:
 631 01f2 C046     		.align	2
 632              	.L23:
 633 01f4 00100240 		.word	1073876992
 634 01f8 00080048 		.word	1207961600
 635 01fc FFCFFFFF 		.word	-12289
 636 0200 FF3FFFFF 		.word	-49153
 637 0204 FFFFFCFF 		.word	-196609
 638 0208 FFFFF3FF 		.word	-786433
 639 020c FFFEFFFF 		.word	-257
 640 0210 FFFDFFFF 		.word	-513
 641 0214 00040048 		.word	1207960576
 642 0218 FFFFFFFB 		.word	-67108865
 643 021c FFFFFFDF 		.word	-536870913
 644 0220 FFBFFFFF 		.word	-16385
 645 0224 00580040 		.word	1073764352
 646 0228 130F4210 		.word	272764691
 647 022c D2000100 		.word	65746
 648 0230 FFFBFFFF 		.word	-1025
 649              		.cfi_endproc
 650              	.LFE40:
 652              		.text
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 21


 653              	.Letext0:
 654              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 655              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 656              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 657              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 658              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 659              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s:19     .text._Error_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s:162    .text.main:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s:168    .text.main:00000000 main
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccB4nBxf.s:633    .text.main:000001f4 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
