ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.send_char,"ax",%progbits
  19              		.align	1
  20              		.global	send_char
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	send_char:
  26              	.LFB40:
   1:Src/main.c    **** /**
   2:Src/main.c    ****  *
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * File Name          : main.c
   5:Src/main.c    ****  * Description        : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  ** This notice applies to any and all portions of this file
   8:Src/main.c    ****  * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****  * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****  * inserted by the user or by software development tools
  11:Src/main.c    ****  * are owned by their respective copyright owners.
  12:Src/main.c    ****  *
  13:Src/main.c    ****  * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****  *
  15:Src/main.c    ****  * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****  * are permitted provided that the following conditions are met:
  17:Src/main.c    ****  *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****  *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****  *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****  *      and/or other materials provided with the distribution.
  22:Src/main.c    ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****  *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****  *      without specific prior written permission.
  25:Src/main.c    ****  *
  26:Src/main.c    ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 2


  33:Src/main.c    ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****  *
  37:Src/main.c    ****  ******************************************************************************
  38:Src/main.c    ****  */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  41:Src/main.c    **** #include "main.h"
  42:Src/main.c    **** #include "stm32f0xx_hal.h"
  43:Src/main.c    **** void _Error_Handler(char *file, int line);
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** int charCounter = 0;
  69:Src/main.c    **** char ledColor;
  70:Src/main.c    **** 
  71:Src/main.c    **** void send_char(char c)
  72:Src/main.c    **** {
  27              		.loc 1 72 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.L2:
  73:Src/main.c    ****   // Use an empty while loop which exits once the flag is set.
  74:Src/main.c    ****   while (!(USART3->ISR & USART_ISR_TXE))
  75:Src/main.c    ****   {
  76:Src/main.c    ****   };
  34              		.loc 1 76 3 view .LVU1
  74:Src/main.c    ****   {
  35              		.loc 1 74 10 discriminator 1 view .LVU2
  74:Src/main.c    ****   {
  36              		.loc 1 74 18 is_stmt 0 discriminator 1 view .LVU3
  37 0000 034B     		ldr	r3, .L4
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 3


  38 0002 DB69     		ldr	r3, [r3, #28]
  74:Src/main.c    ****   {
  39              		.loc 1 74 10 discriminator 1 view .LVU4
  40 0004 1B06     		lsls	r3, r3, #24
  41 0006 FBD5     		bpl	.L2
  42              		.loc 1 76 4 is_stmt 1 view .LVU5
  77:Src/main.c    ****   // Write the character into the transmit data register
  78:Src/main.c    ****   USART3->TDR = c;
  43              		.loc 1 78 3 view .LVU6
  44              		.loc 1 78 15 is_stmt 0 view .LVU7
  45 0008 014B     		ldr	r3, .L4
  46 000a 1885     		strh	r0, [r3, #40]
  79:Src/main.c    ****   return;
  47              		.loc 1 79 3 is_stmt 1 view .LVU8
  80:Src/main.c    **** }
  48              		.loc 1 80 1 is_stmt 0 view .LVU9
  49              		@ sp needed
  50 000c 7047     		bx	lr
  51              	.L5:
  52 000e C046     		.align	2
  53              	.L4:
  54 0010 00480040 		.word	1073760256
  55              		.cfi_endproc
  56              	.LFE40:
  58              		.section	.text.transmit_string,"ax",%progbits
  59              		.align	1
  60              		.global	transmit_string
  61              		.syntax unified
  62              		.code	16
  63              		.thumb_func
  65              	transmit_string:
  66              	.LVL1:
  67              	.LFB41:
  81:Src/main.c    **** 
  82:Src/main.c    **** // Loop through an array of characters, send each one, exit when the null character is reached.
  83:Src/main.c    **** void transmit_string(char str[])
  84:Src/main.c    **** {
  68              		.loc 1 84 1 is_stmt 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		.loc 1 84 1 is_stmt 0 view .LVU11
  73 0000 70B5     		push	{r4, r5, r6, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 16
  76              		.cfi_offset 4, -16
  77              		.cfi_offset 5, -12
  78              		.cfi_offset 6, -8
  79              		.cfi_offset 14, -4
  80 0002 0500     		movs	r5, r0
  85:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  81              		.loc 1 85 3 is_stmt 1 view .LVU12
  82              	.LBB6:
  83              		.loc 1 85 8 view .LVU13
  84              	.LVL2:
  85              		.loc 1 85 12 is_stmt 0 view .LVU14
  86 0004 0024     		movs	r4, #0
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 4


  87              		.loc 1 85 3 view .LVU15
  88 0006 02E0     		b	.L7
  89              	.LVL3:
  90              	.L8:
  86:Src/main.c    ****   {
  87:Src/main.c    ****     send_char(str[i]);
  91              		.loc 1 87 5 is_stmt 1 view .LVU16
  92 0008 FFF7FEFF 		bl	send_char
  93              	.LVL4:
  85:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  94              		.loc 1 85 36 discriminator 3 view .LVU17
  95 000c 0134     		adds	r4, r4, #1
  96              	.LVL5:
  97              	.L7:
  85:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  98              		.loc 1 85 26 discriminator 1 view .LVU18
  85:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  99              		.loc 1 85 22 is_stmt 0 discriminator 1 view .LVU19
 100 000e 285D     		ldrb	r0, [r5, r4]
  85:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
 101              		.loc 1 85 26 discriminator 1 view .LVU20
 102 0010 0028     		cmp	r0, #0
 103 0012 F9D1     		bne	.L8
 104              	.LBE6:
  88:Src/main.c    ****   }
  89:Src/main.c    ****   return;
  90:Src/main.c    **** }
 105              		.loc 1 90 1 view .LVU21
 106              		@ sp needed
 107              	.LVL6:
 108              	.LVL7:
 109              		.loc 1 90 1 view .LVU22
 110 0014 70BD     		pop	{r4, r5, r6, pc}
 111              		.cfi_endproc
 112              	.LFE41:
 114              		.section	.rodata.USART3_4_IRQHandler.str1.4,"aMS",%progbits,1
 115              		.align	2
 116              	.LC0:
 117 0000 4C45443F 		.ascii	"LED?\000"
 117      00
 118 0005 000000   		.align	2
 119              	.LC4:
 120 0008 496E7661 		.ascii	"Invalid character\012\000"
 120      6C696420 
 120      63686172 
 120      61637465 
 120      720A00
 121 001b 00       		.align	2
 122              	.LC6:
 123 001c 434D443F 		.ascii	"CMD?\000"
 123      00
 124              		.section	.text.USART3_4_IRQHandler,"ax",%progbits
 125              		.align	1
 126              		.global	USART3_4_IRQHandler
 127              		.syntax unified
 128              		.code	16
 129              		.thumb_func
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 5


 131              	USART3_4_IRQHandler:
 132              	.LFB42:
  91:Src/main.c    **** 
  92:Src/main.c    **** // Blank USART3 interrupt handler
  93:Src/main.c    **** void USART3_4_IRQHandler(void)
  94:Src/main.c    **** {
 133              		.loc 1 94 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 10B5     		push	{r4, lr}
 138              	.LCFI1:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 4, -8
 141              		.cfi_offset 14, -4
  95:Src/main.c    ****   // Check if the interrupt was triggered by a received character
  96:Src/main.c    ****   if (USART3->ISR & USART_ISR_RXNE)
 142              		.loc 1 96 3 view .LVU24
 143              		.loc 1 96 13 is_stmt 0 view .LVU25
 144 0002 594B     		ldr	r3, .L41
 145 0004 DB69     		ldr	r3, [r3, #28]
 146              		.loc 1 96 6 view .LVU26
 147 0006 9B06     		lsls	r3, r3, #26
 148 0008 00D4     		bmi	.L31
 149              	.L9:
  97:Src/main.c    ****   {
  98:Src/main.c    ****     char c = USART3->RDR;
  99:Src/main.c    ****     transmit_string("LED?");
 100:Src/main.c    ****     if (charCounter == 0)
 101:Src/main.c    ****       switch (c)
 102:Src/main.c    ****       {
 103:Src/main.c    ****       case 'r':
 104:Src/main.c    ****         charCounter++;
 105:Src/main.c    ****         ledColor = 'r';
 106:Src/main.c    ****         break;
 107:Src/main.c    ****       case 'b':
 108:Src/main.c    ****         charCounter++;
 109:Src/main.c    ****         ledColor = 'b';
 110:Src/main.c    ****         break;
 111:Src/main.c    ****       case 'o':
 112:Src/main.c    ****         charCounter++;
 113:Src/main.c    ****         ledColor = 'o';
 114:Src/main.c    ****         break;
 115:Src/main.c    ****       case 'g':
 116:Src/main.c    ****         charCounter++;
 117:Src/main.c    ****         ledColor = 'g';
 118:Src/main.c    ****         break;
 119:Src/main.c    ****       default:
 120:Src/main.c    ****         transmit_string("Invalid character\n");
 121:Src/main.c    ****       }
 122:Src/main.c    ****     else
 123:Src/main.c    ****     {
 124:Src/main.c    ****       transmit_string("CMD?");
 125:Src/main.c    ****       charCounter = 0;
 126:Src/main.c    ****       switch (c)
 127:Src/main.c    ****       {
 128:Src/main.c    ****       // Turn off the LED
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 6


 129:Src/main.c    ****       case '0':
 130:Src/main.c    ****         if (ledColor == 'r')
 131:Src/main.c    ****           GPIOC->ODR &= ~(1 << 6);
 132:Src/main.c    ****         else if (ledColor == 'b')
 133:Src/main.c    ****           GPIOC->ODR &= ~(1 << 7);
 134:Src/main.c    ****         else if (ledColor == 'o')
 135:Src/main.c    ****           GPIOC->ODR &= ~(1 << 8);
 136:Src/main.c    ****         else if (ledColor == 'g')
 137:Src/main.c    ****           GPIOC->ODR &= ~(1 << 9);
 138:Src/main.c    ****         break;
 139:Src/main.c    ****       // Turn on the LED
 140:Src/main.c    ****       case '1':
 141:Src/main.c    ****         if (ledColor == 'r')
 142:Src/main.c    ****           GPIOC->ODR |= (1 << 6);
 143:Src/main.c    ****         else if (ledColor == 'b')
 144:Src/main.c    ****           GPIOC->ODR |= (1 << 7);
 145:Src/main.c    ****         else if (ledColor == 'o')
 146:Src/main.c    ****           GPIOC->ODR |= (1 << 8);
 147:Src/main.c    ****         else if (ledColor == 'g')
 148:Src/main.c    ****           GPIOC->ODR |= (1 << 9);
 149:Src/main.c    ****         break;
 150:Src/main.c    ****       // Toggle the LED
 151:Src/main.c    ****       case '2':
 152:Src/main.c    ****         if (ledColor == 'r')
 153:Src/main.c    ****           GPIOC->ODR ^= (1 << 6);
 154:Src/main.c    ****         else if (ledColor == 'b')
 155:Src/main.c    ****           GPIOC->ODR ^= (1 << 7);
 156:Src/main.c    ****         else if (ledColor == 'o')
 157:Src/main.c    ****           GPIOC->ODR ^= (1 << 8);
 158:Src/main.c    ****         else if (ledColor == 'g')
 159:Src/main.c    ****           GPIOC->ODR ^= (1 << 9);
 160:Src/main.c    ****         break;
 161:Src/main.c    ****       default:
 162:Src/main.c    ****         transmit_string("Invalid character\n");
 163:Src/main.c    ****       }
 164:Src/main.c    ****       ledColor = ' ';
 165:Src/main.c    ****     }
 166:Src/main.c    ****   }
 167:Src/main.c    **** 
 168:Src/main.c    **** 
 169:Src/main.c    ****   return;
 170:Src/main.c    **** }
 150              		.loc 1 170 1 view .LVU27
 151              		@ sp needed
 152 000a 10BD     		pop	{r4, pc}
 153              	.L31:
 154              	.LBB7:
  98:Src/main.c    ****     transmit_string("LED?");
 155              		.loc 1 98 5 is_stmt 1 view .LVU28
  98:Src/main.c    ****     transmit_string("LED?");
 156              		.loc 1 98 20 is_stmt 0 view .LVU29
 157 000c 564B     		ldr	r3, .L41
 158 000e 9C8C     		ldrh	r4, [r3, #36]
  98:Src/main.c    ****     transmit_string("LED?");
 159              		.loc 1 98 10 view .LVU30
 160 0010 E4B2     		uxtb	r4, r4
 161              	.LVL8:
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 7


  99:Src/main.c    ****     if (charCounter == 0)
 162              		.loc 1 99 5 is_stmt 1 view .LVU31
 163 0012 5648     		ldr	r0, .L41+4
 164 0014 FFF7FEFF 		bl	transmit_string
 165              	.LVL9:
 100:Src/main.c    ****       switch (c)
 166              		.loc 1 100 5 view .LVU32
 100:Src/main.c    ****       switch (c)
 167              		.loc 1 100 21 is_stmt 0 view .LVU33
 168 0018 554B     		ldr	r3, .L41+8
 169 001a 1B68     		ldr	r3, [r3]
 100:Src/main.c    ****       switch (c)
 170              		.loc 1 100 8 view .LVU34
 171 001c 002B     		cmp	r3, #0
 172 001e 28D1     		bne	.L11
 101:Src/main.c    ****       {
 173              		.loc 1 101 7 is_stmt 1 view .LVU35
 174 0020 6F2C     		cmp	r4, #111
 175 0022 1BD0     		beq	.L12
 176 0024 0AD8     		bhi	.L13
 177 0026 622C     		cmp	r4, #98
 178 0028 11D0     		beq	.L14
 179 002a 672C     		cmp	r4, #103
 180 002c 1DD1     		bne	.L16
 116:Src/main.c    ****         ledColor = 'g';
 181              		.loc 1 116 9 view .LVU36
 116:Src/main.c    ****         ledColor = 'g';
 182              		.loc 1 116 20 is_stmt 0 view .LVU37
 183 002e 504A     		ldr	r2, .L41+8
 184 0030 0133     		adds	r3, r3, #1
 185 0032 1360     		str	r3, [r2]
 117:Src/main.c    ****         break;
 186              		.loc 1 117 9 is_stmt 1 view .LVU38
 117:Src/main.c    ****         break;
 187              		.loc 1 117 18 is_stmt 0 view .LVU39
 188 0034 4F4B     		ldr	r3, .L41+12
 189 0036 6722     		movs	r2, #103
 190 0038 1A70     		strb	r2, [r3]
 118:Src/main.c    ****       default:
 191              		.loc 1 118 9 is_stmt 1 view .LVU40
 192 003a E6E7     		b	.L9
 193              	.L13:
 101:Src/main.c    ****       {
 194              		.loc 1 101 7 is_stmt 0 view .LVU41
 195 003c 722C     		cmp	r4, #114
 196 003e 14D1     		bne	.L16
 104:Src/main.c    ****         ledColor = 'r';
 197              		.loc 1 104 9 is_stmt 1 view .LVU42
 104:Src/main.c    ****         ledColor = 'r';
 198              		.loc 1 104 20 is_stmt 0 view .LVU43
 199 0040 4B4A     		ldr	r2, .L41+8
 200 0042 0133     		adds	r3, r3, #1
 201 0044 1360     		str	r3, [r2]
 105:Src/main.c    ****         break;
 202              		.loc 1 105 9 is_stmt 1 view .LVU44
 105:Src/main.c    ****         break;
 203              		.loc 1 105 18 is_stmt 0 view .LVU45
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 8


 204 0046 4B4B     		ldr	r3, .L41+12
 205 0048 7222     		movs	r2, #114
 206 004a 1A70     		strb	r2, [r3]
 106:Src/main.c    ****       case 'b':
 207              		.loc 1 106 9 is_stmt 1 view .LVU46
 208 004c DDE7     		b	.L9
 209              	.L14:
 108:Src/main.c    ****         ledColor = 'b';
 210              		.loc 1 108 9 view .LVU47
 108:Src/main.c    ****         ledColor = 'b';
 211              		.loc 1 108 20 is_stmt 0 view .LVU48
 212 004e 484A     		ldr	r2, .L41+8
 213 0050 0133     		adds	r3, r3, #1
 214 0052 1360     		str	r3, [r2]
 109:Src/main.c    ****         break;
 215              		.loc 1 109 9 is_stmt 1 view .LVU49
 109:Src/main.c    ****         break;
 216              		.loc 1 109 18 is_stmt 0 view .LVU50
 217 0054 474B     		ldr	r3, .L41+12
 218 0056 6222     		movs	r2, #98
 219 0058 1A70     		strb	r2, [r3]
 110:Src/main.c    ****       case 'o':
 220              		.loc 1 110 9 is_stmt 1 view .LVU51
 221 005a D6E7     		b	.L9
 222              	.L12:
 112:Src/main.c    ****         ledColor = 'o';
 223              		.loc 1 112 9 view .LVU52
 112:Src/main.c    ****         ledColor = 'o';
 224              		.loc 1 112 20 is_stmt 0 view .LVU53
 225 005c 444A     		ldr	r2, .L41+8
 226 005e 0133     		adds	r3, r3, #1
 227 0060 1360     		str	r3, [r2]
 113:Src/main.c    ****         break;
 228              		.loc 1 113 9 is_stmt 1 view .LVU54
 113:Src/main.c    ****         break;
 229              		.loc 1 113 18 is_stmt 0 view .LVU55
 230 0062 444B     		ldr	r3, .L41+12
 231 0064 6F22     		movs	r2, #111
 232 0066 1A70     		strb	r2, [r3]
 114:Src/main.c    ****       case 'g':
 233              		.loc 1 114 9 is_stmt 1 view .LVU56
 234 0068 CFE7     		b	.L9
 235              	.L16:
 120:Src/main.c    ****       }
 236              		.loc 1 120 9 view .LVU57
 237 006a 4348     		ldr	r0, .L41+16
 238 006c FFF7FEFF 		bl	transmit_string
 239              	.LVL10:
 240 0070 CBE7     		b	.L9
 241              	.L11:
 124:Src/main.c    ****       charCounter = 0;
 242              		.loc 1 124 7 view .LVU58
 243 0072 4248     		ldr	r0, .L41+20
 244 0074 FFF7FEFF 		bl	transmit_string
 245              	.LVL11:
 125:Src/main.c    ****       switch (c)
 246              		.loc 1 125 7 view .LVU59
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 9


 125:Src/main.c    ****       switch (c)
 247              		.loc 1 125 19 is_stmt 0 view .LVU60
 248 0078 3D4B     		ldr	r3, .L41+8
 249 007a 0022     		movs	r2, #0
 250 007c 1A60     		str	r2, [r3]
 126:Src/main.c    ****       {
 251              		.loc 1 126 7 is_stmt 1 view .LVU61
 252 007e 312C     		cmp	r4, #49
 253 0080 25D0     		beq	.L17
 254 0082 322C     		cmp	r4, #50
 255 0084 46D0     		beq	.L18
 256 0086 302C     		cmp	r4, #48
 257 0088 67D1     		bne	.L19
 130:Src/main.c    ****           GPIOC->ODR &= ~(1 << 6);
 258              		.loc 1 130 9 view .LVU62
 130:Src/main.c    ****           GPIOC->ODR &= ~(1 << 6);
 259              		.loc 1 130 22 is_stmt 0 view .LVU63
 260 008a 3A4B     		ldr	r3, .L41+12
 261 008c 1B78     		ldrb	r3, [r3]
 130:Src/main.c    ****           GPIOC->ODR &= ~(1 << 6);
 262              		.loc 1 130 12 view .LVU64
 263 008e 722B     		cmp	r3, #114
 264 0090 0BD0     		beq	.L32
 132:Src/main.c    ****           GPIOC->ODR &= ~(1 << 7);
 265              		.loc 1 132 14 is_stmt 1 view .LVU65
 132:Src/main.c    ****           GPIOC->ODR &= ~(1 << 7);
 266              		.loc 1 132 17 is_stmt 0 view .LVU66
 267 0092 622B     		cmp	r3, #98
 268 0094 0FD0     		beq	.L33
 134:Src/main.c    ****           GPIOC->ODR &= ~(1 << 8);
 269              		.loc 1 134 14 is_stmt 1 view .LVU67
 134:Src/main.c    ****           GPIOC->ODR &= ~(1 << 8);
 270              		.loc 1 134 17 is_stmt 0 view .LVU68
 271 0096 6F2B     		cmp	r3, #111
 272 0098 13D0     		beq	.L34
 136:Src/main.c    ****           GPIOC->ODR &= ~(1 << 9);
 273              		.loc 1 136 14 is_stmt 1 view .LVU69
 136:Src/main.c    ****           GPIOC->ODR &= ~(1 << 9);
 274              		.loc 1 136 17 is_stmt 0 view .LVU70
 275 009a 672B     		cmp	r3, #103
 276 009c 60D1     		bne	.L21
 137:Src/main.c    ****         break;
 277              		.loc 1 137 11 is_stmt 1 view .LVU71
 137:Src/main.c    ****         break;
 278              		.loc 1 137 16 is_stmt 0 view .LVU72
 279 009e 384A     		ldr	r2, .L41+24
 280 00a0 5369     		ldr	r3, [r2, #20]
 137:Src/main.c    ****         break;
 281              		.loc 1 137 22 view .LVU73
 282 00a2 3849     		ldr	r1, .L41+28
 283 00a4 0B40     		ands	r3, r1
 284 00a6 5361     		str	r3, [r2, #20]
 285 00a8 5AE0     		b	.L21
 286              	.L32:
 131:Src/main.c    ****         else if (ledColor == 'b')
 287              		.loc 1 131 11 is_stmt 1 view .LVU74
 131:Src/main.c    ****         else if (ledColor == 'b')
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 10


 288              		.loc 1 131 16 is_stmt 0 view .LVU75
 289 00aa 354A     		ldr	r2, .L41+24
 290 00ac 5369     		ldr	r3, [r2, #20]
 131:Src/main.c    ****         else if (ledColor == 'b')
 291              		.loc 1 131 22 view .LVU76
 292 00ae 4021     		movs	r1, #64
 293 00b0 8B43     		bics	r3, r1
 294 00b2 5361     		str	r3, [r2, #20]
 295 00b4 54E0     		b	.L21
 296              	.L33:
 133:Src/main.c    ****         else if (ledColor == 'o')
 297              		.loc 1 133 11 is_stmt 1 view .LVU77
 133:Src/main.c    ****         else if (ledColor == 'o')
 298              		.loc 1 133 16 is_stmt 0 view .LVU78
 299 00b6 324A     		ldr	r2, .L41+24
 300 00b8 5369     		ldr	r3, [r2, #20]
 133:Src/main.c    ****         else if (ledColor == 'o')
 301              		.loc 1 133 22 view .LVU79
 302 00ba 8021     		movs	r1, #128
 303 00bc 8B43     		bics	r3, r1
 304 00be 5361     		str	r3, [r2, #20]
 305 00c0 4EE0     		b	.L21
 306              	.L34:
 135:Src/main.c    ****         else if (ledColor == 'g')
 307              		.loc 1 135 11 is_stmt 1 view .LVU80
 135:Src/main.c    ****         else if (ledColor == 'g')
 308              		.loc 1 135 16 is_stmt 0 view .LVU81
 309 00c2 2F4A     		ldr	r2, .L41+24
 310 00c4 5369     		ldr	r3, [r2, #20]
 135:Src/main.c    ****         else if (ledColor == 'g')
 311              		.loc 1 135 22 view .LVU82
 312 00c6 3049     		ldr	r1, .L41+32
 313 00c8 0B40     		ands	r3, r1
 314 00ca 5361     		str	r3, [r2, #20]
 315 00cc 48E0     		b	.L21
 316              	.L17:
 141:Src/main.c    ****           GPIOC->ODR |= (1 << 6);
 317              		.loc 1 141 9 is_stmt 1 view .LVU83
 141:Src/main.c    ****           GPIOC->ODR |= (1 << 6);
 318              		.loc 1 141 22 is_stmt 0 view .LVU84
 319 00ce 294B     		ldr	r3, .L41+12
 320 00d0 1B78     		ldrb	r3, [r3]
 141:Src/main.c    ****           GPIOC->ODR |= (1 << 6);
 321              		.loc 1 141 12 view .LVU85
 322 00d2 722B     		cmp	r3, #114
 323 00d4 0CD0     		beq	.L35
 143:Src/main.c    ****           GPIOC->ODR |= (1 << 7);
 324              		.loc 1 143 14 is_stmt 1 view .LVU86
 143:Src/main.c    ****           GPIOC->ODR |= (1 << 7);
 325              		.loc 1 143 17 is_stmt 0 view .LVU87
 326 00d6 622B     		cmp	r3, #98
 327 00d8 10D0     		beq	.L36
 145:Src/main.c    ****           GPIOC->ODR |= (1 << 8);
 328              		.loc 1 145 14 is_stmt 1 view .LVU88
 145:Src/main.c    ****           GPIOC->ODR |= (1 << 8);
 329              		.loc 1 145 17 is_stmt 0 view .LVU89
 330 00da 6F2B     		cmp	r3, #111
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 11


 331 00dc 14D0     		beq	.L37
 147:Src/main.c    ****           GPIOC->ODR |= (1 << 9);
 332              		.loc 1 147 14 is_stmt 1 view .LVU90
 147:Src/main.c    ****           GPIOC->ODR |= (1 << 9);
 333              		.loc 1 147 17 is_stmt 0 view .LVU91
 334 00de 672B     		cmp	r3, #103
 335 00e0 3ED1     		bne	.L21
 148:Src/main.c    ****         break;
 336              		.loc 1 148 11 is_stmt 1 view .LVU92
 148:Src/main.c    ****         break;
 337              		.loc 1 148 16 is_stmt 0 view .LVU93
 338 00e2 274A     		ldr	r2, .L41+24
 339 00e4 5169     		ldr	r1, [r2, #20]
 148:Src/main.c    ****         break;
 340              		.loc 1 148 22 view .LVU94
 341 00e6 9A33     		adds	r3, r3, #154
 342 00e8 FF33     		adds	r3, r3, #255
 343 00ea 0B43     		orrs	r3, r1
 344 00ec 5361     		str	r3, [r2, #20]
 345 00ee 37E0     		b	.L21
 346              	.L35:
 142:Src/main.c    ****         else if (ledColor == 'b')
 347              		.loc 1 142 11 is_stmt 1 view .LVU95
 142:Src/main.c    ****         else if (ledColor == 'b')
 348              		.loc 1 142 16 is_stmt 0 view .LVU96
 349 00f0 234A     		ldr	r2, .L41+24
 350 00f2 5369     		ldr	r3, [r2, #20]
 142:Src/main.c    ****         else if (ledColor == 'b')
 351              		.loc 1 142 22 view .LVU97
 352 00f4 4021     		movs	r1, #64
 353 00f6 0B43     		orrs	r3, r1
 354 00f8 5361     		str	r3, [r2, #20]
 355 00fa 31E0     		b	.L21
 356              	.L36:
 144:Src/main.c    ****         else if (ledColor == 'o')
 357              		.loc 1 144 11 is_stmt 1 view .LVU98
 144:Src/main.c    ****         else if (ledColor == 'o')
 358              		.loc 1 144 16 is_stmt 0 view .LVU99
 359 00fc 204A     		ldr	r2, .L41+24
 360 00fe 5369     		ldr	r3, [r2, #20]
 144:Src/main.c    ****         else if (ledColor == 'o')
 361              		.loc 1 144 22 view .LVU100
 362 0100 8021     		movs	r1, #128
 363 0102 0B43     		orrs	r3, r1
 364 0104 5361     		str	r3, [r2, #20]
 365 0106 2BE0     		b	.L21
 366              	.L37:
 146:Src/main.c    ****         else if (ledColor == 'g')
 367              		.loc 1 146 11 is_stmt 1 view .LVU101
 146:Src/main.c    ****         else if (ledColor == 'g')
 368              		.loc 1 146 16 is_stmt 0 view .LVU102
 369 0108 1D4A     		ldr	r2, .L41+24
 370 010a 5169     		ldr	r1, [r2, #20]
 146:Src/main.c    ****         else if (ledColor == 'g')
 371              		.loc 1 146 22 view .LVU103
 372 010c 9133     		adds	r3, r3, #145
 373 010e 0B43     		orrs	r3, r1
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 12


 374 0110 5361     		str	r3, [r2, #20]
 375 0112 25E0     		b	.L21
 376              	.L18:
 152:Src/main.c    ****           GPIOC->ODR ^= (1 << 6);
 377              		.loc 1 152 9 is_stmt 1 view .LVU104
 152:Src/main.c    ****           GPIOC->ODR ^= (1 << 6);
 378              		.loc 1 152 22 is_stmt 0 view .LVU105
 379 0114 174B     		ldr	r3, .L41+12
 380 0116 1B78     		ldrb	r3, [r3]
 152:Src/main.c    ****           GPIOC->ODR ^= (1 << 6);
 381              		.loc 1 152 12 view .LVU106
 382 0118 722B     		cmp	r3, #114
 383 011a 0CD0     		beq	.L38
 154:Src/main.c    ****           GPIOC->ODR ^= (1 << 7);
 384              		.loc 1 154 14 is_stmt 1 view .LVU107
 154:Src/main.c    ****           GPIOC->ODR ^= (1 << 7);
 385              		.loc 1 154 17 is_stmt 0 view .LVU108
 386 011c 622B     		cmp	r3, #98
 387 011e 10D0     		beq	.L39
 156:Src/main.c    ****           GPIOC->ODR ^= (1 << 8);
 388              		.loc 1 156 14 is_stmt 1 view .LVU109
 156:Src/main.c    ****           GPIOC->ODR ^= (1 << 8);
 389              		.loc 1 156 17 is_stmt 0 view .LVU110
 390 0120 6F2B     		cmp	r3, #111
 391 0122 14D0     		beq	.L40
 158:Src/main.c    ****           GPIOC->ODR ^= (1 << 9);
 392              		.loc 1 158 14 is_stmt 1 view .LVU111
 158:Src/main.c    ****           GPIOC->ODR ^= (1 << 9);
 393              		.loc 1 158 17 is_stmt 0 view .LVU112
 394 0124 672B     		cmp	r3, #103
 395 0126 1BD1     		bne	.L21
 159:Src/main.c    ****         break;
 396              		.loc 1 159 11 is_stmt 1 view .LVU113
 159:Src/main.c    ****         break;
 397              		.loc 1 159 16 is_stmt 0 view .LVU114
 398 0128 154A     		ldr	r2, .L41+24
 399 012a 5169     		ldr	r1, [r2, #20]
 159:Src/main.c    ****         break;
 400              		.loc 1 159 22 view .LVU115
 401 012c 9A33     		adds	r3, r3, #154
 402 012e FF33     		adds	r3, r3, #255
 403 0130 4B40     		eors	r3, r1
 404 0132 5361     		str	r3, [r2, #20]
 405 0134 14E0     		b	.L21
 406              	.L38:
 153:Src/main.c    ****         else if (ledColor == 'b')
 407              		.loc 1 153 11 is_stmt 1 view .LVU116
 153:Src/main.c    ****         else if (ledColor == 'b')
 408              		.loc 1 153 16 is_stmt 0 view .LVU117
 409 0136 124A     		ldr	r2, .L41+24
 410 0138 5369     		ldr	r3, [r2, #20]
 153:Src/main.c    ****         else if (ledColor == 'b')
 411              		.loc 1 153 22 view .LVU118
 412 013a 4021     		movs	r1, #64
 413 013c 4B40     		eors	r3, r1
 414 013e 5361     		str	r3, [r2, #20]
 415 0140 0EE0     		b	.L21
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 13


 416              	.L39:
 155:Src/main.c    ****         else if (ledColor == 'o')
 417              		.loc 1 155 11 is_stmt 1 view .LVU119
 155:Src/main.c    ****         else if (ledColor == 'o')
 418              		.loc 1 155 16 is_stmt 0 view .LVU120
 419 0142 0F4A     		ldr	r2, .L41+24
 420 0144 5369     		ldr	r3, [r2, #20]
 155:Src/main.c    ****         else if (ledColor == 'o')
 421              		.loc 1 155 22 view .LVU121
 422 0146 8021     		movs	r1, #128
 423 0148 4B40     		eors	r3, r1
 424 014a 5361     		str	r3, [r2, #20]
 425 014c 08E0     		b	.L21
 426              	.L40:
 157:Src/main.c    ****         else if (ledColor == 'g')
 427              		.loc 1 157 11 is_stmt 1 view .LVU122
 157:Src/main.c    ****         else if (ledColor == 'g')
 428              		.loc 1 157 16 is_stmt 0 view .LVU123
 429 014e 0C4A     		ldr	r2, .L41+24
 430 0150 5169     		ldr	r1, [r2, #20]
 157:Src/main.c    ****         else if (ledColor == 'g')
 431              		.loc 1 157 22 view .LVU124
 432 0152 9133     		adds	r3, r3, #145
 433 0154 4B40     		eors	r3, r1
 434 0156 5361     		str	r3, [r2, #20]
 435 0158 02E0     		b	.L21
 436              	.L19:
 162:Src/main.c    ****       }
 437              		.loc 1 162 9 is_stmt 1 view .LVU125
 438 015a 0748     		ldr	r0, .L41+16
 439 015c FFF7FEFF 		bl	transmit_string
 440              	.LVL12:
 441              	.L21:
 164:Src/main.c    ****     }
 442              		.loc 1 164 7 view .LVU126
 164:Src/main.c    ****     }
 443              		.loc 1 164 16 is_stmt 0 view .LVU127
 444 0160 044B     		ldr	r3, .L41+12
 445 0162 2022     		movs	r2, #32
 446 0164 1A70     		strb	r2, [r3]
 447              	.LBE7:
 169:Src/main.c    **** }
 448              		.loc 1 169 3 is_stmt 1 view .LVU128
 449 0166 50E7     		b	.L9
 450              	.L42:
 451              		.align	2
 452              	.L41:
 453 0168 00480040 		.word	1073760256
 454 016c 00000000 		.word	.LC0
 455 0170 00000000 		.word	charCounter
 456 0174 00000000 		.word	ledColor
 457 0178 08000000 		.word	.LC4
 458 017c 1C000000 		.word	.LC6
 459 0180 00080048 		.word	1207961600
 460 0184 FFFDFFFF 		.word	-513
 461 0188 FFFEFFFF 		.word	-257
 462              		.cfi_endproc
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 14


 463              	.LFE42:
 465              		.section	.text._Error_Handler,"ax",%progbits
 466              		.align	1
 467              		.global	_Error_Handler
 468              		.syntax unified
 469              		.code	16
 470              		.thumb_func
 472              	_Error_Handler:
 473              	.LFB45:
 171:Src/main.c    **** 
 172:Src/main.c    **** int main(void)
 173:Src/main.c    **** {
 174:Src/main.c    ****   SystemClock_Config();
 175:Src/main.c    **** 
 176:Src/main.c    ****   // Enable GPIOB clock
 177:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 178:Src/main.c    **** 
 179:Src/main.c    ****   // Enable GPIOC clock
 180:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 181:Src/main.c    **** 
 182:Src/main.c    ****   // Set PB10 and PB11 to alternate function mode.
 183:Src/main.c    ****   GPIOB->MODER &= ~(3 << 20);
 184:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
 185:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
 186:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
 187:Src/main.c    **** 
 188:Src/main.c    ****   // Set PB10 and PB11 in AFRH AF4 mode (PB10 -> TX, PB11 -> RX) (USART3)
 189:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 8);
 190:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 191:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 192:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 193:Src/main.c    **** 
 194:Src/main.c    ****   // Enable the red PC6, PC7, PC8, and PC9 to general purpose output mode
 195:Src/main.c    ****   GPIOC->MODER &= ~(3 << 12);
 196:Src/main.c    ****   GPIOC->MODER |= 1 << 12;
 197:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 198:Src/main.c    ****   GPIOC->MODER |= 1 << 14;
 199:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 200:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 201:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 202:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 203:Src/main.c    **** 
 204:Src/main.c    ****   // Set PC6, PC7, PC8, and PC9 to push-pull
 205:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
 206:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 207:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 208:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 209:Src/main.c    **** 
 210:Src/main.c    ****   // Set PC6, PC7, PC8, and PC9 to low speed
 211:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 12);
 212:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
 213:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 16);
 214:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 18);
 215:Src/main.c    **** 
 216:Src/main.c    ****   // Set PC6, PC7, PC8, and PC9 to no pull-up, no pull-down
 217:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 12);
 218:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 15


 219:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 220:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 221:Src/main.c    **** 
 222:Src/main.c    ****   // Set PC6 (red), PC7 (blue), PC8 (orange), and PC9 (green) to high
 223:Src/main.c    ****   GPIOC->ODR |= (1 << 6);
 224:Src/main.c    ****   GPIOC->ODR |= (1 << 7);
 225:Src/main.c    ****   GPIOC->ODR |= (1 << 8);
 226:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
 227:Src/main.c    **** 
 228:Src/main.c    ****   // Enable USART3 clock
 229:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
 230:Src/main.c    ****   // Set baud rate to 115200 bits/s
 231:Src/main.c    ****   USART3->BRR = HAL_RCC_GetHCLKFreq() / 115200;
 232:Src/main.c    ****   // Enable transmission and reception
 233:Src/main.c    ****   USART3->CR1 |= USART_CR1_TE | USART_CR1_RE;
 234:Src/main.c    ****   // Enable USART3
 235:Src/main.c    ****   USART3->CR1 |= USART_CR1_UE;
 236:Src/main.c    **** 
 237:Src/main.c    ****   // Enable the RXNE interrupt
 238:Src/main.c    ****   USART3->CR1 |= USART_CR1_RXNEIE;
 239:Src/main.c    **** 
 240:Src/main.c    ****   // Enable the USART3 interrupt
 241:Src/main.c    ****   NVIC_EnableIRQ(USART3_4_IRQn);
 242:Src/main.c    ****   NVIC_SetPriority(USART3_4_IRQn, 0);
 243:Src/main.c    **** 
 244:Src/main.c    ****   // Send the initial message
 245:Src/main.c    ****   transmit_string("LED?");
 246:Src/main.c    **** 
 247:Src/main.c    ****   while (1)
 248:Src/main.c    ****   {
 249:Src/main.c    ****   }
 250:Src/main.c    **** }
 251:Src/main.c    **** 
 252:Src/main.c    **** /** System Clock Configuration
 253:Src/main.c    ****  */
 254:Src/main.c    **** void SystemClock_Config(void)
 255:Src/main.c    **** {
 256:Src/main.c    **** 
 257:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 258:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 259:Src/main.c    **** 
 260:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 261:Src/main.c    ****    */
 262:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 263:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 264:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 265:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 266:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 267:Src/main.c    ****   {
 268:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 269:Src/main.c    ****   }
 270:Src/main.c    **** 
 271:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks
 272:Src/main.c    ****    */
 273:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 274:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 275:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 16


 276:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 277:Src/main.c    **** 
 278:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 279:Src/main.c    ****   {
 280:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 281:Src/main.c    ****   }
 282:Src/main.c    **** 
 283:Src/main.c    ****   /**Configure the Systick interrupt time
 284:Src/main.c    ****    */
 285:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 286:Src/main.c    **** 
 287:Src/main.c    ****   /**Configure the Systick
 288:Src/main.c    ****    */
 289:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 290:Src/main.c    **** 
 291:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 292:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 293:Src/main.c    **** }
 294:Src/main.c    **** 
 295:Src/main.c    **** /* USER CODE BEGIN 4 */
 296:Src/main.c    **** 
 297:Src/main.c    **** /* USER CODE END 4 */
 298:Src/main.c    **** 
 299:Src/main.c    **** /**
 300:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 301:Src/main.c    ****  * @param  None
 302:Src/main.c    ****  * @retval None
 303:Src/main.c    ****  */
 304:Src/main.c    **** void _Error_Handler(char *file, int line)
 305:Src/main.c    **** {
 474              		.loc 1 305 1 view -0
 475              		.cfi_startproc
 476              		@ Volatile: function does not return.
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480              	.LVL13:
 481              	.L44:
 306:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 307:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 308:Src/main.c    ****   while (1)
 482              		.loc 1 308 3 view .LVU130
 309:Src/main.c    ****   {
 310:Src/main.c    ****   }
 483              		.loc 1 310 3 view .LVU131
 308:Src/main.c    ****   {
 484              		.loc 1 308 9 view .LVU132
 485 0000 FEE7     		b	.L44
 486              		.cfi_endproc
 487              	.LFE45:
 489              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 490              		.align	2
 491              	.LC8:
 492 0000 5372632F 		.ascii	"Src/main.c\000"
 492      6D61696E 
 492      2E6300
 493              		.global	__aeabi_uidiv
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 17


 494              		.section	.text.SystemClock_Config,"ax",%progbits
 495              		.align	1
 496              		.global	SystemClock_Config
 497              		.syntax unified
 498              		.code	16
 499              		.thumb_func
 501              	SystemClock_Config:
 502              	.LFB44:
 255:Src/main.c    **** 
 503              		.loc 1 255 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 72
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507 0000 00B5     		push	{lr}
 508              	.LCFI2:
 509              		.cfi_def_cfa_offset 4
 510              		.cfi_offset 14, -4
 511 0002 93B0     		sub	sp, sp, #76
 512              	.LCFI3:
 513              		.cfi_def_cfa_offset 80
 257:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 514              		.loc 1 257 3 view .LVU134
 258:Src/main.c    **** 
 515              		.loc 1 258 3 view .LVU135
 262:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 516              		.loc 1 262 3 view .LVU136
 262:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 517              		.loc 1 262 36 is_stmt 0 view .LVU137
 518 0004 0223     		movs	r3, #2
 519 0006 0593     		str	r3, [sp, #20]
 263:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 520              		.loc 1 263 3 is_stmt 1 view .LVU138
 263:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 521              		.loc 1 263 30 is_stmt 0 view .LVU139
 522 0008 013B     		subs	r3, r3, #1
 523 000a 0893     		str	r3, [sp, #32]
 264:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 524              		.loc 1 264 3 is_stmt 1 view .LVU140
 264:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 525              		.loc 1 264 41 is_stmt 0 view .LVU141
 526 000c 0F33     		adds	r3, r3, #15
 527 000e 0993     		str	r3, [sp, #36]
 265:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 528              		.loc 1 265 3 is_stmt 1 view .LVU142
 265:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 529              		.loc 1 265 34 is_stmt 0 view .LVU143
 530 0010 0023     		movs	r3, #0
 531 0012 0E93     		str	r3, [sp, #56]
 266:Src/main.c    ****   {
 532              		.loc 1 266 3 is_stmt 1 view .LVU144
 266:Src/main.c    ****   {
 533              		.loc 1 266 7 is_stmt 0 view .LVU145
 534 0014 05A8     		add	r0, sp, #20
 535 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 536              	.LVL14:
 266:Src/main.c    ****   {
 537              		.loc 1 266 6 discriminator 1 view .LVU146
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 18


 538 001a 0028     		cmp	r0, #0
 539 001c 1ED1     		bne	.L48
 273:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 540              		.loc 1 273 3 is_stmt 1 view .LVU147
 273:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 541              		.loc 1 273 31 is_stmt 0 view .LVU148
 542 001e 0723     		movs	r3, #7
 543 0020 0193     		str	r3, [sp, #4]
 274:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 544              		.loc 1 274 3 is_stmt 1 view .LVU149
 274:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 545              		.loc 1 274 34 is_stmt 0 view .LVU150
 546 0022 0023     		movs	r3, #0
 547 0024 0293     		str	r3, [sp, #8]
 275:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 548              		.loc 1 275 3 is_stmt 1 view .LVU151
 275:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 549              		.loc 1 275 35 is_stmt 0 view .LVU152
 550 0026 0393     		str	r3, [sp, #12]
 276:Src/main.c    **** 
 551              		.loc 1 276 3 is_stmt 1 view .LVU153
 276:Src/main.c    **** 
 552              		.loc 1 276 36 is_stmt 0 view .LVU154
 553 0028 0493     		str	r3, [sp, #16]
 278:Src/main.c    ****   {
 554              		.loc 1 278 3 is_stmt 1 view .LVU155
 278:Src/main.c    ****   {
 555              		.loc 1 278 7 is_stmt 0 view .LVU156
 556 002a 0021     		movs	r1, #0
 557 002c 01A8     		add	r0, sp, #4
 558 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 559              	.LVL15:
 278:Src/main.c    ****   {
 560              		.loc 1 278 6 discriminator 1 view .LVU157
 561 0032 0028     		cmp	r0, #0
 562 0034 17D1     		bne	.L49
 285:Src/main.c    **** 
 563              		.loc 1 285 3 is_stmt 1 view .LVU158
 285:Src/main.c    **** 
 564              		.loc 1 285 22 is_stmt 0 view .LVU159
 565 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 566              	.LVL16:
 285:Src/main.c    **** 
 567              		.loc 1 285 3 discriminator 1 view .LVU160
 568 003a FA21     		movs	r1, #250
 569 003c 8900     		lsls	r1, r1, #2
 570 003e FFF7FEFF 		bl	__aeabi_uidiv
 571              	.LVL17:
 572 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 573              	.LVL18:
 289:Src/main.c    **** 
 574              		.loc 1 289 3 is_stmt 1 view .LVU161
 575 0046 0420     		movs	r0, #4
 576 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 577              	.LVL19:
 292:Src/main.c    **** }
 578              		.loc 1 292 3 view .LVU162
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 19


 579 004c 0120     		movs	r0, #1
 580 004e 0022     		movs	r2, #0
 581 0050 0021     		movs	r1, #0
 582 0052 4042     		rsbs	r0, r0, #0
 583 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 584              	.LVL20:
 293:Src/main.c    **** 
 585              		.loc 1 293 1 is_stmt 0 view .LVU163
 586 0058 13B0     		add	sp, sp, #76
 587              		@ sp needed
 588 005a 00BD     		pop	{pc}
 589              	.L48:
 268:Src/main.c    ****   }
 590              		.loc 1 268 5 is_stmt 1 view .LVU164
 591 005c 8621     		movs	r1, #134
 592 005e 0448     		ldr	r0, .L50
 593 0060 4900     		lsls	r1, r1, #1
 594 0062 FFF7FEFF 		bl	_Error_Handler
 595              	.LVL21:
 596              	.L49:
 280:Src/main.c    ****   }
 597              		.loc 1 280 5 view .LVU165
 598 0066 8C21     		movs	r1, #140
 599 0068 0148     		ldr	r0, .L50
 600 006a 4900     		lsls	r1, r1, #1
 601 006c FFF7FEFF 		bl	_Error_Handler
 602              	.LVL22:
 603              	.L51:
 604              		.align	2
 605              	.L50:
 606 0070 00000000 		.word	.LC8
 607              		.cfi_endproc
 608              	.LFE44:
 610              		.section	.text.main,"ax",%progbits
 611              		.align	1
 612              		.global	main
 613              		.syntax unified
 614              		.code	16
 615              		.thumb_func
 617              	main:
 618              	.LFB43:
 173:Src/main.c    ****   SystemClock_Config();
 619              		.loc 1 173 1 view -0
 620              		.cfi_startproc
 621              		@ Volatile: function does not return.
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 625              	.LCFI4:
 626              		.cfi_def_cfa_offset 20
 627              		.cfi_offset 4, -20
 628              		.cfi_offset 5, -16
 629              		.cfi_offset 6, -12
 630              		.cfi_offset 7, -8
 631              		.cfi_offset 14, -4
 632 0002 D646     		mov	lr, r10
 633 0004 4F46     		mov	r7, r9
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 20


 634 0006 4646     		mov	r6, r8
 635 0008 C0B5     		push	{r6, r7, lr}
 636              	.LCFI5:
 637              		.cfi_def_cfa_offset 32
 638              		.cfi_offset 8, -32
 639              		.cfi_offset 9, -28
 640              		.cfi_offset 10, -24
 174:Src/main.c    **** 
 641              		.loc 1 174 3 view .LVU167
 642 000a FFF7FEFF 		bl	SystemClock_Config
 643              	.LVL23:
 177:Src/main.c    **** 
 644              		.loc 1 177 3 view .LVU168
 177:Src/main.c    **** 
 645              		.loc 1 177 6 is_stmt 0 view .LVU169
 646 000e 5B4A     		ldr	r2, .L54
 647 0010 5369     		ldr	r3, [r2, #20]
 177:Src/main.c    **** 
 648              		.loc 1 177 15 view .LVU170
 649 0012 8021     		movs	r1, #128
 650 0014 C902     		lsls	r1, r1, #11
 651 0016 0B43     		orrs	r3, r1
 652 0018 5361     		str	r3, [r2, #20]
 180:Src/main.c    **** 
 653              		.loc 1 180 3 is_stmt 1 view .LVU171
 180:Src/main.c    **** 
 654              		.loc 1 180 6 is_stmt 0 view .LVU172
 655 001a 5069     		ldr	r0, [r2, #20]
 180:Src/main.c    **** 
 656              		.loc 1 180 15 view .LVU173
 657 001c 8023     		movs	r3, #128
 658 001e 1B03     		lsls	r3, r3, #12
 659 0020 0343     		orrs	r3, r0
 660 0022 5361     		str	r3, [r2, #20]
 183:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
 661              		.loc 1 183 3 is_stmt 1 view .LVU174
 183:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
 662              		.loc 1 183 8 is_stmt 0 view .LVU175
 663 0024 564B     		ldr	r3, .L54+4
 664 0026 1868     		ldr	r0, [r3]
 183:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
 665              		.loc 1 183 16 view .LVU176
 666 0028 564C     		ldr	r4, .L54+8
 667 002a 2040     		ands	r0, r4
 668 002c 1860     		str	r0, [r3]
 184:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
 669              		.loc 1 184 3 is_stmt 1 view .LVU177
 184:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
 670              		.loc 1 184 8 is_stmt 0 view .LVU178
 671 002e 1C68     		ldr	r4, [r3]
 184:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
 672              		.loc 1 184 16 view .LVU179
 673 0030 8020     		movs	r0, #128
 674 0032 8003     		lsls	r0, r0, #14
 675 0034 2043     		orrs	r0, r4
 676 0036 1860     		str	r0, [r3]
 185:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 21


 677              		.loc 1 185 3 is_stmt 1 view .LVU180
 185:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
 678              		.loc 1 185 8 is_stmt 0 view .LVU181
 679 0038 1868     		ldr	r0, [r3]
 185:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
 680              		.loc 1 185 16 view .LVU182
 681 003a 534C     		ldr	r4, .L54+12
 682 003c 2040     		ands	r0, r4
 683 003e 1860     		str	r0, [r3]
 186:Src/main.c    **** 
 684              		.loc 1 186 3 is_stmt 1 view .LVU183
 186:Src/main.c    **** 
 685              		.loc 1 186 8 is_stmt 0 view .LVU184
 686 0040 1C68     		ldr	r4, [r3]
 186:Src/main.c    **** 
 687              		.loc 1 186 16 view .LVU185
 688 0042 8020     		movs	r0, #128
 689 0044 0004     		lsls	r0, r0, #16
 690 0046 2043     		orrs	r0, r4
 691 0048 1860     		str	r0, [r3]
 189:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 692              		.loc 1 189 3 is_stmt 1 view .LVU186
 189:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 693              		.loc 1 189 13 is_stmt 0 view .LVU187
 694 004a 586A     		ldr	r0, [r3, #36]
 189:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 695              		.loc 1 189 17 view .LVU188
 696 004c 4F4C     		ldr	r4, .L54+16
 697 004e 2040     		ands	r0, r4
 698 0050 5862     		str	r0, [r3, #36]
 190:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 699              		.loc 1 190 3 is_stmt 1 view .LVU189
 190:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 700              		.loc 1 190 13 is_stmt 0 view .LVU190
 701 0052 5C6A     		ldr	r4, [r3, #36]
 190:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 702              		.loc 1 190 17 view .LVU191
 703 0054 8020     		movs	r0, #128
 704 0056 C000     		lsls	r0, r0, #3
 705 0058 2043     		orrs	r0, r4
 706 005a 5862     		str	r0, [r3, #36]
 191:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 707              		.loc 1 191 3 is_stmt 1 view .LVU192
 191:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 708              		.loc 1 191 13 is_stmt 0 view .LVU193
 709 005c 586A     		ldr	r0, [r3, #36]
 191:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 710              		.loc 1 191 17 view .LVU194
 711 005e 4C4C     		ldr	r4, .L54+20
 712 0060 2040     		ands	r0, r4
 713 0062 5862     		str	r0, [r3, #36]
 192:Src/main.c    **** 
 714              		.loc 1 192 3 is_stmt 1 view .LVU195
 192:Src/main.c    **** 
 715              		.loc 1 192 13 is_stmt 0 view .LVU196
 716 0064 5C6A     		ldr	r4, [r3, #36]
 192:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 22


 717              		.loc 1 192 17 view .LVU197
 718 0066 8020     		movs	r0, #128
 719 0068 C001     		lsls	r0, r0, #7
 720 006a 0443     		orrs	r4, r0
 721 006c 5C62     		str	r4, [r3, #36]
 195:Src/main.c    ****   GPIOC->MODER |= 1 << 12;
 722              		.loc 1 195 3 is_stmt 1 view .LVU198
 195:Src/main.c    ****   GPIOC->MODER |= 1 << 12;
 723              		.loc 1 195 8 is_stmt 0 view .LVU199
 724 006e 494B     		ldr	r3, .L54+24
 725 0070 1C68     		ldr	r4, [r3]
 195:Src/main.c    ****   GPIOC->MODER |= 1 << 12;
 726              		.loc 1 195 16 view .LVU200
 727 0072 494D     		ldr	r5, .L54+28
 728 0074 A846     		mov	r8, r5
 729 0076 2C40     		ands	r4, r5
 730 0078 1C60     		str	r4, [r3]
 196:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 731              		.loc 1 196 3 is_stmt 1 view .LVU201
 196:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 732              		.loc 1 196 8 is_stmt 0 view .LVU202
 733 007a 1D68     		ldr	r5, [r3]
 196:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 734              		.loc 1 196 16 view .LVU203
 735 007c 8024     		movs	r4, #128
 736 007e 6401     		lsls	r4, r4, #5
 737 0080 2C43     		orrs	r4, r5
 738 0082 1C60     		str	r4, [r3]
 197:Src/main.c    ****   GPIOC->MODER |= 1 << 14;
 739              		.loc 1 197 3 is_stmt 1 view .LVU204
 197:Src/main.c    ****   GPIOC->MODER |= 1 << 14;
 740              		.loc 1 197 8 is_stmt 0 view .LVU205
 741 0084 1C68     		ldr	r4, [r3]
 197:Src/main.c    ****   GPIOC->MODER |= 1 << 14;
 742              		.loc 1 197 16 view .LVU206
 743 0086 454D     		ldr	r5, .L54+32
 744 0088 AC46     		mov	ip, r5
 745 008a 2C40     		ands	r4, r5
 746 008c 1C60     		str	r4, [r3]
 198:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 747              		.loc 1 198 3 is_stmt 1 view .LVU207
 198:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 748              		.loc 1 198 8 is_stmt 0 view .LVU208
 749 008e 1C68     		ldr	r4, [r3]
 198:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 750              		.loc 1 198 16 view .LVU209
 751 0090 2043     		orrs	r0, r4
 752 0092 1860     		str	r0, [r3]
 199:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 753              		.loc 1 199 3 is_stmt 1 view .LVU210
 199:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 754              		.loc 1 199 8 is_stmt 0 view .LVU211
 755 0094 1868     		ldr	r0, [r3]
 199:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 756              		.loc 1 199 16 view .LVU212
 757 0096 424D     		ldr	r5, .L54+36
 758 0098 2840     		ands	r0, r5
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 23


 759 009a 1860     		str	r0, [r3]
 200:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 760              		.loc 1 200 3 is_stmt 1 view .LVU213
 200:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 761              		.loc 1 200 8 is_stmt 0 view .LVU214
 762 009c 1C68     		ldr	r4, [r3]
 200:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 763              		.loc 1 200 16 view .LVU215
 764 009e 8020     		movs	r0, #128
 765 00a0 4002     		lsls	r0, r0, #9
 766 00a2 2043     		orrs	r0, r4
 767 00a4 1860     		str	r0, [r3]
 201:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 768              		.loc 1 201 3 is_stmt 1 view .LVU216
 201:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 769              		.loc 1 201 8 is_stmt 0 view .LVU217
 770 00a6 1868     		ldr	r0, [r3]
 201:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 771              		.loc 1 201 16 view .LVU218
 772 00a8 3E4C     		ldr	r4, .L54+40
 773 00aa 2040     		ands	r0, r4
 774 00ac 1860     		str	r0, [r3]
 202:Src/main.c    **** 
 775              		.loc 1 202 3 is_stmt 1 view .LVU219
 202:Src/main.c    **** 
 776              		.loc 1 202 8 is_stmt 0 view .LVU220
 777 00ae 1868     		ldr	r0, [r3]
 202:Src/main.c    **** 
 778              		.loc 1 202 16 view .LVU221
 779 00b0 0843     		orrs	r0, r1
 780 00b2 1860     		str	r0, [r3]
 205:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 781              		.loc 1 205 3 is_stmt 1 view .LVU222
 205:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 782              		.loc 1 205 8 is_stmt 0 view .LVU223
 783 00b4 5868     		ldr	r0, [r3, #4]
 205:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 784              		.loc 1 205 17 view .LVU224
 785 00b6 4027     		movs	r7, #64
 786 00b8 B843     		bics	r0, r7
 787 00ba 5860     		str	r0, [r3, #4]
 206:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 788              		.loc 1 206 3 is_stmt 1 view .LVU225
 206:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 789              		.loc 1 206 8 is_stmt 0 view .LVU226
 790 00bc 5868     		ldr	r0, [r3, #4]
 206:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 791              		.loc 1 206 17 view .LVU227
 792 00be 8026     		movs	r6, #128
 793 00c0 B246     		mov	r10, r6
 794 00c2 B043     		bics	r0, r6
 795 00c4 5860     		str	r0, [r3, #4]
 207:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 796              		.loc 1 207 3 is_stmt 1 view .LVU228
 207:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 797              		.loc 1 207 8 is_stmt 0 view .LVU229
 798 00c6 5868     		ldr	r0, [r3, #4]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 24


 207:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 799              		.loc 1 207 17 view .LVU230
 800 00c8 374E     		ldr	r6, .L54+44
 801 00ca 3040     		ands	r0, r6
 802 00cc 5860     		str	r0, [r3, #4]
 208:Src/main.c    **** 
 803              		.loc 1 208 3 is_stmt 1 view .LVU231
 208:Src/main.c    **** 
 804              		.loc 1 208 8 is_stmt 0 view .LVU232
 805 00ce 5868     		ldr	r0, [r3, #4]
 208:Src/main.c    **** 
 806              		.loc 1 208 17 view .LVU233
 807 00d0 364E     		ldr	r6, .L54+48
 808 00d2 3040     		ands	r0, r6
 809 00d4 5860     		str	r0, [r3, #4]
 211:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
 810              		.loc 1 211 3 is_stmt 1 view .LVU234
 211:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
 811              		.loc 1 211 8 is_stmt 0 view .LVU235
 812 00d6 9868     		ldr	r0, [r3, #8]
 211:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
 813              		.loc 1 211 18 view .LVU236
 814 00d8 4646     		mov	r6, r8
 815 00da 3040     		ands	r0, r6
 816 00dc 9860     		str	r0, [r3, #8]
 212:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 16);
 817              		.loc 1 212 3 is_stmt 1 view .LVU237
 212:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 16);
 818              		.loc 1 212 8 is_stmt 0 view .LVU238
 819 00de 9868     		ldr	r0, [r3, #8]
 212:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 16);
 820              		.loc 1 212 18 view .LVU239
 821 00e0 6646     		mov	r6, ip
 822 00e2 3040     		ands	r0, r6
 823 00e4 9860     		str	r0, [r3, #8]
 213:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 18);
 824              		.loc 1 213 3 is_stmt 1 view .LVU240
 213:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 18);
 825              		.loc 1 213 8 is_stmt 0 view .LVU241
 826 00e6 9868     		ldr	r0, [r3, #8]
 213:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 18);
 827              		.loc 1 213 18 view .LVU242
 828 00e8 2840     		ands	r0, r5
 829 00ea 9860     		str	r0, [r3, #8]
 214:Src/main.c    **** 
 830              		.loc 1 214 3 is_stmt 1 view .LVU243
 214:Src/main.c    **** 
 831              		.loc 1 214 8 is_stmt 0 view .LVU244
 832 00ec 9868     		ldr	r0, [r3, #8]
 214:Src/main.c    **** 
 833              		.loc 1 214 18 view .LVU245
 834 00ee 2040     		ands	r0, r4
 835 00f0 9860     		str	r0, [r3, #8]
 217:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 836              		.loc 1 217 3 is_stmt 1 view .LVU246
 217:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 837              		.loc 1 217 8 is_stmt 0 view .LVU247
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 25


 838 00f2 D868     		ldr	r0, [r3, #12]
 217:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 839              		.loc 1 217 16 view .LVU248
 840 00f4 4646     		mov	r6, r8
 841 00f6 3040     		ands	r0, r6
 842 00f8 D860     		str	r0, [r3, #12]
 218:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 843              		.loc 1 218 3 is_stmt 1 view .LVU249
 218:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 844              		.loc 1 218 8 is_stmt 0 view .LVU250
 845 00fa D868     		ldr	r0, [r3, #12]
 218:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 846              		.loc 1 218 16 view .LVU251
 847 00fc 6646     		mov	r6, ip
 848 00fe 3040     		ands	r0, r6
 849 0100 D860     		str	r0, [r3, #12]
 219:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 850              		.loc 1 219 3 is_stmt 1 view .LVU252
 219:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 851              		.loc 1 219 8 is_stmt 0 view .LVU253
 852 0102 D868     		ldr	r0, [r3, #12]
 219:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 853              		.loc 1 219 16 view .LVU254
 854 0104 2840     		ands	r0, r5
 855 0106 D860     		str	r0, [r3, #12]
 220:Src/main.c    **** 
 856              		.loc 1 220 3 is_stmt 1 view .LVU255
 220:Src/main.c    **** 
 857              		.loc 1 220 8 is_stmt 0 view .LVU256
 858 0108 D868     		ldr	r0, [r3, #12]
 220:Src/main.c    **** 
 859              		.loc 1 220 16 view .LVU257
 860 010a 2040     		ands	r0, r4
 861 010c D860     		str	r0, [r3, #12]
 223:Src/main.c    ****   GPIOC->ODR |= (1 << 7);
 862              		.loc 1 223 3 is_stmt 1 view .LVU258
 223:Src/main.c    ****   GPIOC->ODR |= (1 << 7);
 863              		.loc 1 223 8 is_stmt 0 view .LVU259
 864 010e 5869     		ldr	r0, [r3, #20]
 223:Src/main.c    ****   GPIOC->ODR |= (1 << 7);
 865              		.loc 1 223 14 view .LVU260
 866 0110 3843     		orrs	r0, r7
 867 0112 5861     		str	r0, [r3, #20]
 224:Src/main.c    ****   GPIOC->ODR |= (1 << 8);
 868              		.loc 1 224 3 is_stmt 1 view .LVU261
 224:Src/main.c    ****   GPIOC->ODR |= (1 << 8);
 869              		.loc 1 224 8 is_stmt 0 view .LVU262
 870 0114 5869     		ldr	r0, [r3, #20]
 224:Src/main.c    ****   GPIOC->ODR |= (1 << 8);
 871              		.loc 1 224 14 view .LVU263
 872 0116 5446     		mov	r4, r10
 873 0118 2043     		orrs	r0, r4
 874 011a 5861     		str	r0, [r3, #20]
 225:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
 875              		.loc 1 225 3 is_stmt 1 view .LVU264
 225:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
 876              		.loc 1 225 8 is_stmt 0 view .LVU265
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 26


 877 011c 5C69     		ldr	r4, [r3, #20]
 225:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
 878              		.loc 1 225 14 view .LVU266
 879 011e 8020     		movs	r0, #128
 880 0120 4000     		lsls	r0, r0, #1
 881 0122 2043     		orrs	r0, r4
 882 0124 5861     		str	r0, [r3, #20]
 226:Src/main.c    **** 
 883              		.loc 1 226 3 is_stmt 1 view .LVU267
 226:Src/main.c    **** 
 884              		.loc 1 226 8 is_stmt 0 view .LVU268
 885 0126 5C69     		ldr	r4, [r3, #20]
 226:Src/main.c    **** 
 886              		.loc 1 226 14 view .LVU269
 887 0128 8020     		movs	r0, #128
 888 012a 8000     		lsls	r0, r0, #2
 889 012c 2043     		orrs	r0, r4
 890 012e 5861     		str	r0, [r3, #20]
 229:Src/main.c    ****   // Set baud rate to 115200 bits/s
 891              		.loc 1 229 3 is_stmt 1 view .LVU270
 229:Src/main.c    ****   // Set baud rate to 115200 bits/s
 892              		.loc 1 229 6 is_stmt 0 view .LVU271
 893 0130 D369     		ldr	r3, [r2, #28]
 229:Src/main.c    ****   // Set baud rate to 115200 bits/s
 894              		.loc 1 229 16 view .LVU272
 895 0132 1943     		orrs	r1, r3
 896 0134 D161     		str	r1, [r2, #28]
 231:Src/main.c    ****   // Enable transmission and reception
 897              		.loc 1 231 3 is_stmt 1 view .LVU273
 231:Src/main.c    ****   // Enable transmission and reception
 898              		.loc 1 231 17 is_stmt 0 view .LVU274
 899 0136 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 900              	.LVL24:
 231:Src/main.c    ****   // Enable transmission and reception
 901              		.loc 1 231 39 discriminator 1 view .LVU275
 902 013a E121     		movs	r1, #225
 903 013c 4902     		lsls	r1, r1, #9
 904 013e FFF7FEFF 		bl	__aeabi_uidiv
 905              	.LVL25:
 231:Src/main.c    ****   // Enable transmission and reception
 906              		.loc 1 231 15 discriminator 1 view .LVU276
 907 0142 1B4B     		ldr	r3, .L54+52
 908 0144 D860     		str	r0, [r3, #12]
 233:Src/main.c    ****   // Enable USART3
 909              		.loc 1 233 3 is_stmt 1 view .LVU277
 233:Src/main.c    ****   // Enable USART3
 910              		.loc 1 233 9 is_stmt 0 view .LVU278
 911 0146 1A68     		ldr	r2, [r3]
 233:Src/main.c    ****   // Enable USART3
 912              		.loc 1 233 15 view .LVU279
 913 0148 0C21     		movs	r1, #12
 914 014a 0A43     		orrs	r2, r1
 915 014c 1A60     		str	r2, [r3]
 235:Src/main.c    **** 
 916              		.loc 1 235 3 is_stmt 1 view .LVU280
 235:Src/main.c    **** 
 917              		.loc 1 235 9 is_stmt 0 view .LVU281
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 27


 918 014e 1A68     		ldr	r2, [r3]
 235:Src/main.c    **** 
 919              		.loc 1 235 15 view .LVU282
 920 0150 0B39     		subs	r1, r1, #11
 921 0152 0A43     		orrs	r2, r1
 922 0154 1A60     		str	r2, [r3]
 238:Src/main.c    **** 
 923              		.loc 1 238 3 is_stmt 1 view .LVU283
 238:Src/main.c    **** 
 924              		.loc 1 238 9 is_stmt 0 view .LVU284
 925 0156 1A68     		ldr	r2, [r3]
 238:Src/main.c    **** 
 926              		.loc 1 238 15 view .LVU285
 927 0158 1F31     		adds	r1, r1, #31
 928 015a 0A43     		orrs	r2, r1
 929 015c 1A60     		str	r2, [r3]
 241:Src/main.c    ****   NVIC_SetPriority(USART3_4_IRQn, 0);
 930              		.loc 1 241 3 is_stmt 1 view .LVU286
 931              	.LVL26:
 932              	.LBB8:
 933              	.LBI8:
 934              		.file 2 "Drivers/CMSIS/Include/core_cm0.h"
   1:Drivers/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:Drivers/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0.h ****  * @version  V5.0.5
   5:Drivers/CMSIS/Include/core_cm0.h ****  * @date     28. May 2018
   6:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0.h **** /*
   8:Drivers/CMSIS/Include/core_cm0.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm0.h ****  *
  10:Drivers/CMSIS/Include/core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm0.h ****  *
  12:Drivers/CMSIS/Include/core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm0.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm0.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm0.h ****  *
  16:Drivers/CMSIS/Include/core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm0.h ****  *
  18:Drivers/CMSIS/Include/core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm0.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm0.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm0.h ****  */
  24:Drivers/CMSIS/Include/core_cm0.h **** 
  25:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm0.h **** #endif
  30:Drivers/CMSIS/Include/core_cm0.h **** 
  31:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm0.h **** 
  34:Drivers/CMSIS/Include/core_cm0.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 28


  36:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm0.h **** #endif
  39:Drivers/CMSIS/Include/core_cm0.h **** 
  40:Drivers/CMSIS/Include/core_cm0.h **** /**
  41:Drivers/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm0.h **** 
  44:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm0.h **** 
  47:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm0.h **** 
  50:Drivers/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm0.h ****  */
  53:Drivers/CMSIS/Include/core_cm0.h **** 
  54:Drivers/CMSIS/Include/core_cm0.h **** 
  55:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm0.h **** /**
  59:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  60:Drivers/CMSIS/Include/core_cm0.h ****   @{
  61:Drivers/CMSIS/Include/core_cm0.h ****  */
  62:Drivers/CMSIS/Include/core_cm0.h **** 
  63:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm0.h ****  
  65:Drivers/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  66:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm0.h **** 
  71:Drivers/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm0.h **** 
  73:Drivers/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm0.h **** */
  76:Drivers/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm0.h **** 
  78:Drivers/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm0.h **** 
  83:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm0.h **** 
  88:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 29


  93:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm0.h **** 
  98:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm0.h **** 
 103:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm0.h **** 
 108:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm0.h **** 
 113:Drivers/CMSIS/Include/core_cm0.h **** #endif
 114:Drivers/CMSIS/Include/core_cm0.h **** 
 115:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm0.h **** 
 117:Drivers/CMSIS/Include/core_cm0.h **** 
 118:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm0.h **** }
 120:Drivers/CMSIS/Include/core_cm0.h **** #endif
 121:Drivers/CMSIS/Include/core_cm0.h **** 
 122:Drivers/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm0.h **** 
 124:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm0.h **** 
 126:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm0.h **** 
 129:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm0.h **** #endif
 132:Drivers/CMSIS/Include/core_cm0.h **** 
 133:Drivers/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 136:Drivers/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 137:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm0.h **** 
 140:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:Drivers/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm0.h **** 
 145:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 146:Drivers/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm0.h **** #endif
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 30


 150:Drivers/CMSIS/Include/core_cm0.h **** 
 151:Drivers/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:Drivers/CMSIS/Include/core_cm0.h **** /**
 153:Drivers/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:Drivers/CMSIS/Include/core_cm0.h **** 
 155:Drivers/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:Drivers/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
 157:Drivers/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:Drivers/CMSIS/Include/core_cm0.h **** */
 159:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 160:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:Drivers/CMSIS/Include/core_cm0.h **** #else
 162:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:Drivers/CMSIS/Include/core_cm0.h **** #endif
 164:Drivers/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:Drivers/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:Drivers/CMSIS/Include/core_cm0.h **** 
 167:Drivers/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
 168:Drivers/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:Drivers/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:Drivers/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:Drivers/CMSIS/Include/core_cm0.h **** 
 172:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 173:Drivers/CMSIS/Include/core_cm0.h **** 
 174:Drivers/CMSIS/Include/core_cm0.h **** 
 175:Drivers/CMSIS/Include/core_cm0.h **** 
 176:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 177:Drivers/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 178:Drivers/CMSIS/Include/core_cm0.h ****   Core Register contain:
 179:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register
 180:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 181:Drivers/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 182:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 183:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 184:Drivers/CMSIS/Include/core_cm0.h **** /**
 185:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:Drivers/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:Drivers/CMSIS/Include/core_cm0.h **** */
 188:Drivers/CMSIS/Include/core_cm0.h **** 
 189:Drivers/CMSIS/Include/core_cm0.h **** /**
 190:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 191:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 193:Drivers/CMSIS/Include/core_cm0.h ****   @{
 194:Drivers/CMSIS/Include/core_cm0.h ****  */
 195:Drivers/CMSIS/Include/core_cm0.h **** 
 196:Drivers/CMSIS/Include/core_cm0.h **** /**
 197:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:Drivers/CMSIS/Include/core_cm0.h ****  */
 199:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 200:Drivers/CMSIS/Include/core_cm0.h **** {
 201:Drivers/CMSIS/Include/core_cm0.h ****   struct
 202:Drivers/CMSIS/Include/core_cm0.h ****   {
 203:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 31


 207:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 210:Drivers/CMSIS/Include/core_cm0.h **** } APSR_Type;
 211:Drivers/CMSIS/Include/core_cm0.h **** 
 212:Drivers/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
 213:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 214:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:Drivers/CMSIS/Include/core_cm0.h **** 
 216:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:Drivers/CMSIS/Include/core_cm0.h **** 
 219:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:Drivers/CMSIS/Include/core_cm0.h **** 
 222:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 224:Drivers/CMSIS/Include/core_cm0.h **** 
 225:Drivers/CMSIS/Include/core_cm0.h **** 
 226:Drivers/CMSIS/Include/core_cm0.h **** /**
 227:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:Drivers/CMSIS/Include/core_cm0.h ****  */
 229:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 230:Drivers/CMSIS/Include/core_cm0.h **** {
 231:Drivers/CMSIS/Include/core_cm0.h ****   struct
 232:Drivers/CMSIS/Include/core_cm0.h ****   {
 233:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:Drivers/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 238:Drivers/CMSIS/Include/core_cm0.h **** 
 239:Drivers/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 240:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:Drivers/CMSIS/Include/core_cm0.h **** 
 243:Drivers/CMSIS/Include/core_cm0.h **** 
 244:Drivers/CMSIS/Include/core_cm0.h **** /**
 245:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:Drivers/CMSIS/Include/core_cm0.h ****  */
 247:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 248:Drivers/CMSIS/Include/core_cm0.h **** {
 249:Drivers/CMSIS/Include/core_cm0.h ****   struct
 250:Drivers/CMSIS/Include/core_cm0.h ****   {
 251:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 260:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:Drivers/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 262:Drivers/CMSIS/Include/core_cm0.h **** 
 263:Drivers/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 32


 264:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:Drivers/CMSIS/Include/core_cm0.h **** 
 267:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:Drivers/CMSIS/Include/core_cm0.h **** 
 270:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 271:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:Drivers/CMSIS/Include/core_cm0.h **** 
 273:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:Drivers/CMSIS/Include/core_cm0.h **** 
 276:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:Drivers/CMSIS/Include/core_cm0.h **** 
 279:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 281:Drivers/CMSIS/Include/core_cm0.h **** 
 282:Drivers/CMSIS/Include/core_cm0.h **** 
 283:Drivers/CMSIS/Include/core_cm0.h **** /**
 284:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:Drivers/CMSIS/Include/core_cm0.h ****  */
 286:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 287:Drivers/CMSIS/Include/core_cm0.h **** {
 288:Drivers/CMSIS/Include/core_cm0.h ****   struct
 289:Drivers/CMSIS/Include/core_cm0.h ****   {
 290:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:Drivers/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 296:Drivers/CMSIS/Include/core_cm0.h **** 
 297:Drivers/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 298:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:Drivers/CMSIS/Include/core_cm0.h **** 
 301:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
 302:Drivers/CMSIS/Include/core_cm0.h **** 
 303:Drivers/CMSIS/Include/core_cm0.h **** 
 304:Drivers/CMSIS/Include/core_cm0.h **** /**
 305:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 306:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:Drivers/CMSIS/Include/core_cm0.h ****   @{
 309:Drivers/CMSIS/Include/core_cm0.h ****  */
 310:Drivers/CMSIS/Include/core_cm0.h **** 
 311:Drivers/CMSIS/Include/core_cm0.h **** /**
 312:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:Drivers/CMSIS/Include/core_cm0.h ****  */
 314:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 315:Drivers/CMSIS/Include/core_cm0.h **** {
 316:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 317:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 318:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 320:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 33


 321:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 322:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
 324:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 325:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:Drivers/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
 327:Drivers/CMSIS/Include/core_cm0.h **** 
 328:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:Drivers/CMSIS/Include/core_cm0.h **** 
 330:Drivers/CMSIS/Include/core_cm0.h **** 
 331:Drivers/CMSIS/Include/core_cm0.h **** /**
 332:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 333:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:Drivers/CMSIS/Include/core_cm0.h ****   @{
 336:Drivers/CMSIS/Include/core_cm0.h ****  */
 337:Drivers/CMSIS/Include/core_cm0.h **** 
 338:Drivers/CMSIS/Include/core_cm0.h **** /**
 339:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:Drivers/CMSIS/Include/core_cm0.h ****  */
 341:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 342:Drivers/CMSIS/Include/core_cm0.h **** {
 343:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
 346:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 347:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 350:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:Drivers/CMSIS/Include/core_cm0.h **** } SCB_Type;
 353:Drivers/CMSIS/Include/core_cm0.h **** 
 354:Drivers/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 355:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:Drivers/CMSIS/Include/core_cm0.h **** 
 358:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 359:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:Drivers/CMSIS/Include/core_cm0.h **** 
 361:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:Drivers/CMSIS/Include/core_cm0.h **** 
 364:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:Drivers/CMSIS/Include/core_cm0.h **** 
 367:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:Drivers/CMSIS/Include/core_cm0.h **** 
 370:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:Drivers/CMSIS/Include/core_cm0.h **** 
 374:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:Drivers/CMSIS/Include/core_cm0.h **** 
 377:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 34


 378:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:Drivers/CMSIS/Include/core_cm0.h **** 
 380:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 381:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:Drivers/CMSIS/Include/core_cm0.h **** 
 383:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 385:Drivers/CMSIS/Include/core_cm0.h **** 
 386:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:Drivers/CMSIS/Include/core_cm0.h **** 
 389:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:Drivers/CMSIS/Include/core_cm0.h **** 
 392:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:Drivers/CMSIS/Include/core_cm0.h **** 
 395:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:Drivers/CMSIS/Include/core_cm0.h **** 
 398:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm0.h **** 
 402:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 403:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm0.h **** 
 405:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm0.h **** 
 408:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm0.h **** 
 411:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm0.h **** 
 414:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 415:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 416:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm0.h **** 
 418:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0.h **** 
 421:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0.h **** 
 424:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0.h **** 
 428:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0.h **** 
 431:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 35


 435:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:Drivers/CMSIS/Include/core_cm0.h **** 
 437:Drivers/CMSIS/Include/core_cm0.h **** 
 438:Drivers/CMSIS/Include/core_cm0.h **** /**
 439:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 440:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 442:Drivers/CMSIS/Include/core_cm0.h ****   @{
 443:Drivers/CMSIS/Include/core_cm0.h ****  */
 444:Drivers/CMSIS/Include/core_cm0.h **** 
 445:Drivers/CMSIS/Include/core_cm0.h **** /**
 446:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:Drivers/CMSIS/Include/core_cm0.h ****  */
 448:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 449:Drivers/CMSIS/Include/core_cm0.h **** {
 450:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 452:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:Drivers/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 455:Drivers/CMSIS/Include/core_cm0.h **** 
 456:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:Drivers/CMSIS/Include/core_cm0.h **** 
 460:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 461:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:Drivers/CMSIS/Include/core_cm0.h **** 
 463:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:Drivers/CMSIS/Include/core_cm0.h **** 
 466:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:Drivers/CMSIS/Include/core_cm0.h **** 
 469:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
 470:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:Drivers/CMSIS/Include/core_cm0.h **** 
 473:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 474:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 475:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:Drivers/CMSIS/Include/core_cm0.h **** 
 477:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:Drivers/CMSIS/Include/core_cm0.h **** 
 481:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:Drivers/CMSIS/Include/core_cm0.h **** 
 484:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:Drivers/CMSIS/Include/core_cm0.h **** 
 487:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 488:Drivers/CMSIS/Include/core_cm0.h **** 
 489:Drivers/CMSIS/Include/core_cm0.h **** 
 490:Drivers/CMSIS/Include/core_cm0.h **** /**
 491:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 36


 492:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:Drivers/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 495:Drivers/CMSIS/Include/core_cm0.h ****   @{
 496:Drivers/CMSIS/Include/core_cm0.h ****  */
 497:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:Drivers/CMSIS/Include/core_cm0.h **** 
 499:Drivers/CMSIS/Include/core_cm0.h **** 
 500:Drivers/CMSIS/Include/core_cm0.h **** /**
 501:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 502:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:Drivers/CMSIS/Include/core_cm0.h ****   @{
 505:Drivers/CMSIS/Include/core_cm0.h ****  */
 506:Drivers/CMSIS/Include/core_cm0.h **** 
 507:Drivers/CMSIS/Include/core_cm0.h **** /**
 508:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 509:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 512:Drivers/CMSIS/Include/core_cm0.h **** */
 513:Drivers/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:Drivers/CMSIS/Include/core_cm0.h **** 
 515:Drivers/CMSIS/Include/core_cm0.h **** /**
 516:Drivers/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 517:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 518:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 520:Drivers/CMSIS/Include/core_cm0.h **** */
 521:Drivers/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:Drivers/CMSIS/Include/core_cm0.h **** 
 523:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:Drivers/CMSIS/Include/core_cm0.h **** 
 525:Drivers/CMSIS/Include/core_cm0.h **** 
 526:Drivers/CMSIS/Include/core_cm0.h **** /**
 527:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 528:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 530:Drivers/CMSIS/Include/core_cm0.h ****   @{
 531:Drivers/CMSIS/Include/core_cm0.h ****  */
 532:Drivers/CMSIS/Include/core_cm0.h **** 
 533:Drivers/CMSIS/Include/core_cm0.h **** /* Memory mapping of Core Hardware */
 534:Drivers/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:Drivers/CMSIS/Include/core_cm0.h **** 
 539:Drivers/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:Drivers/CMSIS/Include/core_cm0.h **** 
 543:Drivers/CMSIS/Include/core_cm0.h **** 
 544:Drivers/CMSIS/Include/core_cm0.h **** /*@} */
 545:Drivers/CMSIS/Include/core_cm0.h **** 
 546:Drivers/CMSIS/Include/core_cm0.h **** 
 547:Drivers/CMSIS/Include/core_cm0.h **** 
 548:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 37


 549:Drivers/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 550:Drivers/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 551:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
 552:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 553:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 554:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 555:Drivers/CMSIS/Include/core_cm0.h **** /**
 556:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:Drivers/CMSIS/Include/core_cm0.h **** */
 558:Drivers/CMSIS/Include/core_cm0.h **** 
 559:Drivers/CMSIS/Include/core_cm0.h **** 
 560:Drivers/CMSIS/Include/core_cm0.h **** 
 561:Drivers/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:Drivers/CMSIS/Include/core_cm0.h **** /**
 563:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 566:Drivers/CMSIS/Include/core_cm0.h ****   @{
 567:Drivers/CMSIS/Include/core_cm0.h ****  */
 568:Drivers/CMSIS/Include/core_cm0.h **** 
 569:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 573:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 574:Drivers/CMSIS/Include/core_cm0.h **** #else
 575:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 576:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 577:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:Drivers/CMSIS/Include/core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 587:Drivers/CMSIS/Include/core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:Drivers/CMSIS/Include/core_cm0.h **** 
 589:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 593:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:Drivers/CMSIS/Include/core_cm0.h **** #else
 595:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:Drivers/CMSIS/Include/core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:Drivers/CMSIS/Include/core_cm0.h **** 
 599:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:Drivers/CMSIS/Include/core_cm0.h **** 
 601:Drivers/CMSIS/Include/core_cm0.h **** 
 602:Drivers/CMSIS/Include/core_cm0.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 603:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 604:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 605:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 38


 606:Drivers/CMSIS/Include/core_cm0.h **** 
 607:Drivers/CMSIS/Include/core_cm0.h **** 
 608:Drivers/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 609:Drivers/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 610:Drivers/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 611:Drivers/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 612:Drivers/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 613:Drivers/CMSIS/Include/core_cm0.h **** 
 614:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 615:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 616:Drivers/CMSIS/Include/core_cm0.h **** 
 617:Drivers/CMSIS/Include/core_cm0.h **** /**
 618:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Enable Interrupt
 619:Drivers/CMSIS/Include/core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 620:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 621:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 622:Drivers/CMSIS/Include/core_cm0.h ****  */
 623:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 935              		.loc 2 623 22 view .LVU287
 936              	.LBB9:
 624:Drivers/CMSIS/Include/core_cm0.h **** {
 625:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 937              		.loc 2 625 3 view .LVU288
 626:Drivers/CMSIS/Include/core_cm0.h ****   {
 627:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 938              		.loc 2 627 5 view .LVU289
 939              		.loc 2 627 20 is_stmt 0 view .LVU290
 940 015e 154B     		ldr	r3, .L54+56
 941 0160 8022     		movs	r2, #128
 942 0162 9205     		lsls	r2, r2, #22
 943 0164 1A60     		str	r2, [r3]
 944              	.LVL27:
 945              		.loc 2 627 20 view .LVU291
 946              	.LBE9:
 947              	.LBE8:
 242:Src/main.c    **** 
 948              		.loc 1 242 3 is_stmt 1 view .LVU292
 949              	.LBB10:
 950              	.LBI10:
 628:Drivers/CMSIS/Include/core_cm0.h ****   }
 629:Drivers/CMSIS/Include/core_cm0.h **** }
 630:Drivers/CMSIS/Include/core_cm0.h **** 
 631:Drivers/CMSIS/Include/core_cm0.h **** 
 632:Drivers/CMSIS/Include/core_cm0.h **** /**
 633:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Interrupt Enable status
 634:Drivers/CMSIS/Include/core_cm0.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 635:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 636:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt is not enabled.
 637:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt is enabled.
 638:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 639:Drivers/CMSIS/Include/core_cm0.h ****  */
 640:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 641:Drivers/CMSIS/Include/core_cm0.h **** {
 642:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 643:Drivers/CMSIS/Include/core_cm0.h ****   {
 644:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 645:Drivers/CMSIS/Include/core_cm0.h ****   }
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 39


 646:Drivers/CMSIS/Include/core_cm0.h ****   else
 647:Drivers/CMSIS/Include/core_cm0.h ****   {
 648:Drivers/CMSIS/Include/core_cm0.h ****     return(0U);
 649:Drivers/CMSIS/Include/core_cm0.h ****   }
 650:Drivers/CMSIS/Include/core_cm0.h **** }
 651:Drivers/CMSIS/Include/core_cm0.h **** 
 652:Drivers/CMSIS/Include/core_cm0.h **** 
 653:Drivers/CMSIS/Include/core_cm0.h **** /**
 654:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Disable Interrupt
 655:Drivers/CMSIS/Include/core_cm0.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 656:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 657:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 658:Drivers/CMSIS/Include/core_cm0.h ****  */
 659:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 660:Drivers/CMSIS/Include/core_cm0.h **** {
 661:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 662:Drivers/CMSIS/Include/core_cm0.h ****   {
 663:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 664:Drivers/CMSIS/Include/core_cm0.h ****     __DSB();
 665:Drivers/CMSIS/Include/core_cm0.h ****     __ISB();
 666:Drivers/CMSIS/Include/core_cm0.h ****   }
 667:Drivers/CMSIS/Include/core_cm0.h **** }
 668:Drivers/CMSIS/Include/core_cm0.h **** 
 669:Drivers/CMSIS/Include/core_cm0.h **** 
 670:Drivers/CMSIS/Include/core_cm0.h **** /**
 671:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Pending Interrupt
 672:Drivers/CMSIS/Include/core_cm0.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 673:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 674:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt status is not pending.
 675:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt status is pending.
 676:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 677:Drivers/CMSIS/Include/core_cm0.h ****  */
 678:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 679:Drivers/CMSIS/Include/core_cm0.h **** {
 680:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 681:Drivers/CMSIS/Include/core_cm0.h ****   {
 682:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 683:Drivers/CMSIS/Include/core_cm0.h ****   }
 684:Drivers/CMSIS/Include/core_cm0.h ****   else
 685:Drivers/CMSIS/Include/core_cm0.h ****   {
 686:Drivers/CMSIS/Include/core_cm0.h ****     return(0U);
 687:Drivers/CMSIS/Include/core_cm0.h ****   }
 688:Drivers/CMSIS/Include/core_cm0.h **** }
 689:Drivers/CMSIS/Include/core_cm0.h **** 
 690:Drivers/CMSIS/Include/core_cm0.h **** 
 691:Drivers/CMSIS/Include/core_cm0.h **** /**
 692:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Pending Interrupt
 693:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 694:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 695:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 696:Drivers/CMSIS/Include/core_cm0.h ****  */
 697:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 698:Drivers/CMSIS/Include/core_cm0.h **** {
 699:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 700:Drivers/CMSIS/Include/core_cm0.h ****   {
 701:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 702:Drivers/CMSIS/Include/core_cm0.h ****   }
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 40


 703:Drivers/CMSIS/Include/core_cm0.h **** }
 704:Drivers/CMSIS/Include/core_cm0.h **** 
 705:Drivers/CMSIS/Include/core_cm0.h **** 
 706:Drivers/CMSIS/Include/core_cm0.h **** /**
 707:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Clear Pending Interrupt
 708:Drivers/CMSIS/Include/core_cm0.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 709:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 710:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 711:Drivers/CMSIS/Include/core_cm0.h ****  */
 712:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 713:Drivers/CMSIS/Include/core_cm0.h **** {
 714:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 715:Drivers/CMSIS/Include/core_cm0.h ****   {
 716:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 717:Drivers/CMSIS/Include/core_cm0.h ****   }
 718:Drivers/CMSIS/Include/core_cm0.h **** }
 719:Drivers/CMSIS/Include/core_cm0.h **** 
 720:Drivers/CMSIS/Include/core_cm0.h **** 
 721:Drivers/CMSIS/Include/core_cm0.h **** /**
 722:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Interrupt Priority
 723:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 724:Drivers/CMSIS/Include/core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 725:Drivers/CMSIS/Include/core_cm0.h ****            or negative to specify a processor exception.
 726:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 727:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]  priority  Priority to set.
 728:Drivers/CMSIS/Include/core_cm0.h ****   \note    The priority cannot be set for every processor exception.
 729:Drivers/CMSIS/Include/core_cm0.h ****  */
 730:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 951              		.loc 2 730 22 view .LVU293
 952              	.LBB11:
 731:Drivers/CMSIS/Include/core_cm0.h **** {
 732:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 953              		.loc 2 732 3 view .LVU294
 733:Drivers/CMSIS/Include/core_cm0.h ****   {
 734:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 954              		.loc 2 734 5 view .LVU295
 955              		.loc 2 734 52 is_stmt 0 view .LVU296
 956 0166 C721     		movs	r1, #199
 957 0168 8900     		lsls	r1, r1, #2
 958 016a 5A58     		ldr	r2, [r3, r1]
 959              		.loc 2 734 33 view .LVU297
 960 016c 1248     		ldr	r0, .L54+60
 961 016e 0240     		ands	r2, r0
 962              		.loc 2 734 30 view .LVU298
 963 0170 5A50     		str	r2, [r3, r1]
 964              	.LVL28:
 965              		.loc 2 734 30 view .LVU299
 966              	.LBE11:
 967              	.LBE10:
 245:Src/main.c    **** 
 968              		.loc 1 245 3 is_stmt 1 view .LVU300
 969 0172 1248     		ldr	r0, .L54+64
 970 0174 FFF7FEFF 		bl	transmit_string
 971              	.LVL29:
 972              	.L53:
 247:Src/main.c    ****   {
 973              		.loc 1 247 3 view .LVU301
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 41


 249:Src/main.c    **** }
 974              		.loc 1 249 3 view .LVU302
 247:Src/main.c    ****   {
 975              		.loc 1 247 9 view .LVU303
 976 0178 FEE7     		b	.L53
 977              	.L55:
 978 017a C046     		.align	2
 979              	.L54:
 980 017c 00100240 		.word	1073876992
 981 0180 00040048 		.word	1207960576
 982 0184 FFFFCFFF 		.word	-3145729
 983 0188 FFFF3FFF 		.word	-12582913
 984 018c FFF0FFFF 		.word	-3841
 985 0190 FF0FFFFF 		.word	-61441
 986 0194 00080048 		.word	1207961600
 987 0198 FFCFFFFF 		.word	-12289
 988 019c FF3FFFFF 		.word	-49153
 989 01a0 FFFFFCFF 		.word	-196609
 990 01a4 FFFFF3FF 		.word	-786433
 991 01a8 FFFEFFFF 		.word	-257
 992 01ac FFFDFFFF 		.word	-513
 993 01b0 00480040 		.word	1073760256
 994 01b4 00E100E0 		.word	-536813312
 995 01b8 FF00FFFF 		.word	-65281
 996 01bc 00000000 		.word	.LC0
 997              		.cfi_endproc
 998              	.LFE43:
 1000              		.global	ledColor
 1001              		.section	.bss.ledColor,"aw",%nobits
 1004              	ledColor:
 1005 0000 00       		.space	1
 1006              		.global	charCounter
 1007              		.section	.bss.charCounter,"aw",%nobits
 1008              		.align	2
 1011              	charCounter:
 1012 0000 00000000 		.space	4
 1013              		.text
 1014              	.Letext0:
 1015              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1016              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 1017              		.file 5 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1018              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1019              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1020              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:19     .text.send_char:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:25     .text.send_char:00000000 send_char
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:54     .text.send_char:00000010 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:59     .text.transmit_string:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:65     .text.transmit_string:00000000 transmit_string
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:115    .rodata.USART3_4_IRQHandler.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:125    .text.USART3_4_IRQHandler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:131    .text.USART3_4_IRQHandler:00000000 USART3_4_IRQHandler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:453    .text.USART3_4_IRQHandler:00000168 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:1011   .bss.charCounter:00000000 charCounter
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:1004   .bss.ledColor:00000000 ledColor
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:466    .text._Error_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:472    .text._Error_Handler:00000000 _Error_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:490    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:495    .text.SystemClock_Config:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:501    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:606    .text.SystemClock_Config:00000070 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:611    .text.main:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:617    .text.main:00000000 main
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:980    .text.main:0000017c $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:1005   .bss.ledColor:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccTUYxv5.s:1008   .bss.charCounter:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
