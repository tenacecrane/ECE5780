ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.send_char,"ax",%progbits
  19              		.align	1
  20              		.global	send_char
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	send_char:
  26              	.LFB40:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * File Name          : main.c
   5:Src/main.c    ****   * Description        : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  41:Src/main.c    **** #include "main.h"
  42:Src/main.c    **** #include "stm32f0xx_hal.h"
  43:Src/main.c    **** void _Error_Handler(char * file, int line);
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** void send_char(char c)
  69:Src/main.c    **** {
  27              		.loc 1 69 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.L2:
  70:Src/main.c    ****   // Use an empty while loop which exits once the flag is set.
  71:Src/main.c    ****   while (!(USART3->ISR & USART_ISR_TXE))
  72:Src/main.c    ****   {
  73:Src/main.c    ****   };
  34              		.loc 1 73 3 view .LVU1
  71:Src/main.c    ****   {
  35              		.loc 1 71 10 discriminator 1 view .LVU2
  71:Src/main.c    ****   {
  36              		.loc 1 71 18 is_stmt 0 discriminator 1 view .LVU3
  37 0000 034B     		ldr	r3, .L4
  38 0002 DB69     		ldr	r3, [r3, #28]
  71:Src/main.c    ****   {
  39              		.loc 1 71 10 discriminator 1 view .LVU4
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 3


  40 0004 1B06     		lsls	r3, r3, #24
  41 0006 FBD5     		bpl	.L2
  42              		.loc 1 73 4 is_stmt 1 view .LVU5
  74:Src/main.c    ****   // Write the character into the transmit data register
  75:Src/main.c    ****   USART3->TDR = c;
  43              		.loc 1 75 3 view .LVU6
  44              		.loc 1 75 15 is_stmt 0 view .LVU7
  45 0008 014B     		ldr	r3, .L4
  46 000a 1885     		strh	r0, [r3, #40]
  76:Src/main.c    **** }
  47              		.loc 1 76 1 view .LVU8
  48              		@ sp needed
  49 000c 7047     		bx	lr
  50              	.L5:
  51 000e C046     		.align	2
  52              	.L4:
  53 0010 00480040 		.word	1073760256
  54              		.cfi_endproc
  55              	.LFE40:
  57              		.section	.text.transmit_string,"ax",%progbits
  58              		.align	1
  59              		.global	transmit_string
  60              		.syntax unified
  61              		.code	16
  62              		.thumb_func
  64              	transmit_string:
  65              	.LVL1:
  66              	.LFB41:
  77:Src/main.c    **** 
  78:Src/main.c    **** // Loop through an array of characters, send each one, exit when the null character is reached.
  79:Src/main.c    **** void transmit_string(char str[])
  80:Src/main.c    **** {
  67              		.loc 1 80 1 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		.loc 1 80 1 is_stmt 0 view .LVU10
  72 0000 70B5     		push	{r4, r5, r6, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 16
  75              		.cfi_offset 4, -16
  76              		.cfi_offset 5, -12
  77              		.cfi_offset 6, -8
  78              		.cfi_offset 14, -4
  79 0002 0500     		movs	r5, r0
  81:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  80              		.loc 1 81 3 is_stmt 1 view .LVU11
  81              	.LBB2:
  82              		.loc 1 81 8 view .LVU12
  83              	.LVL2:
  84              		.loc 1 81 12 is_stmt 0 view .LVU13
  85 0004 0024     		movs	r4, #0
  86              		.loc 1 81 3 view .LVU14
  87 0006 02E0     		b	.L7
  88              	.LVL3:
  89              	.L8:
  82:Src/main.c    ****   {
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 4


  83:Src/main.c    ****     send_char(str[i]);
  90              		.loc 1 83 5 is_stmt 1 view .LVU15
  91 0008 FFF7FEFF 		bl	send_char
  92              	.LVL4:
  81:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  93              		.loc 1 81 36 discriminator 3 view .LVU16
  94 000c 0134     		adds	r4, r4, #1
  95              	.LVL5:
  96              	.L7:
  81:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  97              		.loc 1 81 26 discriminator 1 view .LVU17
  81:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  98              		.loc 1 81 22 is_stmt 0 discriminator 1 view .LVU18
  99 000e 285D     		ldrb	r0, [r5, r4]
  81:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
 100              		.loc 1 81 26 discriminator 1 view .LVU19
 101 0010 0028     		cmp	r0, #0
 102 0012 F9D1     		bne	.L8
 103              	.LBE2:
  84:Src/main.c    ****   }
  85:Src/main.c    **** }
 104              		.loc 1 85 1 view .LVU20
 105              		@ sp needed
 106              	.LVL6:
 107              	.LVL7:
 108              		.loc 1 85 1 view .LVU21
 109 0014 70BD     		pop	{r4, r5, r6, pc}
 110              		.cfi_endproc
 111              	.LFE41:
 113              		.section	.text._Error_Handler,"ax",%progbits
 114              		.align	1
 115              		.global	_Error_Handler
 116              		.syntax unified
 117              		.code	16
 118              		.thumb_func
 120              	_Error_Handler:
 121              	.LFB44:
  86:Src/main.c    **** 
  87:Src/main.c    **** int main(void)
  88:Src/main.c    **** {
  89:Src/main.c    ****   SystemClock_Config();
  90:Src/main.c    **** 
  91:Src/main.c    ****   // Enable GPIOB clock
  92:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
  93:Src/main.c    **** 
  94:Src/main.c    ****   // Set PB10 and PB11 to alternate function mode.
  95:Src/main.c    ****   GPIOB->MODER &= ~(3 << 20);
  96:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
  97:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
  98:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
  99:Src/main.c    **** 
 100:Src/main.c    ****   // Set PB10 and PB11 in AFRH AF4 mode (PB10 -> TX, PB11 -> RX) (USART3)
 101:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 8);
 102:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 103:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 104:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 105:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 5


 106:Src/main.c    ****   // Enable the red PC8 and PC9
 107:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 108:Src/main.c    ****   // Set PC8 and PC9 to output mode
 109:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 110:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 111:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 112:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 113:Src/main.c    **** 
 114:Src/main.c    ****   // Set PC8 (orange) and PC9 (green) to high 
 115:Src/main.c    ****   GPIOC->ODR |= (1 << 8);
 116:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
 117:Src/main.c    **** 
 118:Src/main.c    ****   // Enable USART3 clock
 119:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
 120:Src/main.c    ****   // Set baud rate to 115200 bits/s
 121:Src/main.c    ****   USART3->BRR = HAL_RCC_GetHCLKFreq() / 115200;
 122:Src/main.c    ****   // Enable transmission and reception
 123:Src/main.c    ****   USART3->CR1 |= USART_CR1_TE | USART_CR1_RE;
 124:Src/main.c    ****   // Enable USART3
 125:Src/main.c    ****   USART3->CR1 |= USART_CR1_UE;
 126:Src/main.c    **** 
 127:Src/main.c    ****   while(1)
 128:Src/main.c    ****   {
 129:Src/main.c    ****     // Toggle LED's based on the character being pressed on the keyboard
 130:Src/main.c    ****     // If the character is 'o', toggle the orange LED (PC8)
 131:Src/main.c    ****     // If the character is 'g', toggle the green LED (PC9)
 132:Src/main.c    **** 
 133:Src/main.c    ****     // Check and wait on the USART status flag that indicates the receive (read) register is not em
 134:Src/main.c    ****     while (!(USART3->ISR & USART_ISR_RXNE))
 135:Src/main.c    ****     {
 136:Src/main.c    ****     };
 137:Src/main.c    **** 
 138:Src/main.c    ****     // Test the received data and toggle the appropriate LED
 139:Src/main.c    ****     char c = USART3->RDR;
 140:Src/main.c    ****     send_char(c);
 141:Src/main.c    ****     if (c == 'o')
 142:Src/main.c    ****     {
 143:Src/main.c    ****       GPIOC->ODR ^= (1 << 8);
 144:Src/main.c    ****     }
 145:Src/main.c    ****     else if (c == 'g')
 146:Src/main.c    ****     {
 147:Src/main.c    ****       GPIOC->ODR ^= (1 << 9);
 148:Src/main.c    ****     }
 149:Src/main.c    ****     else{
 150:Src/main.c    ****       // Print an error message if the character is not 'o' or 'g'
 151:Src/main.c    ****       char error[] = "Error: Invalid character\n";
 152:Src/main.c    ****       transmit_string(error);
 153:Src/main.c    ****     }
 154:Src/main.c    **** 
 155:Src/main.c    ****   }
 156:Src/main.c    ****   
 157:Src/main.c    **** }
 158:Src/main.c    **** 
 159:Src/main.c    **** /** System Clock Configuration
 160:Src/main.c    **** */
 161:Src/main.c    **** void SystemClock_Config(void)
 162:Src/main.c    **** {
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 6


 163:Src/main.c    **** 
 164:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 165:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 166:Src/main.c    **** 
 167:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 168:Src/main.c    ****     */
 169:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 170:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 171:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 172:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 173:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 174:Src/main.c    ****   {
 175:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 176:Src/main.c    ****   }
 177:Src/main.c    **** 
 178:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 179:Src/main.c    ****     */
 180:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 181:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 182:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 183:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 184:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 185:Src/main.c    **** 
 186:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 187:Src/main.c    ****   {
 188:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 189:Src/main.c    ****   }
 190:Src/main.c    **** 
 191:Src/main.c    ****     /**Configure the Systick interrupt time
 192:Src/main.c    ****     */
 193:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 194:Src/main.c    **** 
 195:Src/main.c    ****     /**Configure the Systick
 196:Src/main.c    ****     */
 197:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 198:Src/main.c    **** 
 199:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 200:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 201:Src/main.c    **** }
 202:Src/main.c    **** 
 203:Src/main.c    **** /* USER CODE BEGIN 4 */
 204:Src/main.c    **** 
 205:Src/main.c    **** /* USER CODE END 4 */
 206:Src/main.c    **** 
 207:Src/main.c    **** /**
 208:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 209:Src/main.c    ****   * @param  None
 210:Src/main.c    ****   * @retval None
 211:Src/main.c    ****   */
 212:Src/main.c    **** void _Error_Handler(char * file, int line)
 213:Src/main.c    **** {
 122              		.loc 1 213 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ Volatile: function does not return.
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 7


 128              	.LVL8:
 129              	.L10:
 214:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 215:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 216:Src/main.c    ****   while(1)
 130              		.loc 1 216 3 view .LVU23
 217:Src/main.c    ****   {
 218:Src/main.c    ****   }
 131              		.loc 1 218 3 view .LVU24
 216:Src/main.c    ****   {
 132              		.loc 1 216 8 view .LVU25
 133 0000 FEE7     		b	.L10
 134              		.cfi_endproc
 135              	.LFE44:
 137              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 138              		.align	2
 139              	.LC0:
 140 0000 5372632F 		.ascii	"Src/main.c\000"
 140      6D61696E 
 140      2E6300
 141              		.global	__aeabi_uidiv
 142              		.section	.text.SystemClock_Config,"ax",%progbits
 143              		.align	1
 144              		.global	SystemClock_Config
 145              		.syntax unified
 146              		.code	16
 147              		.thumb_func
 149              	SystemClock_Config:
 150              	.LFB43:
 162:Src/main.c    **** 
 151              		.loc 1 162 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 72
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155 0000 00B5     		push	{lr}
 156              	.LCFI1:
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 14, -4
 159 0002 93B0     		sub	sp, sp, #76
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 80
 164:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 162              		.loc 1 164 3 view .LVU27
 165:Src/main.c    **** 
 163              		.loc 1 165 3 view .LVU28
 169:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 164              		.loc 1 169 3 view .LVU29
 169:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 165              		.loc 1 169 36 is_stmt 0 view .LVU30
 166 0004 0223     		movs	r3, #2
 167 0006 0593     		str	r3, [sp, #20]
 170:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 168              		.loc 1 170 3 is_stmt 1 view .LVU31
 170:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 169              		.loc 1 170 30 is_stmt 0 view .LVU32
 170 0008 013B     		subs	r3, r3, #1
 171 000a 0893     		str	r3, [sp, #32]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 8


 171:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 172              		.loc 1 171 3 is_stmt 1 view .LVU33
 171:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 173              		.loc 1 171 41 is_stmt 0 view .LVU34
 174 000c 0F33     		adds	r3, r3, #15
 175 000e 0993     		str	r3, [sp, #36]
 172:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 176              		.loc 1 172 3 is_stmt 1 view .LVU35
 172:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 177              		.loc 1 172 34 is_stmt 0 view .LVU36
 178 0010 0023     		movs	r3, #0
 179 0012 0E93     		str	r3, [sp, #56]
 173:Src/main.c    ****   {
 180              		.loc 1 173 3 is_stmt 1 view .LVU37
 173:Src/main.c    ****   {
 181              		.loc 1 173 7 is_stmt 0 view .LVU38
 182 0014 05A8     		add	r0, sp, #20
 183 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 184              	.LVL9:
 173:Src/main.c    ****   {
 185              		.loc 1 173 6 discriminator 1 view .LVU39
 186 001a 0028     		cmp	r0, #0
 187 001c 1ED1     		bne	.L14
 180:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 188              		.loc 1 180 3 is_stmt 1 view .LVU40
 180:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 189              		.loc 1 180 31 is_stmt 0 view .LVU41
 190 001e 0723     		movs	r3, #7
 191 0020 0193     		str	r3, [sp, #4]
 182:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 192              		.loc 1 182 3 is_stmt 1 view .LVU42
 182:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 193              		.loc 1 182 34 is_stmt 0 view .LVU43
 194 0022 0023     		movs	r3, #0
 195 0024 0293     		str	r3, [sp, #8]
 183:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 196              		.loc 1 183 3 is_stmt 1 view .LVU44
 183:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 197              		.loc 1 183 35 is_stmt 0 view .LVU45
 198 0026 0393     		str	r3, [sp, #12]
 184:Src/main.c    **** 
 199              		.loc 1 184 3 is_stmt 1 view .LVU46
 184:Src/main.c    **** 
 200              		.loc 1 184 36 is_stmt 0 view .LVU47
 201 0028 0493     		str	r3, [sp, #16]
 186:Src/main.c    ****   {
 202              		.loc 1 186 3 is_stmt 1 view .LVU48
 186:Src/main.c    ****   {
 203              		.loc 1 186 7 is_stmt 0 view .LVU49
 204 002a 0021     		movs	r1, #0
 205 002c 01A8     		add	r0, sp, #4
 206 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 207              	.LVL10:
 186:Src/main.c    ****   {
 208              		.loc 1 186 6 discriminator 1 view .LVU50
 209 0032 0028     		cmp	r0, #0
 210 0034 16D1     		bne	.L15
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 9


 193:Src/main.c    **** 
 211              		.loc 1 193 3 is_stmt 1 view .LVU51
 193:Src/main.c    **** 
 212              		.loc 1 193 22 is_stmt 0 view .LVU52
 213 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 214              	.LVL11:
 193:Src/main.c    **** 
 215              		.loc 1 193 3 discriminator 1 view .LVU53
 216 003a FA21     		movs	r1, #250
 217 003c 8900     		lsls	r1, r1, #2
 218 003e FFF7FEFF 		bl	__aeabi_uidiv
 219              	.LVL12:
 220 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 221              	.LVL13:
 197:Src/main.c    **** 
 222              		.loc 1 197 3 is_stmt 1 view .LVU54
 223 0046 0420     		movs	r0, #4
 224 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 225              	.LVL14:
 200:Src/main.c    **** }
 226              		.loc 1 200 3 view .LVU55
 227 004c 0120     		movs	r0, #1
 228 004e 0022     		movs	r2, #0
 229 0050 0021     		movs	r1, #0
 230 0052 4042     		rsbs	r0, r0, #0
 231 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 232              	.LVL15:
 201:Src/main.c    **** 
 233              		.loc 1 201 1 is_stmt 0 view .LVU56
 234 0058 13B0     		add	sp, sp, #76
 235              		@ sp needed
 236 005a 00BD     		pop	{pc}
 237              	.L14:
 175:Src/main.c    ****   }
 238              		.loc 1 175 5 is_stmt 1 view .LVU57
 239 005c 0348     		ldr	r0, .L16
 240 005e AF21     		movs	r1, #175
 241 0060 FFF7FEFF 		bl	_Error_Handler
 242              	.LVL16:
 243              	.L15:
 188:Src/main.c    ****   }
 244              		.loc 1 188 5 view .LVU58
 245 0064 0148     		ldr	r0, .L16
 246 0066 BC21     		movs	r1, #188
 247 0068 FFF7FEFF 		bl	_Error_Handler
 248              	.LVL17:
 249              	.L17:
 250              		.align	2
 251              	.L16:
 252 006c 00000000 		.word	.LC0
 253              		.cfi_endproc
 254              	.LFE43:
 256              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 257              		.align	2
 258              	.LC2:
 259 0000 4572726F 		.ascii	"Error: Invalid character\012\000"
 259      723A2049 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 10


 259      6E76616C 
 259      69642063 
 259      68617261 
 260              		.section	.text.main,"ax",%progbits
 261              		.align	1
 262              		.global	main
 263              		.syntax unified
 264              		.code	16
 265              		.thumb_func
 267              	main:
 268              	.LFB42:
  88:Src/main.c    ****   SystemClock_Config();
 269              		.loc 1 88 1 view -0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 32
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273 0000 30B5     		push	{r4, r5, lr}
 274              	.LCFI3:
 275              		.cfi_def_cfa_offset 12
 276              		.cfi_offset 4, -12
 277              		.cfi_offset 5, -8
 278              		.cfi_offset 14, -4
 279 0002 89B0     		sub	sp, sp, #36
 280              	.LCFI4:
 281              		.cfi_def_cfa_offset 48
  89:Src/main.c    **** 
 282              		.loc 1 89 3 view .LVU60
 283 0004 FFF7FEFF 		bl	SystemClock_Config
 284              	.LVL18:
  92:Src/main.c    **** 
 285              		.loc 1 92 3 view .LVU61
  92:Src/main.c    **** 
 286              		.loc 1 92 6 is_stmt 0 view .LVU62
 287 0008 424A     		ldr	r2, .L26
 288 000a 5369     		ldr	r3, [r2, #20]
  92:Src/main.c    **** 
 289              		.loc 1 92 15 view .LVU63
 290 000c 8021     		movs	r1, #128
 291 000e C902     		lsls	r1, r1, #11
 292 0010 0B43     		orrs	r3, r1
 293 0012 5361     		str	r3, [r2, #20]
  95:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
 294              		.loc 1 95 3 is_stmt 1 view .LVU64
  95:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
 295              		.loc 1 95 8 is_stmt 0 view .LVU65
 296 0014 404B     		ldr	r3, .L26+4
 297 0016 1868     		ldr	r0, [r3]
  95:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
 298              		.loc 1 95 16 view .LVU66
 299 0018 404C     		ldr	r4, .L26+8
 300 001a 2040     		ands	r0, r4
 301 001c 1860     		str	r0, [r3]
  96:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
 302              		.loc 1 96 3 is_stmt 1 view .LVU67
  96:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
 303              		.loc 1 96 8 is_stmt 0 view .LVU68
 304 001e 1C68     		ldr	r4, [r3]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 11


  96:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
 305              		.loc 1 96 16 view .LVU69
 306 0020 8020     		movs	r0, #128
 307 0022 8003     		lsls	r0, r0, #14
 308 0024 2043     		orrs	r0, r4
 309 0026 1860     		str	r0, [r3]
  97:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
 310              		.loc 1 97 3 is_stmt 1 view .LVU70
  97:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
 311              		.loc 1 97 8 is_stmt 0 view .LVU71
 312 0028 1868     		ldr	r0, [r3]
  97:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
 313              		.loc 1 97 16 view .LVU72
 314 002a 3D4C     		ldr	r4, .L26+12
 315 002c 2040     		ands	r0, r4
 316 002e 1860     		str	r0, [r3]
  98:Src/main.c    **** 
 317              		.loc 1 98 3 is_stmt 1 view .LVU73
  98:Src/main.c    **** 
 318              		.loc 1 98 8 is_stmt 0 view .LVU74
 319 0030 1C68     		ldr	r4, [r3]
  98:Src/main.c    **** 
 320              		.loc 1 98 16 view .LVU75
 321 0032 8020     		movs	r0, #128
 322 0034 0004     		lsls	r0, r0, #16
 323 0036 2043     		orrs	r0, r4
 324 0038 1860     		str	r0, [r3]
 101:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 325              		.loc 1 101 3 is_stmt 1 view .LVU76
 101:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 326              		.loc 1 101 13 is_stmt 0 view .LVU77
 327 003a 586A     		ldr	r0, [r3, #36]
 101:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 328              		.loc 1 101 17 view .LVU78
 329 003c 394C     		ldr	r4, .L26+16
 330 003e 2040     		ands	r0, r4
 331 0040 5862     		str	r0, [r3, #36]
 102:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 332              		.loc 1 102 3 is_stmt 1 view .LVU79
 102:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 333              		.loc 1 102 13 is_stmt 0 view .LVU80
 334 0042 5C6A     		ldr	r4, [r3, #36]
 102:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 335              		.loc 1 102 17 view .LVU81
 336 0044 8020     		movs	r0, #128
 337 0046 C000     		lsls	r0, r0, #3
 338 0048 2043     		orrs	r0, r4
 339 004a 5862     		str	r0, [r3, #36]
 103:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 340              		.loc 1 103 3 is_stmt 1 view .LVU82
 103:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 341              		.loc 1 103 13 is_stmt 0 view .LVU83
 342 004c 586A     		ldr	r0, [r3, #36]
 103:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 343              		.loc 1 103 17 view .LVU84
 344 004e 364C     		ldr	r4, .L26+20
 345 0050 2040     		ands	r0, r4
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 12


 346 0052 5862     		str	r0, [r3, #36]
 104:Src/main.c    **** 
 347              		.loc 1 104 3 is_stmt 1 view .LVU85
 104:Src/main.c    **** 
 348              		.loc 1 104 13 is_stmt 0 view .LVU86
 349 0054 5C6A     		ldr	r4, [r3, #36]
 104:Src/main.c    **** 
 350              		.loc 1 104 17 view .LVU87
 351 0056 8020     		movs	r0, #128
 352 0058 C001     		lsls	r0, r0, #7
 353 005a 2043     		orrs	r0, r4
 354 005c 5862     		str	r0, [r3, #36]
 107:Src/main.c    ****   // Set PC8 and PC9 to output mode
 355              		.loc 1 107 3 is_stmt 1 view .LVU88
 107:Src/main.c    ****   // Set PC8 and PC9 to output mode
 356              		.loc 1 107 6 is_stmt 0 view .LVU89
 357 005e 5069     		ldr	r0, [r2, #20]
 107:Src/main.c    ****   // Set PC8 and PC9 to output mode
 358              		.loc 1 107 15 view .LVU90
 359 0060 8023     		movs	r3, #128
 360 0062 1B03     		lsls	r3, r3, #12
 361 0064 0343     		orrs	r3, r0
 362 0066 5361     		str	r3, [r2, #20]
 109:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 363              		.loc 1 109 3 is_stmt 1 view .LVU91
 109:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 364              		.loc 1 109 8 is_stmt 0 view .LVU92
 365 0068 304B     		ldr	r3, .L26+24
 366 006a 1868     		ldr	r0, [r3]
 109:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 367              		.loc 1 109 16 view .LVU93
 368 006c 304C     		ldr	r4, .L26+28
 369 006e 2040     		ands	r0, r4
 370 0070 1860     		str	r0, [r3]
 110:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 371              		.loc 1 110 3 is_stmt 1 view .LVU94
 110:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 372              		.loc 1 110 8 is_stmt 0 view .LVU95
 373 0072 1C68     		ldr	r4, [r3]
 110:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 374              		.loc 1 110 16 view .LVU96
 375 0074 8020     		movs	r0, #128
 376 0076 4002     		lsls	r0, r0, #9
 377 0078 2043     		orrs	r0, r4
 378 007a 1860     		str	r0, [r3]
 111:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 379              		.loc 1 111 3 is_stmt 1 view .LVU97
 111:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 380              		.loc 1 111 8 is_stmt 0 view .LVU98
 381 007c 1868     		ldr	r0, [r3]
 111:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 382              		.loc 1 111 16 view .LVU99
 383 007e 2D4C     		ldr	r4, .L26+32
 384 0080 2040     		ands	r0, r4
 385 0082 1860     		str	r0, [r3]
 112:Src/main.c    **** 
 386              		.loc 1 112 3 is_stmt 1 view .LVU100
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 13


 112:Src/main.c    **** 
 387              		.loc 1 112 8 is_stmt 0 view .LVU101
 388 0084 1868     		ldr	r0, [r3]
 112:Src/main.c    **** 
 389              		.loc 1 112 16 view .LVU102
 390 0086 0843     		orrs	r0, r1
 391 0088 1860     		str	r0, [r3]
 115:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
 392              		.loc 1 115 3 is_stmt 1 view .LVU103
 115:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
 393              		.loc 1 115 8 is_stmt 0 view .LVU104
 394 008a 5C69     		ldr	r4, [r3, #20]
 115:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
 395              		.loc 1 115 14 view .LVU105
 396 008c 8020     		movs	r0, #128
 397 008e 4000     		lsls	r0, r0, #1
 398 0090 2043     		orrs	r0, r4
 399 0092 5861     		str	r0, [r3, #20]
 116:Src/main.c    **** 
 400              		.loc 1 116 3 is_stmt 1 view .LVU106
 116:Src/main.c    **** 
 401              		.loc 1 116 8 is_stmt 0 view .LVU107
 402 0094 5C69     		ldr	r4, [r3, #20]
 116:Src/main.c    **** 
 403              		.loc 1 116 14 view .LVU108
 404 0096 8020     		movs	r0, #128
 405 0098 8000     		lsls	r0, r0, #2
 406 009a 2043     		orrs	r0, r4
 407 009c 5861     		str	r0, [r3, #20]
 119:Src/main.c    ****   // Set baud rate to 115200 bits/s
 408              		.loc 1 119 3 is_stmt 1 view .LVU109
 119:Src/main.c    ****   // Set baud rate to 115200 bits/s
 409              		.loc 1 119 6 is_stmt 0 view .LVU110
 410 009e D369     		ldr	r3, [r2, #28]
 119:Src/main.c    ****   // Set baud rate to 115200 bits/s
 411              		.loc 1 119 16 view .LVU111
 412 00a0 1943     		orrs	r1, r3
 413 00a2 D161     		str	r1, [r2, #28]
 121:Src/main.c    ****   // Enable transmission and reception
 414              		.loc 1 121 3 is_stmt 1 view .LVU112
 121:Src/main.c    ****   // Enable transmission and reception
 415              		.loc 1 121 17 is_stmt 0 view .LVU113
 416 00a4 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 417              	.LVL19:
 121:Src/main.c    ****   // Enable transmission and reception
 418              		.loc 1 121 39 discriminator 1 view .LVU114
 419 00a8 E121     		movs	r1, #225
 420 00aa 4902     		lsls	r1, r1, #9
 421 00ac FFF7FEFF 		bl	__aeabi_uidiv
 422              	.LVL20:
 121:Src/main.c    ****   // Enable transmission and reception
 423              		.loc 1 121 15 discriminator 1 view .LVU115
 424 00b0 214B     		ldr	r3, .L26+36
 425 00b2 D860     		str	r0, [r3, #12]
 123:Src/main.c    ****   // Enable USART3
 426              		.loc 1 123 3 is_stmt 1 view .LVU116
 123:Src/main.c    ****   // Enable USART3
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 14


 427              		.loc 1 123 9 is_stmt 0 view .LVU117
 428 00b4 1A68     		ldr	r2, [r3]
 123:Src/main.c    ****   // Enable USART3
 429              		.loc 1 123 15 view .LVU118
 430 00b6 0C21     		movs	r1, #12
 431 00b8 0A43     		orrs	r2, r1
 432 00ba 1A60     		str	r2, [r3]
 125:Src/main.c    **** 
 433              		.loc 1 125 3 is_stmt 1 view .LVU119
 125:Src/main.c    **** 
 434              		.loc 1 125 9 is_stmt 0 view .LVU120
 435 00bc 1A68     		ldr	r2, [r3]
 125:Src/main.c    **** 
 436              		.loc 1 125 15 view .LVU121
 437 00be 0B39     		subs	r1, r1, #11
 438 00c0 0A43     		orrs	r2, r1
 439 00c2 1A60     		str	r2, [r3]
 440 00c4 05E0     		b	.L20
 441              	.LVL21:
 442              	.L25:
 443              	.LBB3:
 143:Src/main.c    ****     }
 444              		.loc 1 143 7 is_stmt 1 view .LVU122
 143:Src/main.c    ****     }
 445              		.loc 1 143 12 is_stmt 0 view .LVU123
 446 00c6 194A     		ldr	r2, .L26+24
 447 00c8 5169     		ldr	r1, [r2, #20]
 143:Src/main.c    ****     }
 448              		.loc 1 143 18 view .LVU124
 449 00ca 8023     		movs	r3, #128
 450 00cc 5B00     		lsls	r3, r3, #1
 451 00ce 4B40     		eors	r3, r1
 452 00d0 5361     		str	r3, [r2, #20]
 453              	.LVL22:
 454              	.L20:
 136:Src/main.c    **** 
 455              		.loc 1 136 5 is_stmt 1 view .LVU125
 134:Src/main.c    ****     {
 456              		.loc 1 134 12 discriminator 1 view .LVU126
 134:Src/main.c    ****     {
 457              		.loc 1 134 20 is_stmt 0 discriminator 1 view .LVU127
 458 00d2 194B     		ldr	r3, .L26+36
 459 00d4 DB69     		ldr	r3, [r3, #28]
 134:Src/main.c    ****     {
 460              		.loc 1 134 12 discriminator 1 view .LVU128
 461 00d6 9B06     		lsls	r3, r3, #26
 462 00d8 FBD5     		bpl	.L20
 136:Src/main.c    **** 
 463              		.loc 1 136 6 is_stmt 1 view .LVU129
 139:Src/main.c    ****     send_char(c);
 464              		.loc 1 139 5 view .LVU130
 139:Src/main.c    ****     send_char(c);
 465              		.loc 1 139 20 is_stmt 0 view .LVU131
 466 00da 174B     		ldr	r3, .L26+36
 467 00dc 9C8C     		ldrh	r4, [r3, #36]
 139:Src/main.c    ****     send_char(c);
 468              		.loc 1 139 10 view .LVU132
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 15


 469 00de E4B2     		uxtb	r4, r4
 470              	.LVL23:
 140:Src/main.c    ****     if (c == 'o')
 471              		.loc 1 140 5 is_stmt 1 view .LVU133
 472 00e0 2000     		movs	r0, r4
 473 00e2 FFF7FEFF 		bl	send_char
 474              	.LVL24:
 141:Src/main.c    ****     {
 475              		.loc 1 141 5 view .LVU134
 141:Src/main.c    ****     {
 476              		.loc 1 141 8 is_stmt 0 view .LVU135
 477 00e6 6F2C     		cmp	r4, #111
 478 00e8 EDD0     		beq	.L25
 145:Src/main.c    ****     {
 479              		.loc 1 145 10 is_stmt 1 view .LVU136
 145:Src/main.c    ****     {
 480              		.loc 1 145 13 is_stmt 0 view .LVU137
 481 00ea 672C     		cmp	r4, #103
 482 00ec 06D1     		bne	.L23
 147:Src/main.c    ****     }
 483              		.loc 1 147 7 is_stmt 1 view .LVU138
 147:Src/main.c    ****     }
 484              		.loc 1 147 12 is_stmt 0 view .LVU139
 485 00ee 0F4A     		ldr	r2, .L26+24
 486 00f0 5169     		ldr	r1, [r2, #20]
 147:Src/main.c    ****     }
 487              		.loc 1 147 18 view .LVU140
 488 00f2 8023     		movs	r3, #128
 489 00f4 9B00     		lsls	r3, r3, #2
 490 00f6 4B40     		eors	r3, r1
 491 00f8 5361     		str	r3, [r2, #20]
 492 00fa EAE7     		b	.L20
 493              	.L23:
 494              	.LBB4:
 151:Src/main.c    ****       transmit_string(error);
 495              		.loc 1 151 7 is_stmt 1 view .LVU141
 151:Src/main.c    ****       transmit_string(error);
 496              		.loc 1 151 12 is_stmt 0 view .LVU142
 497 00fc 01A8     		add	r0, sp, #4
 498 00fe 0F4B     		ldr	r3, .L26+40
 499 0100 0200     		movs	r2, r0
 500 0102 32CB     		ldmia	r3!, {r1, r4, r5}
 501 0104 32C2     		stmia	r2!, {r1, r4, r5}
 502              	.LVL25:
 151:Src/main.c    ****       transmit_string(error);
 503              		.loc 1 151 12 view .LVU143
 504 0106 32CB     		ldmia	r3!, {r1, r4, r5}
 505 0108 32C2     		stmia	r2!, {r1, r4, r5}
 506 010a 1B88     		ldrh	r3, [r3]
 507 010c 1380     		strh	r3, [r2]
 152:Src/main.c    ****     }
 508              		.loc 1 152 7 is_stmt 1 view .LVU144
 509 010e FFF7FEFF 		bl	transmit_string
 510              	.LVL26:
 511 0112 DEE7     		b	.L20
 512              	.L27:
 513              		.align	2
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 16


 514              	.L26:
 515 0114 00100240 		.word	1073876992
 516 0118 00040048 		.word	1207960576
 517 011c FFFFCFFF 		.word	-3145729
 518 0120 FFFF3FFF 		.word	-12582913
 519 0124 FFF0FFFF 		.word	-3841
 520 0128 FF0FFFFF 		.word	-61441
 521 012c 00080048 		.word	1207961600
 522 0130 FFFFFCFF 		.word	-196609
 523 0134 FFFFF3FF 		.word	-786433
 524 0138 00480040 		.word	1073760256
 525 013c 00000000 		.word	.LC2
 526              	.LBE4:
 527              	.LBE3:
 528              		.cfi_endproc
 529              	.LFE42:
 531              		.text
 532              	.Letext0:
 533              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 534              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 535              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 536              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 537              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 538              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:19     .text.send_char:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:25     .text.send_char:00000000 send_char
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:53     .text.send_char:00000010 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:58     .text.transmit_string:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:64     .text.transmit_string:00000000 transmit_string
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:114    .text._Error_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:120    .text._Error_Handler:00000000 _Error_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:138    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:143    .text.SystemClock_Config:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:149    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:252    .text.SystemClock_Config:0000006c $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:257    .rodata.main.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:261    .text.main:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:267    .text.main:00000000 main
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccySfnF2.s:515    .text.main:00000114 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
