ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.send_char,"ax",%progbits
  19              		.align	1
  20              		.global	send_char
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	send_char:
  26              	.LFB40:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * File Name          : main.c
   5:Src/main.c    ****   * Description        : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  41:Src/main.c    **** #include "main.h"
  42:Src/main.c    **** #include "stm32f0xx_hal.h"
  43:Src/main.c    **** void _Error_Handler(char * file, int line);
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** void send_char(char c)
  69:Src/main.c    **** {
  27              		.loc 1 69 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.L2:
  70:Src/main.c    ****   // Use an empty while loop which exits once the flag is set.
  71:Src/main.c    ****   while (!(USART3->ISR & USART_ISR_TXE))
  72:Src/main.c    ****   {
  73:Src/main.c    ****   };
  34              		.loc 1 73 3 view .LVU1
  71:Src/main.c    ****   {
  35              		.loc 1 71 10 discriminator 1 view .LVU2
  71:Src/main.c    ****   {
  36              		.loc 1 71 18 is_stmt 0 discriminator 1 view .LVU3
  37 0000 034B     		ldr	r3, .L4
  38 0002 DB69     		ldr	r3, [r3, #28]
  71:Src/main.c    ****   {
  39              		.loc 1 71 10 discriminator 1 view .LVU4
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 3


  40 0004 1B06     		lsls	r3, r3, #24
  41 0006 FBD5     		bpl	.L2
  42              		.loc 1 73 4 is_stmt 1 view .LVU5
  74:Src/main.c    ****   // Write the character into the transmit data register
  75:Src/main.c    ****   USART3->TDR = c;
  43              		.loc 1 75 3 view .LVU6
  44              		.loc 1 75 15 is_stmt 0 view .LVU7
  45 0008 014B     		ldr	r3, .L4
  46 000a 1885     		strh	r0, [r3, #40]
  76:Src/main.c    **** }
  47              		.loc 1 76 1 view .LVU8
  48              		@ sp needed
  49 000c 7047     		bx	lr
  50              	.L5:
  51 000e C046     		.align	2
  52              	.L4:
  53 0010 00480040 		.word	1073760256
  54              		.cfi_endproc
  55              	.LFE40:
  57              		.section	.text.transmit_string,"ax",%progbits
  58              		.align	1
  59              		.global	transmit_string
  60              		.syntax unified
  61              		.code	16
  62              		.thumb_func
  64              	transmit_string:
  65              	.LVL1:
  66              	.LFB41:
  77:Src/main.c    **** 
  78:Src/main.c    **** // Loop through an array of characters, send each one, exit when the null character is reached.
  79:Src/main.c    **** void transmit_string(char str[])
  80:Src/main.c    **** {
  67              		.loc 1 80 1 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		.loc 1 80 1 is_stmt 0 view .LVU10
  72 0000 70B5     		push	{r4, r5, r6, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 16
  75              		.cfi_offset 4, -16
  76              		.cfi_offset 5, -12
  77              		.cfi_offset 6, -8
  78              		.cfi_offset 14, -4
  79 0002 0500     		movs	r5, r0
  81:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  80              		.loc 1 81 3 is_stmt 1 view .LVU11
  81              	.LBB2:
  82              		.loc 1 81 8 view .LVU12
  83              	.LVL2:
  84              		.loc 1 81 12 is_stmt 0 view .LVU13
  85 0004 0024     		movs	r4, #0
  86              		.loc 1 81 3 view .LVU14
  87 0006 02E0     		b	.L7
  88              	.LVL3:
  89              	.L8:
  82:Src/main.c    ****   {
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 4


  83:Src/main.c    ****     send_char(str[i]);
  90              		.loc 1 83 5 is_stmt 1 view .LVU15
  91 0008 FFF7FEFF 		bl	send_char
  92              	.LVL4:
  81:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  93              		.loc 1 81 36 discriminator 3 view .LVU16
  94 000c 0134     		adds	r4, r4, #1
  95              	.LVL5:
  96              	.L7:
  81:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  97              		.loc 1 81 26 discriminator 1 view .LVU17
  81:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
  98              		.loc 1 81 22 is_stmt 0 discriminator 1 view .LVU18
  99 000e 285D     		ldrb	r0, [r5, r4]
  81:Src/main.c    ****   for (int i = 0; str[i] != '\0'; i++)
 100              		.loc 1 81 26 discriminator 1 view .LVU19
 101 0010 0028     		cmp	r0, #0
 102 0012 F9D1     		bne	.L8
 103              	.LBE2:
  84:Src/main.c    ****   }
  85:Src/main.c    **** }
 104              		.loc 1 85 1 view .LVU20
 105              		@ sp needed
 106              	.LVL6:
 107              	.LVL7:
 108              		.loc 1 85 1 view .LVU21
 109 0014 70BD     		pop	{r4, r5, r6, pc}
 110              		.cfi_endproc
 111              	.LFE41:
 113              		.section	.text._Error_Handler,"ax",%progbits
 114              		.align	1
 115              		.global	_Error_Handler
 116              		.syntax unified
 117              		.code	16
 118              		.thumb_func
 120              	_Error_Handler:
 121              	.LFB44:
  86:Src/main.c    **** 
  87:Src/main.c    **** int main(void)
  88:Src/main.c    **** {
  89:Src/main.c    ****   SystemClock_Config();
  90:Src/main.c    **** 
  91:Src/main.c    ****   // Enable GPIOB clock
  92:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
  93:Src/main.c    ****   // Enable USART3 clock
  94:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
  95:Src/main.c    ****   // Enable GPIOC clock
  96:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  97:Src/main.c    **** 
  98:Src/main.c    ****   // Set PB10 and PB11 to alternate function mode.
  99:Src/main.c    ****   GPIOB->MODER &= ~(3 << 20);
 100:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
 101:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
 102:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
 103:Src/main.c    **** 
 104:Src/main.c    ****   // Set PB10 and PB11 in AFRH AF4 mode (PB10 -> TX, PB11 -> RX) (USART3)
 105:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 8);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 5


 106:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 107:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 108:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 109:Src/main.c    **** 
 110:Src/main.c    ****   // Enable the red PC6, PC7, PC8, and PC9 to general purpose output mode
 111:Src/main.c    ****   GPIOC->MODER &= ~(3 << 12);
 112:Src/main.c    ****   GPIOC->MODER |= 1 << 12;
 113:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 114:Src/main.c    ****   GPIOC->MODER |= 1 << 14;  
 115:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 116:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 117:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 118:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 119:Src/main.c    **** 
 120:Src/main.c    ****   // Set PC6, PC7, PC8, and PC9 to push-pull
 121:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
 122:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 123:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 124:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 125:Src/main.c    **** 
 126:Src/main.c    ****   // Set PC6, PC7, PC8, and PC9 to low speed
 127:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 12);
 128:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
 129:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 16);
 130:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 18);
 131:Src/main.c    **** 
 132:Src/main.c    ****   // Set PC6, PC7, PC8, and PC9 to no pull-up, no pull-down
 133:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 12);
 134:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 135:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 136:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 137:Src/main.c    **** 
 138:Src/main.c    ****   // Set PC6 (red), PC7 (blue), PC8 (orange), and PC9 (green) to high
 139:Src/main.c    ****   GPIOC->ODR |= (1 << 6);
 140:Src/main.c    ****   GPIOC->ODR |= (1 << 7);
 141:Src/main.c    ****   GPIOC->ODR |= (1 << 8);
 142:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
 143:Src/main.c    **** 
 144:Src/main.c    ****   // Set baud rate to 115200 bits/s
 145:Src/main.c    ****   USART3->BRR = HAL_RCC_GetHCLKFreq() / 115200;
 146:Src/main.c    ****   // Enable transmission and reception
 147:Src/main.c    ****   USART3->CR1 |= USART_CR1_TE | USART_CR1_RE;
 148:Src/main.c    ****   // Enable USART3
 149:Src/main.c    ****   USART3->CR1 |= USART_CR1_UE;
 150:Src/main.c    **** 
 151:Src/main.c    ****   while(1)
 152:Src/main.c    ****   {
 153:Src/main.c    ****     // Toggle LED's based on the character being pressed on the keyboard
 154:Src/main.c    ****     // If the character is 'r', toggle the red LED (PC6)
 155:Src/main.c    ****     // If the character is 'b', toggle the blue LED (PC7)
 156:Src/main.c    ****     // If the character is 'o', toggle the orange LED (PC8)
 157:Src/main.c    ****     // If the character is 'g', toggle the green LED (PC9)
 158:Src/main.c    **** 
 159:Src/main.c    ****     // Check and wait on the USART status flag that indicates the receive (read) register is not em
 160:Src/main.c    ****     while (!((USART3->ISR >> 5) & 1))
 161:Src/main.c    ****     {
 162:Src/main.c    ****     };
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 6


 163:Src/main.c    **** 
 164:Src/main.c    ****     transmit_string("Hello, World!\n");
 165:Src/main.c    **** 
 166:Src/main.c    ****     // switch(USART3->RDR)
 167:Src/main.c    ****     // {
 168:Src/main.c    ****     //   case 'r':
 169:Src/main.c    ****     //     GPIOC->ODR ^= (1 << 6);
 170:Src/main.c    ****     //     break;
 171:Src/main.c    ****     //   case 'b':
 172:Src/main.c    ****     //     GPIOC->ODR ^= (1 << 7);
 173:Src/main.c    ****     //     break;
 174:Src/main.c    ****     //   case 'o':
 175:Src/main.c    ****     //     GPIOC->ODR ^= (1 << 8);
 176:Src/main.c    ****     //     break;
 177:Src/main.c    ****     //   case 'g':
 178:Src/main.c    ****     //     GPIOC->ODR ^= (1 << 9);
 179:Src/main.c    ****     //     break;
 180:Src/main.c    ****     //   default:
 181:Src/main.c    ****     //     transmit_string("Invalid character\n");
 182:Src/main.c    ****     //     break;
 183:Src/main.c    ****     // }
 184:Src/main.c    **** 
 185:Src/main.c    ****   }
 186:Src/main.c    ****   
 187:Src/main.c    **** }
 188:Src/main.c    **** 
 189:Src/main.c    **** /** System Clock Configuration
 190:Src/main.c    **** */
 191:Src/main.c    **** void SystemClock_Config(void)
 192:Src/main.c    **** {
 193:Src/main.c    **** 
 194:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 195:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 196:Src/main.c    **** 
 197:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 198:Src/main.c    ****     */
 199:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 200:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 201:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 203:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 204:Src/main.c    ****   {
 205:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 206:Src/main.c    ****   }
 207:Src/main.c    **** 
 208:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 209:Src/main.c    ****     */
 210:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 211:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 212:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 213:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 214:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 215:Src/main.c    **** 
 216:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 217:Src/main.c    ****   {
 218:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 219:Src/main.c    ****   }
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 7


 220:Src/main.c    **** 
 221:Src/main.c    ****     /**Configure the Systick interrupt time
 222:Src/main.c    ****     */
 223:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 224:Src/main.c    **** 
 225:Src/main.c    ****     /**Configure the Systick
 226:Src/main.c    ****     */
 227:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 228:Src/main.c    **** 
 229:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 230:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 231:Src/main.c    **** }
 232:Src/main.c    **** 
 233:Src/main.c    **** /* USER CODE BEGIN 4 */
 234:Src/main.c    **** 
 235:Src/main.c    **** /* USER CODE END 4 */
 236:Src/main.c    **** 
 237:Src/main.c    **** /**
 238:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 239:Src/main.c    ****   * @param  None
 240:Src/main.c    ****   * @retval None
 241:Src/main.c    ****   */
 242:Src/main.c    **** void _Error_Handler(char * file, int line)
 243:Src/main.c    **** {
 122              		.loc 1 243 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ Volatile: function does not return.
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              	.LVL8:
 129              	.L10:
 244:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 245:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 246:Src/main.c    ****   while(1)
 130              		.loc 1 246 3 view .LVU23
 247:Src/main.c    ****   {
 248:Src/main.c    ****   }
 131              		.loc 1 248 3 view .LVU24
 246:Src/main.c    ****   {
 132              		.loc 1 246 8 view .LVU25
 133 0000 FEE7     		b	.L10
 134              		.cfi_endproc
 135              	.LFE44:
 137              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 138              		.align	2
 139              	.LC0:
 140 0000 5372632F 		.ascii	"Src/main.c\000"
 140      6D61696E 
 140      2E6300
 141              		.global	__aeabi_uidiv
 142              		.section	.text.SystemClock_Config,"ax",%progbits
 143              		.align	1
 144              		.global	SystemClock_Config
 145              		.syntax unified
 146              		.code	16
 147              		.thumb_func
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 8


 149              	SystemClock_Config:
 150              	.LFB43:
 192:Src/main.c    **** 
 151              		.loc 1 192 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 72
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155 0000 00B5     		push	{lr}
 156              	.LCFI1:
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 14, -4
 159 0002 93B0     		sub	sp, sp, #76
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 80
 194:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 162              		.loc 1 194 3 view .LVU27
 195:Src/main.c    **** 
 163              		.loc 1 195 3 view .LVU28
 199:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 164              		.loc 1 199 3 view .LVU29
 199:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 165              		.loc 1 199 36 is_stmt 0 view .LVU30
 166 0004 0223     		movs	r3, #2
 167 0006 0593     		str	r3, [sp, #20]
 200:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 168              		.loc 1 200 3 is_stmt 1 view .LVU31
 200:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 169              		.loc 1 200 30 is_stmt 0 view .LVU32
 170 0008 013B     		subs	r3, r3, #1
 171 000a 0893     		str	r3, [sp, #32]
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 172              		.loc 1 201 3 is_stmt 1 view .LVU33
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 173              		.loc 1 201 41 is_stmt 0 view .LVU34
 174 000c 0F33     		adds	r3, r3, #15
 175 000e 0993     		str	r3, [sp, #36]
 202:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 176              		.loc 1 202 3 is_stmt 1 view .LVU35
 202:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 177              		.loc 1 202 34 is_stmt 0 view .LVU36
 178 0010 0023     		movs	r3, #0
 179 0012 0E93     		str	r3, [sp, #56]
 203:Src/main.c    ****   {
 180              		.loc 1 203 3 is_stmt 1 view .LVU37
 203:Src/main.c    ****   {
 181              		.loc 1 203 7 is_stmt 0 view .LVU38
 182 0014 05A8     		add	r0, sp, #20
 183 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 184              	.LVL9:
 203:Src/main.c    ****   {
 185              		.loc 1 203 6 discriminator 1 view .LVU39
 186 001a 0028     		cmp	r0, #0
 187 001c 1ED1     		bne	.L14
 210:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 188              		.loc 1 210 3 is_stmt 1 view .LVU40
 210:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 189              		.loc 1 210 31 is_stmt 0 view .LVU41
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 9


 190 001e 0723     		movs	r3, #7
 191 0020 0193     		str	r3, [sp, #4]
 212:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 192              		.loc 1 212 3 is_stmt 1 view .LVU42
 212:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 193              		.loc 1 212 34 is_stmt 0 view .LVU43
 194 0022 0023     		movs	r3, #0
 195 0024 0293     		str	r3, [sp, #8]
 213:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 196              		.loc 1 213 3 is_stmt 1 view .LVU44
 213:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 197              		.loc 1 213 35 is_stmt 0 view .LVU45
 198 0026 0393     		str	r3, [sp, #12]
 214:Src/main.c    **** 
 199              		.loc 1 214 3 is_stmt 1 view .LVU46
 214:Src/main.c    **** 
 200              		.loc 1 214 36 is_stmt 0 view .LVU47
 201 0028 0493     		str	r3, [sp, #16]
 216:Src/main.c    ****   {
 202              		.loc 1 216 3 is_stmt 1 view .LVU48
 216:Src/main.c    ****   {
 203              		.loc 1 216 7 is_stmt 0 view .LVU49
 204 002a 0021     		movs	r1, #0
 205 002c 01A8     		add	r0, sp, #4
 206 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 207              	.LVL10:
 216:Src/main.c    ****   {
 208              		.loc 1 216 6 discriminator 1 view .LVU50
 209 0032 0028     		cmp	r0, #0
 210 0034 16D1     		bne	.L15
 223:Src/main.c    **** 
 211              		.loc 1 223 3 is_stmt 1 view .LVU51
 223:Src/main.c    **** 
 212              		.loc 1 223 22 is_stmt 0 view .LVU52
 213 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 214              	.LVL11:
 223:Src/main.c    **** 
 215              		.loc 1 223 3 discriminator 1 view .LVU53
 216 003a FA21     		movs	r1, #250
 217 003c 8900     		lsls	r1, r1, #2
 218 003e FFF7FEFF 		bl	__aeabi_uidiv
 219              	.LVL12:
 220 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 221              	.LVL13:
 227:Src/main.c    **** 
 222              		.loc 1 227 3 is_stmt 1 view .LVU54
 223 0046 0420     		movs	r0, #4
 224 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 225              	.LVL14:
 230:Src/main.c    **** }
 226              		.loc 1 230 3 view .LVU55
 227 004c 0120     		movs	r0, #1
 228 004e 0022     		movs	r2, #0
 229 0050 0021     		movs	r1, #0
 230 0052 4042     		rsbs	r0, r0, #0
 231 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 232              	.LVL15:
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 10


 231:Src/main.c    **** 
 233              		.loc 1 231 1 is_stmt 0 view .LVU56
 234 0058 13B0     		add	sp, sp, #76
 235              		@ sp needed
 236 005a 00BD     		pop	{pc}
 237              	.L14:
 205:Src/main.c    ****   }
 238              		.loc 1 205 5 is_stmt 1 view .LVU57
 239 005c 0348     		ldr	r0, .L16
 240 005e CD21     		movs	r1, #205
 241 0060 FFF7FEFF 		bl	_Error_Handler
 242              	.LVL16:
 243              	.L15:
 218:Src/main.c    ****   }
 244              		.loc 1 218 5 view .LVU58
 245 0064 0148     		ldr	r0, .L16
 246 0066 DA21     		movs	r1, #218
 247 0068 FFF7FEFF 		bl	_Error_Handler
 248              	.LVL17:
 249              	.L17:
 250              		.align	2
 251              	.L16:
 252 006c 00000000 		.word	.LC0
 253              		.cfi_endproc
 254              	.LFE43:
 256              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 257              		.align	2
 258              	.LC2:
 259 0000 48656C6C 		.ascii	"Hello, World!\012\000"
 259      6F2C2057 
 259      6F726C64 
 259      210A00
 260              		.section	.text.main,"ax",%progbits
 261              		.align	1
 262              		.global	main
 263              		.syntax unified
 264              		.code	16
 265              		.thumb_func
 267              	main:
 268              	.LFB42:
  88:Src/main.c    ****   SystemClock_Config();
 269              		.loc 1 88 1 view -0
 270              		.cfi_startproc
 271              		@ Volatile: function does not return.
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 275              	.LCFI3:
 276              		.cfi_def_cfa_offset 20
 277              		.cfi_offset 4, -20
 278              		.cfi_offset 5, -16
 279              		.cfi_offset 6, -12
 280              		.cfi_offset 7, -8
 281              		.cfi_offset 14, -4
 282 0002 C646     		mov	lr, r8
 283 0004 00B5     		push	{lr}
 284              	.LCFI4:
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 11


 285              		.cfi_def_cfa_offset 24
 286              		.cfi_offset 8, -24
  89:Src/main.c    **** 
 287              		.loc 1 89 3 view .LVU60
 288 0006 FFF7FEFF 		bl	SystemClock_Config
 289              	.LVL18:
  92:Src/main.c    ****   // Enable USART3 clock
 290              		.loc 1 92 3 view .LVU61
  92:Src/main.c    ****   // Enable USART3 clock
 291              		.loc 1 92 6 is_stmt 0 view .LVU62
 292 000a 534B     		ldr	r3, .L22
 293 000c 5969     		ldr	r1, [r3, #20]
  92:Src/main.c    ****   // Enable USART3 clock
 294              		.loc 1 92 15 view .LVU63
 295 000e 8022     		movs	r2, #128
 296 0010 D202     		lsls	r2, r2, #11
 297 0012 1143     		orrs	r1, r2
 298 0014 5961     		str	r1, [r3, #20]
  94:Src/main.c    ****   // Enable GPIOC clock
 299              		.loc 1 94 3 is_stmt 1 view .LVU64
  94:Src/main.c    ****   // Enable GPIOC clock
 300              		.loc 1 94 6 is_stmt 0 view .LVU65
 301 0016 D969     		ldr	r1, [r3, #28]
  94:Src/main.c    ****   // Enable GPIOC clock
 302              		.loc 1 94 16 view .LVU66
 303 0018 1143     		orrs	r1, r2
 304 001a D961     		str	r1, [r3, #28]
  96:Src/main.c    **** 
 305              		.loc 1 96 3 is_stmt 1 view .LVU67
  96:Src/main.c    **** 
 306              		.loc 1 96 6 is_stmt 0 view .LVU68
 307 001c 5869     		ldr	r0, [r3, #20]
  96:Src/main.c    **** 
 308              		.loc 1 96 15 view .LVU69
 309 001e 8021     		movs	r1, #128
 310 0020 0903     		lsls	r1, r1, #12
 311 0022 0143     		orrs	r1, r0
 312 0024 5961     		str	r1, [r3, #20]
  99:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
 313              		.loc 1 99 3 is_stmt 1 view .LVU70
  99:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
 314              		.loc 1 99 8 is_stmt 0 view .LVU71
 315 0026 4D4B     		ldr	r3, .L22+4
 316 0028 1968     		ldr	r1, [r3]
  99:Src/main.c    ****   GPIOB->MODER |= 2 << 20;
 317              		.loc 1 99 16 view .LVU72
 318 002a 4D48     		ldr	r0, .L22+8
 319 002c 0140     		ands	r1, r0
 320 002e 1960     		str	r1, [r3]
 100:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
 321              		.loc 1 100 3 is_stmt 1 view .LVU73
 100:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
 322              		.loc 1 100 8 is_stmt 0 view .LVU74
 323 0030 1868     		ldr	r0, [r3]
 100:Src/main.c    ****   GPIOB->MODER &= ~(3 << 22);
 324              		.loc 1 100 16 view .LVU75
 325 0032 8021     		movs	r1, #128
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 12


 326 0034 8903     		lsls	r1, r1, #14
 327 0036 0143     		orrs	r1, r0
 328 0038 1960     		str	r1, [r3]
 101:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
 329              		.loc 1 101 3 is_stmt 1 view .LVU76
 101:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
 330              		.loc 1 101 8 is_stmt 0 view .LVU77
 331 003a 1968     		ldr	r1, [r3]
 101:Src/main.c    ****   GPIOB->MODER |= 2 << 22;
 332              		.loc 1 101 16 view .LVU78
 333 003c 4948     		ldr	r0, .L22+12
 334 003e 0140     		ands	r1, r0
 335 0040 1960     		str	r1, [r3]
 102:Src/main.c    **** 
 336              		.loc 1 102 3 is_stmt 1 view .LVU79
 102:Src/main.c    **** 
 337              		.loc 1 102 8 is_stmt 0 view .LVU80
 338 0042 1868     		ldr	r0, [r3]
 102:Src/main.c    **** 
 339              		.loc 1 102 16 view .LVU81
 340 0044 8021     		movs	r1, #128
 341 0046 0904     		lsls	r1, r1, #16
 342 0048 0143     		orrs	r1, r0
 343 004a 1960     		str	r1, [r3]
 105:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 344              		.loc 1 105 3 is_stmt 1 view .LVU82
 105:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 345              		.loc 1 105 13 is_stmt 0 view .LVU83
 346 004c 596A     		ldr	r1, [r3, #36]
 105:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 8;
 347              		.loc 1 105 17 view .LVU84
 348 004e 4648     		ldr	r0, .L22+16
 349 0050 0140     		ands	r1, r0
 350 0052 5962     		str	r1, [r3, #36]
 106:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 351              		.loc 1 106 3 is_stmt 1 view .LVU85
 106:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 352              		.loc 1 106 13 is_stmt 0 view .LVU86
 353 0054 586A     		ldr	r0, [r3, #36]
 106:Src/main.c    ****   GPIOB->AFR[1] &= ~(0xF << 12);
 354              		.loc 1 106 17 view .LVU87
 355 0056 8021     		movs	r1, #128
 356 0058 C900     		lsls	r1, r1, #3
 357 005a 0143     		orrs	r1, r0
 358 005c 5962     		str	r1, [r3, #36]
 107:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 359              		.loc 1 107 3 is_stmt 1 view .LVU88
 107:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 360              		.loc 1 107 13 is_stmt 0 view .LVU89
 361 005e 596A     		ldr	r1, [r3, #36]
 107:Src/main.c    ****   GPIOB->AFR[1] |= 4 << 12;
 362              		.loc 1 107 17 view .LVU90
 363 0060 4248     		ldr	r0, .L22+20
 364 0062 0140     		ands	r1, r0
 365 0064 5962     		str	r1, [r3, #36]
 108:Src/main.c    **** 
 366              		.loc 1 108 3 is_stmt 1 view .LVU91
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 13


 108:Src/main.c    **** 
 367              		.loc 1 108 13 is_stmt 0 view .LVU92
 368 0066 586A     		ldr	r0, [r3, #36]
 108:Src/main.c    **** 
 369              		.loc 1 108 17 view .LVU93
 370 0068 8021     		movs	r1, #128
 371 006a C901     		lsls	r1, r1, #7
 372 006c 0843     		orrs	r0, r1
 373 006e 5862     		str	r0, [r3, #36]
 111:Src/main.c    ****   GPIOC->MODER |= 1 << 12;
 374              		.loc 1 111 3 is_stmt 1 view .LVU94
 111:Src/main.c    ****   GPIOC->MODER |= 1 << 12;
 375              		.loc 1 111 8 is_stmt 0 view .LVU95
 376 0070 3F4B     		ldr	r3, .L22+24
 377 0072 1868     		ldr	r0, [r3]
 111:Src/main.c    ****   GPIOC->MODER |= 1 << 12;
 378              		.loc 1 111 16 view .LVU96
 379 0074 3F4F     		ldr	r7, .L22+28
 380 0076 3840     		ands	r0, r7
 381 0078 1860     		str	r0, [r3]
 112:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 382              		.loc 1 112 3 is_stmt 1 view .LVU97
 112:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 383              		.loc 1 112 8 is_stmt 0 view .LVU98
 384 007a 1C68     		ldr	r4, [r3]
 112:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 385              		.loc 1 112 16 view .LVU99
 386 007c 8020     		movs	r0, #128
 387 007e 4001     		lsls	r0, r0, #5
 388 0080 2043     		orrs	r0, r4
 389 0082 1860     		str	r0, [r3]
 113:Src/main.c    ****   GPIOC->MODER |= 1 << 14;  
 390              		.loc 1 113 3 is_stmt 1 view .LVU100
 113:Src/main.c    ****   GPIOC->MODER |= 1 << 14;  
 391              		.loc 1 113 8 is_stmt 0 view .LVU101
 392 0084 1868     		ldr	r0, [r3]
 113:Src/main.c    ****   GPIOC->MODER |= 1 << 14;  
 393              		.loc 1 113 16 view .LVU102
 394 0086 3C4D     		ldr	r5, .L22+32
 395 0088 2840     		ands	r0, r5
 396 008a 1860     		str	r0, [r3]
 114:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 397              		.loc 1 114 3 is_stmt 1 view .LVU103
 114:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 398              		.loc 1 114 8 is_stmt 0 view .LVU104
 399 008c 1868     		ldr	r0, [r3]
 114:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 400              		.loc 1 114 16 view .LVU105
 401 008e 0143     		orrs	r1, r0
 402 0090 1960     		str	r1, [r3]
 115:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 403              		.loc 1 115 3 is_stmt 1 view .LVU106
 115:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 404              		.loc 1 115 8 is_stmt 0 view .LVU107
 405 0092 1968     		ldr	r1, [r3]
 115:Src/main.c    ****   GPIOC->MODER |= 1 << 16;
 406              		.loc 1 115 16 view .LVU108
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 14


 407 0094 3948     		ldr	r0, .L22+36
 408 0096 0140     		ands	r1, r0
 409 0098 1960     		str	r1, [r3]
 116:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 410              		.loc 1 116 3 is_stmt 1 view .LVU109
 116:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 411              		.loc 1 116 8 is_stmt 0 view .LVU110
 412 009a 1C68     		ldr	r4, [r3]
 116:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 413              		.loc 1 116 16 view .LVU111
 414 009c 8021     		movs	r1, #128
 415 009e 4902     		lsls	r1, r1, #9
 416 00a0 2143     		orrs	r1, r4
 417 00a2 1960     		str	r1, [r3]
 117:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 418              		.loc 1 117 3 is_stmt 1 view .LVU112
 117:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 419              		.loc 1 117 8 is_stmt 0 view .LVU113
 420 00a4 1C68     		ldr	r4, [r3]
 117:Src/main.c    ****   GPIOC->MODER |= 1 << 18;
 421              		.loc 1 117 16 view .LVU114
 422 00a6 3649     		ldr	r1, .L22+40
 423 00a8 0C40     		ands	r4, r1
 424 00aa 1C60     		str	r4, [r3]
 118:Src/main.c    **** 
 425              		.loc 1 118 3 is_stmt 1 view .LVU115
 118:Src/main.c    **** 
 426              		.loc 1 118 8 is_stmt 0 view .LVU116
 427 00ac 1C68     		ldr	r4, [r3]
 118:Src/main.c    **** 
 428              		.loc 1 118 16 view .LVU117
 429 00ae 2243     		orrs	r2, r4
 430 00b0 1A60     		str	r2, [r3]
 121:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 431              		.loc 1 121 3 is_stmt 1 view .LVU118
 121:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 432              		.loc 1 121 8 is_stmt 0 view .LVU119
 433 00b2 5A68     		ldr	r2, [r3, #4]
 121:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 434              		.loc 1 121 17 view .LVU120
 435 00b4 4026     		movs	r6, #64
 436 00b6 B243     		bics	r2, r6
 437 00b8 5A60     		str	r2, [r3, #4]
 122:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 438              		.loc 1 122 3 is_stmt 1 view .LVU121
 122:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 439              		.loc 1 122 8 is_stmt 0 view .LVU122
 440 00ba 5A68     		ldr	r2, [r3, #4]
 122:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 441              		.loc 1 122 17 view .LVU123
 442 00bc 8024     		movs	r4, #128
 443 00be A046     		mov	r8, r4
 444 00c0 A243     		bics	r2, r4
 445 00c2 5A60     		str	r2, [r3, #4]
 123:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 446              		.loc 1 123 3 is_stmt 1 view .LVU124
 123:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 15


 447              		.loc 1 123 8 is_stmt 0 view .LVU125
 448 00c4 5A68     		ldr	r2, [r3, #4]
 123:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 449              		.loc 1 123 17 view .LVU126
 450 00c6 2F4C     		ldr	r4, .L22+44
 451 00c8 2240     		ands	r2, r4
 452 00ca 5A60     		str	r2, [r3, #4]
 124:Src/main.c    **** 
 453              		.loc 1 124 3 is_stmt 1 view .LVU127
 124:Src/main.c    **** 
 454              		.loc 1 124 8 is_stmt 0 view .LVU128
 455 00cc 5A68     		ldr	r2, [r3, #4]
 124:Src/main.c    **** 
 456              		.loc 1 124 17 view .LVU129
 457 00ce 2E4C     		ldr	r4, .L22+48
 458 00d0 2240     		ands	r2, r4
 459 00d2 5A60     		str	r2, [r3, #4]
 127:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
 460              		.loc 1 127 3 is_stmt 1 view .LVU130
 127:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
 461              		.loc 1 127 8 is_stmt 0 view .LVU131
 462 00d4 9A68     		ldr	r2, [r3, #8]
 127:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 14);
 463              		.loc 1 127 18 view .LVU132
 464 00d6 3A40     		ands	r2, r7
 465 00d8 9A60     		str	r2, [r3, #8]
 128:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 16);
 466              		.loc 1 128 3 is_stmt 1 view .LVU133
 128:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 16);
 467              		.loc 1 128 8 is_stmt 0 view .LVU134
 468 00da 9A68     		ldr	r2, [r3, #8]
 128:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 16);
 469              		.loc 1 128 18 view .LVU135
 470 00dc 2A40     		ands	r2, r5
 471 00de 9A60     		str	r2, [r3, #8]
 129:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 18);
 472              		.loc 1 129 3 is_stmt 1 view .LVU136
 129:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 18);
 473              		.loc 1 129 8 is_stmt 0 view .LVU137
 474 00e0 9A68     		ldr	r2, [r3, #8]
 129:Src/main.c    ****   GPIOC->OSPEEDR &= ~(3 << 18);
 475              		.loc 1 129 18 view .LVU138
 476 00e2 0240     		ands	r2, r0
 477 00e4 9A60     		str	r2, [r3, #8]
 130:Src/main.c    **** 
 478              		.loc 1 130 3 is_stmt 1 view .LVU139
 130:Src/main.c    **** 
 479              		.loc 1 130 8 is_stmt 0 view .LVU140
 480 00e6 9A68     		ldr	r2, [r3, #8]
 130:Src/main.c    **** 
 481              		.loc 1 130 18 view .LVU141
 482 00e8 0A40     		ands	r2, r1
 483 00ea 9A60     		str	r2, [r3, #8]
 133:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 484              		.loc 1 133 3 is_stmt 1 view .LVU142
 133:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 485              		.loc 1 133 8 is_stmt 0 view .LVU143
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 16


 486 00ec DA68     		ldr	r2, [r3, #12]
 133:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 487              		.loc 1 133 16 view .LVU144
 488 00ee 3A40     		ands	r2, r7
 489 00f0 DA60     		str	r2, [r3, #12]
 134:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 490              		.loc 1 134 3 is_stmt 1 view .LVU145
 134:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 491              		.loc 1 134 8 is_stmt 0 view .LVU146
 492 00f2 DA68     		ldr	r2, [r3, #12]
 134:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 493              		.loc 1 134 16 view .LVU147
 494 00f4 2A40     		ands	r2, r5
 495 00f6 DA60     		str	r2, [r3, #12]
 135:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 496              		.loc 1 135 3 is_stmt 1 view .LVU148
 135:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 497              		.loc 1 135 8 is_stmt 0 view .LVU149
 498 00f8 DA68     		ldr	r2, [r3, #12]
 135:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 499              		.loc 1 135 16 view .LVU150
 500 00fa 0240     		ands	r2, r0
 501 00fc DA60     		str	r2, [r3, #12]
 136:Src/main.c    **** 
 502              		.loc 1 136 3 is_stmt 1 view .LVU151
 136:Src/main.c    **** 
 503              		.loc 1 136 8 is_stmt 0 view .LVU152
 504 00fe DA68     		ldr	r2, [r3, #12]
 136:Src/main.c    **** 
 505              		.loc 1 136 16 view .LVU153
 506 0100 0A40     		ands	r2, r1
 507 0102 DA60     		str	r2, [r3, #12]
 139:Src/main.c    ****   GPIOC->ODR |= (1 << 7);
 508              		.loc 1 139 3 is_stmt 1 view .LVU154
 139:Src/main.c    ****   GPIOC->ODR |= (1 << 7);
 509              		.loc 1 139 8 is_stmt 0 view .LVU155
 510 0104 5A69     		ldr	r2, [r3, #20]
 139:Src/main.c    ****   GPIOC->ODR |= (1 << 7);
 511              		.loc 1 139 14 view .LVU156
 512 0106 3243     		orrs	r2, r6
 513 0108 5A61     		str	r2, [r3, #20]
 140:Src/main.c    ****   GPIOC->ODR |= (1 << 8);
 514              		.loc 1 140 3 is_stmt 1 view .LVU157
 140:Src/main.c    ****   GPIOC->ODR |= (1 << 8);
 515              		.loc 1 140 8 is_stmt 0 view .LVU158
 516 010a 5A69     		ldr	r2, [r3, #20]
 140:Src/main.c    ****   GPIOC->ODR |= (1 << 8);
 517              		.loc 1 140 14 view .LVU159
 518 010c 4146     		mov	r1, r8
 519 010e 0A43     		orrs	r2, r1
 520 0110 5A61     		str	r2, [r3, #20]
 141:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
 521              		.loc 1 141 3 is_stmt 1 view .LVU160
 141:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
 522              		.loc 1 141 8 is_stmt 0 view .LVU161
 523 0112 5969     		ldr	r1, [r3, #20]
 141:Src/main.c    ****   GPIOC->ODR |= (1 << 9);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 17


 524              		.loc 1 141 14 view .LVU162
 525 0114 8022     		movs	r2, #128
 526 0116 5200     		lsls	r2, r2, #1
 527 0118 0A43     		orrs	r2, r1
 528 011a 5A61     		str	r2, [r3, #20]
 142:Src/main.c    **** 
 529              		.loc 1 142 3 is_stmt 1 view .LVU163
 142:Src/main.c    **** 
 530              		.loc 1 142 8 is_stmt 0 view .LVU164
 531 011c 5969     		ldr	r1, [r3, #20]
 142:Src/main.c    **** 
 532              		.loc 1 142 14 view .LVU165
 533 011e 8022     		movs	r2, #128
 534 0120 9200     		lsls	r2, r2, #2
 535 0122 0A43     		orrs	r2, r1
 536 0124 5A61     		str	r2, [r3, #20]
 145:Src/main.c    ****   // Enable transmission and reception
 537              		.loc 1 145 3 is_stmt 1 view .LVU166
 145:Src/main.c    ****   // Enable transmission and reception
 538              		.loc 1 145 17 is_stmt 0 view .LVU167
 539 0126 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 540              	.LVL19:
 145:Src/main.c    ****   // Enable transmission and reception
 541              		.loc 1 145 39 discriminator 1 view .LVU168
 542 012a E121     		movs	r1, #225
 543 012c 4902     		lsls	r1, r1, #9
 544 012e FFF7FEFF 		bl	__aeabi_uidiv
 545              	.LVL20:
 145:Src/main.c    ****   // Enable transmission and reception
 546              		.loc 1 145 15 discriminator 1 view .LVU169
 547 0132 164B     		ldr	r3, .L22+52
 548 0134 D860     		str	r0, [r3, #12]
 147:Src/main.c    ****   // Enable USART3
 549              		.loc 1 147 3 is_stmt 1 view .LVU170
 147:Src/main.c    ****   // Enable USART3
 550              		.loc 1 147 9 is_stmt 0 view .LVU171
 551 0136 1A68     		ldr	r2, [r3]
 147:Src/main.c    ****   // Enable USART3
 552              		.loc 1 147 15 view .LVU172
 553 0138 0C21     		movs	r1, #12
 554 013a 0A43     		orrs	r2, r1
 555 013c 1A60     		str	r2, [r3]
 149:Src/main.c    **** 
 556              		.loc 1 149 3 is_stmt 1 view .LVU173
 149:Src/main.c    **** 
 557              		.loc 1 149 9 is_stmt 0 view .LVU174
 558 013e 1A68     		ldr	r2, [r3]
 149:Src/main.c    **** 
 559              		.loc 1 149 15 view .LVU175
 560 0140 0B39     		subs	r1, r1, #11
 561 0142 0A43     		orrs	r2, r1
 562 0144 1A60     		str	r2, [r3]
 563              	.L19:
 162:Src/main.c    **** 
 564              		.loc 1 162 5 is_stmt 1 view .LVU176
 160:Src/main.c    ****     {
 565              		.loc 1 160 12 discriminator 1 view .LVU177
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 18


 160:Src/main.c    ****     {
 566              		.loc 1 160 21 is_stmt 0 discriminator 1 view .LVU178
 567 0146 114B     		ldr	r3, .L22+52
 568 0148 DB69     		ldr	r3, [r3, #28]
 160:Src/main.c    ****     {
 569              		.loc 1 160 12 discriminator 1 view .LVU179
 570 014a 9B06     		lsls	r3, r3, #26
 571 014c FBD5     		bpl	.L19
 162:Src/main.c    **** 
 572              		.loc 1 162 6 is_stmt 1 view .LVU180
 164:Src/main.c    **** 
 573              		.loc 1 164 5 view .LVU181
 574 014e 1048     		ldr	r0, .L22+56
 575 0150 FFF7FEFF 		bl	transmit_string
 576              	.LVL21:
 151:Src/main.c    ****   {
 577              		.loc 1 151 8 view .LVU182
 160:Src/main.c    ****     {
 578              		.loc 1 160 11 is_stmt 0 view .LVU183
 579 0154 F7E7     		b	.L19
 580              	.L23:
 581 0156 C046     		.align	2
 582              	.L22:
 583 0158 00100240 		.word	1073876992
 584 015c 00040048 		.word	1207960576
 585 0160 FFFFCFFF 		.word	-3145729
 586 0164 FFFF3FFF 		.word	-12582913
 587 0168 FFF0FFFF 		.word	-3841
 588 016c FF0FFFFF 		.word	-61441
 589 0170 00080048 		.word	1207961600
 590 0174 FFCFFFFF 		.word	-12289
 591 0178 FF3FFFFF 		.word	-49153
 592 017c FFFFFCFF 		.word	-196609
 593 0180 FFFFF3FF 		.word	-786433
 594 0184 FFFEFFFF 		.word	-257
 595 0188 FFFDFFFF 		.word	-513
 596 018c 00480040 		.word	1073760256
 597 0190 00000000 		.word	.LC2
 598              		.cfi_endproc
 599              	.LFE42:
 601              		.text
 602              	.Letext0:
 603              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 604              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 605              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 606              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 607              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 608              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:19     .text.send_char:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:25     .text.send_char:00000000 send_char
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:53     .text.send_char:00000010 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:58     .text.transmit_string:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:64     .text.transmit_string:00000000 transmit_string
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:114    .text._Error_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:120    .text._Error_Handler:00000000 _Error_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:138    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:143    .text.SystemClock_Config:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:149    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:252    .text.SystemClock_Config:0000006c $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:257    .rodata.main.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:261    .text.main:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:267    .text.main:00000000 main
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccvsOkto.s:583    .text.main:00000158 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
