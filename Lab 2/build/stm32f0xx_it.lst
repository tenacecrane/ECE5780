ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/stm32f0xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB40:
   1:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_it.c **** /**
   3:Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Src/stm32f0xx_it.c ****   * @attention
   8:Src/stm32f0xx_it.c ****   *
   9:Src/stm32f0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f0xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f0xx_it.c ****   *
  12:Src/stm32f0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f0xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f0xx_it.c ****   *
  17:Src/stm32f0xx_it.c ****   ******************************************************************************
  18:Src/stm32f0xx_it.c ****   */
  19:Src/stm32f0xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f0xx_it.c **** 
  21:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f0xx_it.c **** #include "main.h"
  23:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  24:Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f0xx_it.c **** 
  28:Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f0xx_it.c **** 
  31:Src/stm32f0xx_it.c **** /* USER CODE END TD */
  32:Src/stm32f0xx_it.c **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s 			page 2


  33:Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f0xx_it.c ****  
  36:Src/stm32f0xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f0xx_it.c **** 
  38:Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f0xx_it.c **** 
  41:Src/stm32f0xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f0xx_it.c **** 
  43:Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f0xx_it.c **** 
  46:Src/stm32f0xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f0xx_it.c **** 
  48:Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f0xx_it.c **** 
  51:Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f0xx_it.c **** 
  53:Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f0xx_it.c **** 
  56:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f0xx_it.c **** 
  58:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f0xx_it.c **** 
  60:Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  61:Src/stm32f0xx_it.c **** 
  62:Src/stm32f0xx_it.c **** /* USER CODE END EV */
  63:Src/stm32f0xx_it.c **** 
  64:Src/stm32f0xx_it.c **** /******************************************************************************/
  65:Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */ 
  66:Src/stm32f0xx_it.c **** /******************************************************************************/
  67:Src/stm32f0xx_it.c **** /**
  68:Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Src/stm32f0xx_it.c ****   */
  70:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  71:Src/stm32f0xx_it.c **** {
  27              		.loc 1 71 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  72:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Src/stm32f0xx_it.c **** 
  74:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Src/stm32f0xx_it.c **** 
  77:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  78:Src/stm32f0xx_it.c **** }
  32              		.loc 1 78 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE40:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s 			page 3


  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  45              	HardFault_Handler:
  46              	.LFB41:
  79:Src/stm32f0xx_it.c **** 
  80:Src/stm32f0xx_it.c **** /**
  81:Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  82:Src/stm32f0xx_it.c ****   */
  83:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  84:Src/stm32f0xx_it.c **** {
  47              		.loc 1 84 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  85:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  86:Src/stm32f0xx_it.c **** 
  87:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  88:Src/stm32f0xx_it.c ****   while (1)
  54              		.loc 1 88 3 view .LVU3
  89:Src/stm32f0xx_it.c ****   {
  90:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  91:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  92:Src/stm32f0xx_it.c ****   }
  55              		.loc 1 92 3 view .LVU4
  88:Src/stm32f0xx_it.c ****   {
  56              		.loc 1 88 9 view .LVU5
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE41:
  61              		.section	.text.SVC_Handler,"ax",%progbits
  62              		.align	1
  63              		.global	SVC_Handler
  64              		.syntax unified
  65              		.code	16
  66              		.thumb_func
  68              	SVC_Handler:
  69              	.LFB42:
  93:Src/stm32f0xx_it.c **** }
  94:Src/stm32f0xx_it.c **** 
  95:Src/stm32f0xx_it.c **** /**
  96:Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
  97:Src/stm32f0xx_it.c ****   */
  98:Src/stm32f0xx_it.c **** void SVC_Handler(void)
  99:Src/stm32f0xx_it.c **** {
  70              		.loc 1 99 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
 100:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 101:Src/stm32f0xx_it.c **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s 			page 4


 102:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 103:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 104:Src/stm32f0xx_it.c **** 
 105:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 106:Src/stm32f0xx_it.c **** }
  75              		.loc 1 106 1 view .LVU7
  76              		@ sp needed
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE42:
  81              		.section	.text.PendSV_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	PendSV_Handler
  84              		.syntax unified
  85              		.code	16
  86              		.thumb_func
  88              	PendSV_Handler:
  89              	.LFB43:
 107:Src/stm32f0xx_it.c **** 
 108:Src/stm32f0xx_it.c **** /**
 109:Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 110:Src/stm32f0xx_it.c ****   */
 111:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 112:Src/stm32f0xx_it.c **** {
  90              		.loc 1 112 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 113:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 114:Src/stm32f0xx_it.c **** 
 115:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 116:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 117:Src/stm32f0xx_it.c **** 
 118:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 119:Src/stm32f0xx_it.c **** }
  95              		.loc 1 119 1 view .LVU9
  96              		@ sp needed
  97 0000 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE43:
 101              		.global	__aeabi_idivmod
 102              		.section	.text.SysTick_Handler,"ax",%progbits
 103              		.align	1
 104              		.global	SysTick_Handler
 105              		.syntax unified
 106              		.code	16
 107              		.thumb_func
 109              	SysTick_Handler:
 110              	.LFB44:
 120:Src/stm32f0xx_it.c **** 
 121:Src/stm32f0xx_it.c **** /**
 122:Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
 123:Src/stm32f0xx_it.c ****   */
 124:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 125:Src/stm32f0xx_it.c **** {
 111              		.loc 1 125 1 view -0
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s 			page 5


 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115 0000 10B5     		push	{r4, lr}
 116              	.LCFI0:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
 126:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 127:Src/stm32f0xx_it.c ****   volatile static int blueCounter;
 120              		.loc 1 127 3 view .LVU11
 128:Src/stm32f0xx_it.c ****   blueCounter++;
 121              		.loc 1 128 3 view .LVU12
 122              		.loc 1 128 14 is_stmt 0 view .LVU13
 123 0002 094B     		ldr	r3, .L8
 124 0004 1A68     		ldr	r2, [r3]
 125 0006 0132     		adds	r2, r2, #1
 126 0008 1A60     		str	r2, [r3]
 129:Src/stm32f0xx_it.c ****   if(blueCounter % 200 == 0) {
 127              		.loc 1 129 3 is_stmt 1 view .LVU14
 128              		.loc 1 129 18 is_stmt 0 view .LVU15
 129 000a 1868     		ldr	r0, [r3]
 130 000c C821     		movs	r1, #200
 131 000e FFF7FEFF 		bl	__aeabi_idivmod
 132              	.LVL0:
 133              		.loc 1 129 5 view .LVU16
 134 0012 0029     		cmp	r1, #0
 135 0014 04D1     		bne	.L7
 130:Src/stm32f0xx_it.c ****     GPIOC->ODR ^= (1 << 7); // Toggle PC7
 136              		.loc 1 130 5 is_stmt 1 view .LVU17
 137              		.loc 1 130 10 is_stmt 0 view .LVU18
 138 0016 054A     		ldr	r2, .L8+4
 139 0018 5369     		ldr	r3, [r2, #20]
 140              		.loc 1 130 16 view .LVU19
 141 001a 8031     		adds	r1, r1, #128
 142 001c 4B40     		eors	r3, r1
 143 001e 5361     		str	r3, [r2, #20]
 144              	.L7:
 131:Src/stm32f0xx_it.c ****   }
 132:Src/stm32f0xx_it.c **** 
 133:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 134:Src/stm32f0xx_it.c ****   HAL_IncTick();
 145              		.loc 1 134 3 is_stmt 1 view .LVU20
 146 0020 FFF7FEFF 		bl	HAL_IncTick
 147              	.LVL1:
 135:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 136:Src/stm32f0xx_it.c **** 
 137:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 138:Src/stm32f0xx_it.c **** }
 148              		.loc 1 138 1 is_stmt 0 view .LVU21
 149              		@ sp needed
 150 0024 10BD     		pop	{r4, pc}
 151              	.L9:
 152 0026 C046     		.align	2
 153              	.L8:
 154 0028 00000000 		.word	blueCounter.0
 155 002c 00080048 		.word	1207961600
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s 			page 6


 156              		.cfi_endproc
 157              	.LFE44:
 159              		.section	.bss.blueCounter.0,"aw",%nobits
 160              		.align	2
 163              	blueCounter.0:
 164 0000 00000000 		.space	4
 165              		.text
 166              	.Letext0:
 167              		.file 2 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 168              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 169              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 170              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:19     .text.NMI_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:25     .text.NMI_Handler:00000000 NMI_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:39     .text.HardFault_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:62     .text.SVC_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:68     .text.SVC_Handler:00000000 SVC_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:82     .text.PendSV_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:88     .text.PendSV_Handler:00000000 PendSV_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:103    .text.SysTick_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:109    .text.SysTick_Handler:00000000 SysTick_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:154    .text.SysTick_Handler:00000028 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:163    .bss.blueCounter.0:00000000 blueCounter.0
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccYBYL9H.s:160    .bss.blueCounter.0:00000000 $d

UNDEFINED SYMBOLS
__aeabi_idivmod
HAL_IncTick
