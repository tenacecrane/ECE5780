ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * File Name          : main.c
   5:Src/main.c    ****   * Description        : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  41:Src/main.c    **** #include "main.h"
  42:Src/main.c    **** #include "stm32f0xx_hal.h"
  43:Src/main.c    **** #include <stm32f072xb.h>
  44:Src/main.c    **** void _Error_Handler(char * file, int line);
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** int main(void)
  70:Src/main.c    **** {
  71:Src/main.c    ****   SystemClock_Config();
  72:Src/main.c    ****   // Enable and GPOIC
  73:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  74:Src/main.c    **** 
  75:Src/main.c    ****   // Enable LED's 6-9
  76:Src/main.c    ****   // Clear the bits for PC6-9
  77:Src/main.c    ****   GPIOC->MODER &= ~(3 << 12);
  78:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
  79:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
  81:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
  82:Src/main.c    ****   GPIOC->MODER |= (1 << 12);
  83:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
  84:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
  85:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
  86:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
  87:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
  88:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 3


  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
  91:Src/main.c    ****   // Set PC6-9 to Low Speed
  92:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 12);
  93:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
  94:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
  95:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
  96:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
  97:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 12);
  98:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 101:Src/main.c    **** 
 102:Src/main.c    ****   // Part 1
 103:Src/main.c    ****   // // Configure PC0 to analog mode, no pull-up/down resistors
 104:Src/main.c    ****   // GPIOC->MODER |= (3 << 0);
 105:Src/main.c    ****   // GPIOC->PUPDR &= ~(3 << 0);
 106:Src/main.c    **** 
 107:Src/main.c    ****   // // Enable the ADC clock
 108:Src/main.c    ****   // RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 109:Src/main.c    **** 
 110:Src/main.c    ****   // // Set the ADC to 8-bit
 111:Src/main.c    ****   // ADC1->CFGR1 &= ~(3 << 3);
 112:Src/main.c    ****   // ADC1->CFGR1 |= (2 << 3);
 113:Src/main.c    **** 
 114:Src/main.c    ****   // // Set continuous conversion mode
 115:Src/main.c    ****   // ADC1->CFGR1 |= (1 << 13);
 116:Src/main.c    **** 
 117:Src/main.c    ****   // // Hardware trigger disabled
 118:Src/main.c    ****   // ADC1->CFGR1 &= ~(1 << 0);
 119:Src/main.c    **** 
 120:Src/main.c    ****   // // PC0 is input channel ADC_IN10
 121:Src/main.c    ****   // ADC1->CHSELR |= (1 << 10);
 122:Src/main.c    **** 
 123:Src/main.c    ****   // // Begin the calibration
 124:Src/main.c    ****   // ADC1->ISR |= (1 << 31); // Set the ADRDY bit to 1
 125:Src/main.c    ****   // ADC1->CR |= (1 << 0); // Set the ADEN bit to 1
 126:Src/main.c    **** 
 127:Src/main.c    ****   // // Wait for calibration to finish
 128:Src/main.c    ****   // while ((ADC1->ISR & (1 << 0)) == 0) {
 129:Src/main.c    ****   //   // Wait for the ADRDY bit to be 1
 130:Src/main.c    ****   // }
 131:Src/main.c    **** 
 132:Src/main.c    ****   // // Start the ADC
 133:Src/main.c    ****   // ADC1->CR |= (1 << 2);
 134:Src/main.c    **** 
 135:Src/main.c    ****   // while(1){
 136:Src/main.c    ****   //   // Read the values of the ADC and turn on and off LEDs based on the value
 137:Src/main.c    ****   //   // Using a 100k potentiometer hooked up to PC0, operating in 8-bit mode
 138:Src/main.c    ****   //   // gives us a value between 0-255.
 139:Src/main.c    **** 
 140:Src/main.c    ****   //   if(ADC1->DR < 64){
 141:Src/main.c    ****   //     GPIOC->ODR |= (1 << 6);
 142:Src/main.c    ****   //     GPIOC->ODR &= ~(1 << 7);
 143:Src/main.c    ****   //     GPIOC->ODR &= ~(1 << 8);
 144:Src/main.c    ****   //     GPIOC->ODR &= ~(1 << 9);
 145:Src/main.c    ****   //   }
 146:Src/main.c    ****   //   else if(ADC1->DR < 128){
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 4


 147:Src/main.c    ****   //     GPIOC->ODR |= (1 << 6);
 148:Src/main.c    ****   //     GPIOC->ODR |= (1 << 7);
 149:Src/main.c    ****   //     GPIOC->ODR &= ~(1 << 8);
 150:Src/main.c    ****   //     GPIOC->ODR &= ~(1 << 9);
 151:Src/main.c    ****   //   }
 152:Src/main.c    ****   //   else if(ADC1->DR < 192){
 153:Src/main.c    ****   //     GPIOC->ODR |= (1 << 6);
 154:Src/main.c    ****   //     GPIOC->ODR |= (1 << 7);
 155:Src/main.c    ****   //     GPIOC->ODR |= (1 << 8);
 156:Src/main.c    ****   //     GPIOC->ODR &= ~(1 << 9);
 157:Src/main.c    ****   //   }
 158:Src/main.c    ****   //   else{
 159:Src/main.c    ****   //     GPIOC->ODR |= (1 << 6);
 160:Src/main.c    ****   //     GPIOC->ODR |= (1 << 7);
 161:Src/main.c    ****   //     GPIOC->ODR |= (1 << 8);
 162:Src/main.c    ****   //     GPIOC->ODR |= (1 << 9);
 163:Src/main.c    ****   //   }
 164:Src/main.c    ****   // }
 165:Src/main.c    ****   
 166:Src/main.c    ****   // Part 2
 167:Src/main.c    ****   // Set PA4 to analog mode, no pull-up/pull-down resistors
 168:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 169:Src/main.c    ****   GPIOA->MODER |= (3 << 8);
 170:Src/main.c    ****   GPIOA->PUPDR &= ~(3 << 8);
 171:Src/main.c    **** 
 172:Src/main.c    ****   // Set DAC to software trigger mode
 173:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_DACEN;
 174:Src/main.c    ****   DAC->CR |= (1 << 3);
 175:Src/main.c    **** 
 176:Src/main.c    ****   // Set DAC to 8-bit mode
 177:Src/main.c    ****   DAC->CR &= ~(1 << 12);
 178:Src/main.c    **** 
 179:Src/main.c    ****   // Enable the DAC
 180:Src/main.c    ****   DAC->CR |= (1 << 0);
 181:Src/main.c    **** 
 182:Src/main.c    **** // Square Wave: 8-bit, 32 samples/cycle
 183:Src/main.c    **** const uint8_t square_table[32] = {254,254,254,254,254,254,254,254,254,254,
 184:Src/main.c    **** 254,254,254,254,254,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
 185:Src/main.c    **** 
 186:Src/main.c    ****   // Write the sine wave to the DAC
 187:Src/main.c    ****   while(1){
 188:Src/main.c    ****     for(int i = 0; i < 32; i++){
 189:Src/main.c    ****       DAC->DHR8R1 = square_table[i];
 190:Src/main.c    ****       // Wait 1ms
 191:Src/main.c    ****       HAL_Delay(1);
 192:Src/main.c    ****     }
 193:Src/main.c    ****   }
 194:Src/main.c    **** 
 195:Src/main.c    **** 
 196:Src/main.c    **** 
 197:Src/main.c    **** 
 198:Src/main.c    **** 
 199:Src/main.c    **** 
 200:Src/main.c    **** 
 201:Src/main.c    **** 
 202:Src/main.c    **** 
 203:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 5


 204:Src/main.c    **** 
 205:Src/main.c    **** 
 206:Src/main.c    **** }
 207:Src/main.c    **** 
 208:Src/main.c    **** /** System Clock Configuration
 209:Src/main.c    **** */
 210:Src/main.c    **** void SystemClock_Config(void)
 211:Src/main.c    **** {
 212:Src/main.c    **** 
 213:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 214:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 215:Src/main.c    **** 
 216:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 217:Src/main.c    ****     */
 218:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 219:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 220:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 221:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 222:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 223:Src/main.c    ****   {
 224:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 225:Src/main.c    ****   }
 226:Src/main.c    **** 
 227:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 228:Src/main.c    ****     */
 229:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 230:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 231:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 232:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 233:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 234:Src/main.c    **** 
 235:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 236:Src/main.c    ****   {
 237:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 238:Src/main.c    ****   }
 239:Src/main.c    **** 
 240:Src/main.c    ****     /**Configure the Systick interrupt time
 241:Src/main.c    ****     */
 242:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 243:Src/main.c    **** 
 244:Src/main.c    ****     /**Configure the Systick
 245:Src/main.c    ****     */
 246:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 247:Src/main.c    **** 
 248:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 249:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 250:Src/main.c    **** }
 251:Src/main.c    **** 
 252:Src/main.c    **** /* USER CODE BEGIN 4 */
 253:Src/main.c    **** 
 254:Src/main.c    **** /* USER CODE END 4 */
 255:Src/main.c    **** 
 256:Src/main.c    **** /**
 257:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 258:Src/main.c    ****   * @param  None
 259:Src/main.c    ****   * @retval None
 260:Src/main.c    ****   */
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 6


 261:Src/main.c    **** void _Error_Handler(char * file, int line)
 262:Src/main.c    **** {
  27              		.loc 1 262 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 263:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 264:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 265:Src/main.c    ****   while(1)
  35              		.loc 1 265 3 view .LVU1
 266:Src/main.c    ****   {
 267:Src/main.c    ****   }
  36              		.loc 1 267 3 view .LVU2
 265:Src/main.c    ****   {
  37              		.loc 1 265 8 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  43              		.align	2
  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 211:Src/main.c    **** 
  56              		.loc 1 211 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 213:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 213 3 view .LVU5
 214:Src/main.c    **** 
  68              		.loc 1 214 3 view .LVU6
 218:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 218 3 view .LVU7
 218:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 218 36 is_stmt 0 view .LVU8
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 7


  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 219:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 219 3 is_stmt 1 view .LVU9
 219:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 219 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 220:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 220 3 is_stmt 1 view .LVU11
 220:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 220 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
 221:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 221 3 is_stmt 1 view .LVU13
 221:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 221 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
 222:Src/main.c    ****   {
  85              		.loc 1 222 3 is_stmt 1 view .LVU15
 222:Src/main.c    ****   {
  86              		.loc 1 222 7 is_stmt 0 view .LVU16
  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL1:
 222:Src/main.c    ****   {
  90              		.loc 1 222 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
 229:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  93              		.loc 1 229 3 is_stmt 1 view .LVU18
 229:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  94              		.loc 1 229 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 231:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 231 3 is_stmt 1 view .LVU20
 231:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 231 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 232:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 232 3 is_stmt 1 view .LVU22
 232:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 232 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 233:Src/main.c    **** 
 104              		.loc 1 233 3 is_stmt 1 view .LVU24
 233:Src/main.c    **** 
 105              		.loc 1 233 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
 235:Src/main.c    ****   {
 107              		.loc 1 235 3 is_stmt 1 view .LVU26
 235:Src/main.c    ****   {
 108              		.loc 1 235 7 is_stmt 0 view .LVU27
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 8


 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
 235:Src/main.c    ****   {
 113              		.loc 1 235 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 242:Src/main.c    **** 
 116              		.loc 1 242 3 is_stmt 1 view .LVU29
 242:Src/main.c    **** 
 117              		.loc 1 242 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
 242:Src/main.c    **** 
 120              		.loc 1 242 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 246:Src/main.c    **** 
 127              		.loc 1 246 3 is_stmt 1 view .LVU32
 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 249:Src/main.c    **** }
 131              		.loc 1 249 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
 134 0050 0021     		movs	r1, #0
 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 250:Src/main.c    **** 
 138              		.loc 1 250 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 224:Src/main.c    ****   }
 143              		.loc 1 224 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e E021     		movs	r1, #224
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 237:Src/main.c    ****   }
 149              		.loc 1 237 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
 151 0066 ED21     		movs	r1, #237
 152 0068 FFF7FEFF 		bl	_Error_Handler
 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 9


 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  70:Src/main.c    ****   SystemClock_Config();
 170              		.loc 1 70 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 32
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 20
 177              		.cfi_offset 4, -20
 178              		.cfi_offset 5, -16
 179              		.cfi_offset 6, -12
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 89B0     		sub	sp, sp, #36
 183              	.LCFI3:
 184              		.cfi_def_cfa_offset 56
  71:Src/main.c    ****   // Enable and GPOIC
 185              		.loc 1 71 3 view .LVU38
 186 0004 FFF7FEFF 		bl	SystemClock_Config
 187              	.LVL10:
  73:Src/main.c    **** 
 188              		.loc 1 73 3 view .LVU39
  73:Src/main.c    **** 
 189              		.loc 1 73 6 is_stmt 0 view .LVU40
 190 0008 444A     		ldr	r2, .L14
 191 000a 5169     		ldr	r1, [r2, #20]
  73:Src/main.c    **** 
 192              		.loc 1 73 15 view .LVU41
 193 000c 8023     		movs	r3, #128
 194 000e 1B03     		lsls	r3, r3, #12
 195 0010 0B43     		orrs	r3, r1
 196 0012 5361     		str	r3, [r2, #20]
  77:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 197              		.loc 1 77 3 is_stmt 1 view .LVU42
  77:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 198              		.loc 1 77 8 is_stmt 0 view .LVU43
 199 0014 424B     		ldr	r3, .L14+4
 200 0016 1968     		ldr	r1, [r3]
  77:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 201              		.loc 1 77 16 view .LVU44
 202 0018 424D     		ldr	r5, .L14+8
 203 001a 2940     		ands	r1, r5
 204 001c 1960     		str	r1, [r3]
  78:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 205              		.loc 1 78 3 is_stmt 1 view .LVU45
  78:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 10


 206              		.loc 1 78 8 is_stmt 0 view .LVU46
 207 001e 1968     		ldr	r1, [r3]
  78:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 208              		.loc 1 78 16 view .LVU47
 209 0020 414F     		ldr	r7, .L14+12
 210 0022 3940     		ands	r1, r7
 211 0024 1960     		str	r1, [r3]
  79:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 212              		.loc 1 79 3 is_stmt 1 view .LVU48
  79:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 213              		.loc 1 79 8 is_stmt 0 view .LVU49
 214 0026 1968     		ldr	r1, [r3]
  79:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 215              		.loc 1 79 16 view .LVU50
 216 0028 404C     		ldr	r4, .L14+16
 217 002a 2140     		ands	r1, r4
 218 002c 1960     		str	r1, [r3]
  80:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
 219              		.loc 1 80 3 is_stmt 1 view .LVU51
  80:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
 220              		.loc 1 80 8 is_stmt 0 view .LVU52
 221 002e 1968     		ldr	r1, [r3]
  80:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
 222              		.loc 1 80 16 view .LVU53
 223 0030 3F48     		ldr	r0, .L14+20
 224 0032 0140     		ands	r1, r0
 225 0034 1960     		str	r1, [r3]
  82:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
 226              		.loc 1 82 3 is_stmt 1 view .LVU54
  82:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
 227              		.loc 1 82 8 is_stmt 0 view .LVU55
 228 0036 1E68     		ldr	r6, [r3]
  82:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
 229              		.loc 1 82 16 view .LVU56
 230 0038 8021     		movs	r1, #128
 231 003a 4901     		lsls	r1, r1, #5
 232 003c 3143     		orrs	r1, r6
 233 003e 1960     		str	r1, [r3]
  83:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
 234              		.loc 1 83 3 is_stmt 1 view .LVU57
  83:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
 235              		.loc 1 83 8 is_stmt 0 view .LVU58
 236 0040 1E68     		ldr	r6, [r3]
  83:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
 237              		.loc 1 83 16 view .LVU59
 238 0042 8021     		movs	r1, #128
 239 0044 C901     		lsls	r1, r1, #7
 240 0046 3143     		orrs	r1, r6
 241 0048 1960     		str	r1, [r3]
  84:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 242              		.loc 1 84 3 is_stmt 1 view .LVU60
  84:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 243              		.loc 1 84 8 is_stmt 0 view .LVU61
 244 004a 1E68     		ldr	r6, [r3]
  84:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 245              		.loc 1 84 16 view .LVU62
 246 004c 8021     		movs	r1, #128
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 11


 247 004e 4902     		lsls	r1, r1, #9
 248 0050 3143     		orrs	r1, r6
 249 0052 1960     		str	r1, [r3]
  85:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
 250              		.loc 1 85 3 is_stmt 1 view .LVU63
  85:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
 251              		.loc 1 85 8 is_stmt 0 view .LVU64
 252 0054 1E68     		ldr	r6, [r3]
  85:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
 253              		.loc 1 85 16 view .LVU65
 254 0056 8021     		movs	r1, #128
 255 0058 C902     		lsls	r1, r1, #11
 256 005a 3143     		orrs	r1, r6
 257 005c 1960     		str	r1, [r3]
  87:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 258              		.loc 1 87 3 is_stmt 1 view .LVU66
  87:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 259              		.loc 1 87 8 is_stmt 0 view .LVU67
 260 005e 5968     		ldr	r1, [r3, #4]
  87:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 261              		.loc 1 87 17 view .LVU68
 262 0060 4026     		movs	r6, #64
 263 0062 B143     		bics	r1, r6
 264 0064 5960     		str	r1, [r3, #4]
  88:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 265              		.loc 1 88 3 is_stmt 1 view .LVU69
  88:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 266              		.loc 1 88 8 is_stmt 0 view .LVU70
 267 0066 5968     		ldr	r1, [r3, #4]
  88:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 268              		.loc 1 88 17 view .LVU71
 269 0068 4036     		adds	r6, r6, #64
 270 006a B143     		bics	r1, r6
 271 006c 5960     		str	r1, [r3, #4]
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 272              		.loc 1 89 3 is_stmt 1 view .LVU72
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 273              		.loc 1 89 8 is_stmt 0 view .LVU73
 274 006e 5968     		ldr	r1, [r3, #4]
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 275              		.loc 1 89 17 view .LVU74
 276 0070 304E     		ldr	r6, .L14+24
 277 0072 3140     		ands	r1, r6
 278 0074 5960     		str	r1, [r3, #4]
  90:Src/main.c    ****   // Set PC6-9 to Low Speed
 279              		.loc 1 90 3 is_stmt 1 view .LVU75
  90:Src/main.c    ****   // Set PC6-9 to Low Speed
 280              		.loc 1 90 8 is_stmt 0 view .LVU76
 281 0076 5968     		ldr	r1, [r3, #4]
  90:Src/main.c    ****   // Set PC6-9 to Low Speed
 282              		.loc 1 90 17 view .LVU77
 283 0078 2F4E     		ldr	r6, .L14+28
 284 007a 3140     		ands	r1, r6
 285 007c 5960     		str	r1, [r3, #4]
  92:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
 286              		.loc 1 92 3 is_stmt 1 view .LVU78
  92:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 12


 287              		.loc 1 92 8 is_stmt 0 view .LVU79
 288 007e 9968     		ldr	r1, [r3, #8]
  92:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
 289              		.loc 1 92 18 view .LVU80
 290 0080 9960     		str	r1, [r3, #8]
  93:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
 291              		.loc 1 93 3 is_stmt 1 view .LVU81
  93:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
 292              		.loc 1 93 8 is_stmt 0 view .LVU82
 293 0082 9968     		ldr	r1, [r3, #8]
  93:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
 294              		.loc 1 93 18 view .LVU83
 295 0084 9960     		str	r1, [r3, #8]
  94:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 296              		.loc 1 94 3 is_stmt 1 view .LVU84
  94:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 297              		.loc 1 94 8 is_stmt 0 view .LVU85
 298 0086 9968     		ldr	r1, [r3, #8]
  94:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 299              		.loc 1 94 18 view .LVU86
 300 0088 9960     		str	r1, [r3, #8]
  95:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
 301              		.loc 1 95 3 is_stmt 1 view .LVU87
  95:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
 302              		.loc 1 95 8 is_stmt 0 view .LVU88
 303 008a 9968     		ldr	r1, [r3, #8]
  95:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
 304              		.loc 1 95 18 view .LVU89
 305 008c 9960     		str	r1, [r3, #8]
  97:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 306              		.loc 1 97 3 is_stmt 1 view .LVU90
  97:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 307              		.loc 1 97 8 is_stmt 0 view .LVU91
 308 008e D968     		ldr	r1, [r3, #12]
  97:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 309              		.loc 1 97 16 view .LVU92
 310 0090 2940     		ands	r1, r5
 311 0092 D960     		str	r1, [r3, #12]
  98:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 312              		.loc 1 98 3 is_stmt 1 view .LVU93
  98:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 313              		.loc 1 98 8 is_stmt 0 view .LVU94
 314 0094 D968     		ldr	r1, [r3, #12]
  98:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 315              		.loc 1 98 16 view .LVU95
 316 0096 3940     		ands	r1, r7
 317 0098 D960     		str	r1, [r3, #12]
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 318              		.loc 1 99 3 is_stmt 1 view .LVU96
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 319              		.loc 1 99 8 is_stmt 0 view .LVU97
 320 009a D968     		ldr	r1, [r3, #12]
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 321              		.loc 1 99 16 view .LVU98
 322 009c 2140     		ands	r1, r4
 323 009e D960     		str	r1, [r3, #12]
 100:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 13


 324              		.loc 1 100 3 is_stmt 1 view .LVU99
 100:Src/main.c    **** 
 325              		.loc 1 100 8 is_stmt 0 view .LVU100
 326 00a0 D968     		ldr	r1, [r3, #12]
 100:Src/main.c    **** 
 327              		.loc 1 100 16 view .LVU101
 328 00a2 0140     		ands	r1, r0
 329 00a4 D960     		str	r1, [r3, #12]
 168:Src/main.c    ****   GPIOA->MODER |= (3 << 8);
 330              		.loc 1 168 3 is_stmt 1 view .LVU102
 168:Src/main.c    ****   GPIOA->MODER |= (3 << 8);
 331              		.loc 1 168 6 is_stmt 0 view .LVU103
 332 00a6 5169     		ldr	r1, [r2, #20]
 168:Src/main.c    ****   GPIOA->MODER |= (3 << 8);
 333              		.loc 1 168 15 view .LVU104
 334 00a8 8023     		movs	r3, #128
 335 00aa 9B02     		lsls	r3, r3, #10
 336 00ac 0B43     		orrs	r3, r1
 337 00ae 5361     		str	r3, [r2, #20]
 169:Src/main.c    ****   GPIOA->PUPDR &= ~(3 << 8);
 338              		.loc 1 169 3 is_stmt 1 view .LVU105
 169:Src/main.c    ****   GPIOA->PUPDR &= ~(3 << 8);
 339              		.loc 1 169 8 is_stmt 0 view .LVU106
 340 00b0 9023     		movs	r3, #144
 341 00b2 DB05     		lsls	r3, r3, #23
 342 00b4 1868     		ldr	r0, [r3]
 169:Src/main.c    ****   GPIOA->PUPDR &= ~(3 << 8);
 343              		.loc 1 169 16 view .LVU107
 344 00b6 C021     		movs	r1, #192
 345 00b8 8900     		lsls	r1, r1, #2
 346 00ba 0143     		orrs	r1, r0
 347 00bc 1960     		str	r1, [r3]
 170:Src/main.c    **** 
 348              		.loc 1 170 3 is_stmt 1 view .LVU108
 170:Src/main.c    **** 
 349              		.loc 1 170 8 is_stmt 0 view .LVU109
 350 00be D968     		ldr	r1, [r3, #12]
 170:Src/main.c    **** 
 351              		.loc 1 170 16 view .LVU110
 352 00c0 1E48     		ldr	r0, .L14+32
 353 00c2 0140     		ands	r1, r0
 354 00c4 D960     		str	r1, [r3, #12]
 173:Src/main.c    ****   DAC->CR |= (1 << 3);
 355              		.loc 1 173 3 is_stmt 1 view .LVU111
 173:Src/main.c    ****   DAC->CR |= (1 << 3);
 356              		.loc 1 173 6 is_stmt 0 view .LVU112
 357 00c6 D169     		ldr	r1, [r2, #28]
 173:Src/main.c    ****   DAC->CR |= (1 << 3);
 358              		.loc 1 173 16 view .LVU113
 359 00c8 8023     		movs	r3, #128
 360 00ca 9B05     		lsls	r3, r3, #22
 361 00cc 0B43     		orrs	r3, r1
 362 00ce D361     		str	r3, [r2, #28]
 174:Src/main.c    **** 
 363              		.loc 1 174 3 is_stmt 1 view .LVU114
 174:Src/main.c    **** 
 364              		.loc 1 174 6 is_stmt 0 view .LVU115
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 14


 365 00d0 1B4B     		ldr	r3, .L14+36
 366 00d2 1A68     		ldr	r2, [r3]
 174:Src/main.c    **** 
 367              		.loc 1 174 11 view .LVU116
 368 00d4 0821     		movs	r1, #8
 369 00d6 0A43     		orrs	r2, r1
 370 00d8 1A60     		str	r2, [r3]
 177:Src/main.c    **** 
 371              		.loc 1 177 3 is_stmt 1 view .LVU117
 177:Src/main.c    **** 
 372              		.loc 1 177 6 is_stmt 0 view .LVU118
 373 00da 1A68     		ldr	r2, [r3]
 177:Src/main.c    **** 
 374              		.loc 1 177 11 view .LVU119
 375 00dc 1949     		ldr	r1, .L14+40
 376 00de 0A40     		ands	r2, r1
 377 00e0 1A60     		str	r2, [r3]
 180:Src/main.c    **** 
 378              		.loc 1 180 3 is_stmt 1 view .LVU120
 180:Src/main.c    **** 
 379              		.loc 1 180 6 is_stmt 0 view .LVU121
 380 00e2 1A68     		ldr	r2, [r3]
 180:Src/main.c    **** 
 381              		.loc 1 180 11 view .LVU122
 382 00e4 0121     		movs	r1, #1
 383 00e6 0A43     		orrs	r2, r1
 384 00e8 1A60     		str	r2, [r3]
 183:Src/main.c    **** 254,254,254,254,254,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
 385              		.loc 1 183 1 is_stmt 1 view .LVU123
 183:Src/main.c    **** 254,254,254,254,254,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
 386              		.loc 1 183 15 is_stmt 0 view .LVU124
 387 00ea 6946     		mov	r1, sp
 388 00ec 164A     		ldr	r2, .L14+44
 389 00ee 1300     		movs	r3, r2
 390 00f0 31CB     		ldmia	r3!, {r0, r4, r5}
 391 00f2 31C1     		stmia	r1!, {r0, r4, r5}
 392 00f4 1A00     		movs	r2, r3
 393 00f6 0B00     		movs	r3, r1
 394 00f8 13CA     		ldmia	r2!, {r0, r1, r4}
 395 00fa 13C3     		stmia	r3!, {r0, r1, r4}
 396 00fc 03CA     		ldmia	r2!, {r0, r1}
 397 00fe 03C3     		stmia	r3!, {r0, r1}
 398 0100 09E0     		b	.L13
 399              	.LVL11:
 400              	.L12:
 401              	.LBB2:
 189:Src/main.c    ****       // Wait 1ms
 402              		.loc 1 189 7 is_stmt 1 view .LVU125
 189:Src/main.c    ****       // Wait 1ms
 403              		.loc 1 189 33 is_stmt 0 view .LVU126
 404 0102 6B46     		mov	r3, sp
 405 0104 1A5D     		ldrb	r2, [r3, r4]
 189:Src/main.c    ****       // Wait 1ms
 406              		.loc 1 189 19 view .LVU127
 407 0106 0E4B     		ldr	r3, .L14+36
 408 0108 1A61     		str	r2, [r3, #16]
 191:Src/main.c    ****     }
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 15


 409              		.loc 1 191 7 is_stmt 1 view .LVU128
 410 010a 0120     		movs	r0, #1
 411 010c FFF7FEFF 		bl	HAL_Delay
 412              	.LVL12:
 188:Src/main.c    ****       DAC->DHR8R1 = square_table[i];
 413              		.loc 1 188 29 discriminator 3 view .LVU129
 414 0110 0134     		adds	r4, r4, #1
 415              	.LVL13:
 416              	.L11:
 188:Src/main.c    ****       DAC->DHR8R1 = square_table[i];
 417              		.loc 1 188 22 discriminator 1 view .LVU130
 418 0112 1F2C     		cmp	r4, #31
 419 0114 F5DD     		ble	.L12
 420              	.LVL14:
 421              	.L13:
 188:Src/main.c    ****       DAC->DHR8R1 = square_table[i];
 422              		.loc 1 188 22 is_stmt 0 discriminator 1 view .LVU131
 423              	.LBE2:
 187:Src/main.c    ****     for(int i = 0; i < 32; i++){
 424              		.loc 1 187 3 is_stmt 1 view .LVU132
 188:Src/main.c    ****       DAC->DHR8R1 = square_table[i];
 425              		.loc 1 188 5 view .LVU133
 426              	.LBB3:
 188:Src/main.c    ****       DAC->DHR8R1 = square_table[i];
 427              		.loc 1 188 9 view .LVU134
 188:Src/main.c    ****       DAC->DHR8R1 = square_table[i];
 428              		.loc 1 188 13 is_stmt 0 view .LVU135
 429 0116 0024     		movs	r4, #0
 188:Src/main.c    ****       DAC->DHR8R1 = square_table[i];
 430              		.loc 1 188 5 view .LVU136
 431 0118 FBE7     		b	.L11
 432              	.L15:
 433 011a C046     		.align	2
 434              	.L14:
 435 011c 00100240 		.word	1073876992
 436 0120 00080048 		.word	1207961600
 437 0124 FFCFFFFF 		.word	-12289
 438 0128 FF3FFFFF 		.word	-49153
 439 012c FFFFFCFF 		.word	-196609
 440 0130 FFFFF3FF 		.word	-786433
 441 0134 FFFEFFFF 		.word	-257
 442 0138 FFFDFFFF 		.word	-513
 443 013c FFFCFFFF 		.word	-769
 444 0140 00740040 		.word	1073771520
 445 0144 FFEFFFFF 		.word	-4097
 446 0148 00000000 		.word	.LANCHOR0
 447              	.LBE3:
 448              		.cfi_endproc
 449              	.LFE40:
 451              		.section	.rodata
 452              		.align	2
 453              		.set	.LANCHOR0,. + 0
 454              	.LC2:
 455 0000 FEFEFEFE 		.ascii	"\376\376\376\376\376\376\376\376\376\376\376\376\376"
 455      FEFEFEFE 
 455      FEFEFEFE 
 455      FE
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 16


 456 000d FEFEFE00 		.ascii	"\376\376\376\000\000\000\000\000\000\000\000\000\000"
 456      00000000 
 456      00000000 
 456      00
 457 001a 00000000 		.ascii	"\000\000\000\000\000\000"
 457      0000
 458              		.text
 459              	.Letext0:
 460              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 461              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 462              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 463              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 464              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 465              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 466              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s:19     .text._Error_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s:162    .text.main:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s:168    .text.main:00000000 main
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s:435    .text.main:0000011c $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//ccRiWdHW.s:452    .rodata:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Delay
