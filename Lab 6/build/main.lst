ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * File Name          : main.c
   5:Src/main.c    ****   * Description        : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 2


  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  41:Src/main.c    **** #include "main.h"
  42:Src/main.c    **** #include "stm32f0xx_hal.h"
  43:Src/main.c    **** #include <stm32f072xb.h>
  44:Src/main.c    **** void _Error_Handler(char * file, int line);
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** int main(void)
  70:Src/main.c    **** {
  71:Src/main.c    ****   SystemClock_Config();
  72:Src/main.c    **** 
  73:Src/main.c    ****     // Enable GPIOB and GPOIC
  74:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  75:Src/main.c    **** 
  76:Src/main.c    ****   // Enable LED's 6-9
  77:Src/main.c    ****   // Clear the bits for PC6-9
  78:Src/main.c    ****   GPIOC->MODER &= ~(3 << 12);
  79:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
  81:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
  82:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
  83:Src/main.c    ****   GPIOC->MODER |= (1 << 12);
  84:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
  85:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
  86:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
  87:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
  88:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 3


  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
  91:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
  92:Src/main.c    ****   // Set PC6-9 to Low Speed
  93:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 12);
  94:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
  95:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
  96:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
  97:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
  98:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 12);
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 101:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 102:Src/main.c    **** 
 103:Src/main.c    ****   // Configure PC0 to analog mode, no pull-up/down resistors
 104:Src/main.c    ****   GPIOC->MODER |= (3 << 0);
 105:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 0);
 106:Src/main.c    **** 
 107:Src/main.c    ****   // Enable the ADC clock
 108:Src/main.c    ****   RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 109:Src/main.c    **** 
 110:Src/main.c    ****   // Set the ADC to 8-bit
 111:Src/main.c    ****   ADC1->CFGR1 &= ~(3 << 3);
 112:Src/main.c    ****   ADC1->CFGR1 |= (2 << 3);
 113:Src/main.c    **** 
 114:Src/main.c    ****   // Set continuous conversion mode
 115:Src/main.c    ****   ADC1->CFGR1 |= (1 << 13);
 116:Src/main.c    **** 
 117:Src/main.c    ****   // Hardware trigger disabled
 118:Src/main.c    ****   ADC1->CFGR1 &= ~(1 << 0);
 119:Src/main.c    **** 
 120:Src/main.c    ****   // PC0 is input channel ADC_IN10
 121:Src/main.c    ****   ADC1->CHSELR |= (1 << 10);
 122:Src/main.c    **** 
 123:Src/main.c    ****   // Begin the calibration
 124:Src/main.c    ****   ADC1->ISR |= (1 << 31); // Set the ADRDY bit to 1
 125:Src/main.c    ****   ADC1->CR |= (1 << 0); // Set the ADEN bit to 1
 126:Src/main.c    **** 
 127:Src/main.c    ****   // Wait for calibration to finish
 128:Src/main.c    ****   while ((ADC1->ISR & (1 << 0)) == 0) {
 129:Src/main.c    ****     // Wait for the ADRDY bit to be 1
 130:Src/main.c    ****   }
 131:Src/main.c    **** 
 132:Src/main.c    ****   // Start the ADC
 133:Src/main.c    ****   ADC1->CR |= (1 << 2);
 134:Src/main.c    **** 
 135:Src/main.c    ****   while(1){
 136:Src/main.c    ****     // Read the values of the ADC and turn on and off LEDs based on the value
 137:Src/main.c    ****     // Using a 100k potentiometer hooked up to PC0, operating in 8-bit mode
 138:Src/main.c    ****     // gives us a value between 0-255.
 139:Src/main.c    **** 
 140:Src/main.c    ****     if(ADC1->DR < 64){
 141:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 142:Src/main.c    ****       GPIOC->ODR &= ~(1 << 7);
 143:Src/main.c    ****       GPIOC->ODR &= ~(1 << 8);
 144:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 145:Src/main.c    ****     }
 146:Src/main.c    ****     else if(ADC1->DR < 128){
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 4


 147:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 148:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 149:Src/main.c    ****       GPIOC->ODR &= ~(1 << 8);
 150:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 151:Src/main.c    ****     }
 152:Src/main.c    ****     else if(ADC1->DR < 192){
 153:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 154:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 155:Src/main.c    ****       GPIOC->ODR |= (1 << 8);
 156:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 157:Src/main.c    ****     }
 158:Src/main.c    ****     else{
 159:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 160:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 161:Src/main.c    ****       GPIOC->ODR |= (1 << 8);
 162:Src/main.c    ****       GPIOC->ODR |= (1 << 9);
 163:Src/main.c    ****     }
 164:Src/main.c    ****   }
 165:Src/main.c    **** 
 166:Src/main.c    **** 
 167:Src/main.c    **** 
 168:Src/main.c    **** 
 169:Src/main.c    **** 
 170:Src/main.c    **** 
 171:Src/main.c    **** 
 172:Src/main.c    **** 
 173:Src/main.c    **** 
 174:Src/main.c    **** 
 175:Src/main.c    **** }
 176:Src/main.c    **** 
 177:Src/main.c    **** /** System Clock Configuration
 178:Src/main.c    **** */
 179:Src/main.c    **** void SystemClock_Config(void)
 180:Src/main.c    **** {
 181:Src/main.c    **** 
 182:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 183:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 184:Src/main.c    **** 
 185:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 186:Src/main.c    ****     */
 187:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 188:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 189:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 190:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 191:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 192:Src/main.c    ****   {
 193:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 194:Src/main.c    ****   }
 195:Src/main.c    **** 
 196:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 197:Src/main.c    ****     */
 198:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 199:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 200:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 201:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 202:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 203:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 5


 204:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 205:Src/main.c    ****   {
 206:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 207:Src/main.c    ****   }
 208:Src/main.c    **** 
 209:Src/main.c    ****     /**Configure the Systick interrupt time
 210:Src/main.c    ****     */
 211:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 212:Src/main.c    **** 
 213:Src/main.c    ****     /**Configure the Systick
 214:Src/main.c    ****     */
 215:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 218:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 219:Src/main.c    **** }
 220:Src/main.c    **** 
 221:Src/main.c    **** /* USER CODE BEGIN 4 */
 222:Src/main.c    **** 
 223:Src/main.c    **** /* USER CODE END 4 */
 224:Src/main.c    **** 
 225:Src/main.c    **** /**
 226:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 227:Src/main.c    ****   * @param  None
 228:Src/main.c    ****   * @retval None
 229:Src/main.c    ****   */
 230:Src/main.c    **** void _Error_Handler(char * file, int line)
 231:Src/main.c    **** {
  27              		.loc 1 231 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 232:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 233:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 234:Src/main.c    ****   while(1)
  35              		.loc 1 234 3 view .LVU1
 235:Src/main.c    ****   {
 236:Src/main.c    ****   }
  36              		.loc 1 236 3 view .LVU2
 234:Src/main.c    ****   {
  37              		.loc 1 234 8 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  43              		.align	2
  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 6


  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 180:Src/main.c    **** 
  56              		.loc 1 180 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 182:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 182 3 view .LVU5
 183:Src/main.c    **** 
  68              		.loc 1 183 3 view .LVU6
 187:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 187 3 view .LVU7
 187:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 187 36 is_stmt 0 view .LVU8
  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 188:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 188 3 is_stmt 1 view .LVU9
 188:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 188 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 189 3 is_stmt 1 view .LVU11
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 189 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
 190:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 190 3 is_stmt 1 view .LVU13
 190:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 190 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
 191:Src/main.c    ****   {
  85              		.loc 1 191 3 is_stmt 1 view .LVU15
 191:Src/main.c    ****   {
  86              		.loc 1 191 7 is_stmt 0 view .LVU16
  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL1:
 191:Src/main.c    ****   {
  90              		.loc 1 191 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 7


 198:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  93              		.loc 1 198 3 is_stmt 1 view .LVU18
 198:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  94              		.loc 1 198 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 200:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 200 3 is_stmt 1 view .LVU20
 200:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 200 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 201:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 201 3 is_stmt 1 view .LVU22
 201:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 201 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 202:Src/main.c    **** 
 104              		.loc 1 202 3 is_stmt 1 view .LVU24
 202:Src/main.c    **** 
 105              		.loc 1 202 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
 204:Src/main.c    ****   {
 107              		.loc 1 204 3 is_stmt 1 view .LVU26
 204:Src/main.c    ****   {
 108              		.loc 1 204 7 is_stmt 0 view .LVU27
 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
 204:Src/main.c    ****   {
 113              		.loc 1 204 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 211:Src/main.c    **** 
 116              		.loc 1 211 3 is_stmt 1 view .LVU29
 211:Src/main.c    **** 
 117              		.loc 1 211 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
 211:Src/main.c    **** 
 120              		.loc 1 211 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 215:Src/main.c    **** 
 127              		.loc 1 215 3 is_stmt 1 view .LVU32
 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 218:Src/main.c    **** }
 131              		.loc 1 218 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 8


 134 0050 0021     		movs	r1, #0
 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 219:Src/main.c    **** 
 138              		.loc 1 219 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 193:Src/main.c    ****   }
 143              		.loc 1 193 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e C121     		movs	r1, #193
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 206:Src/main.c    ****   }
 149              		.loc 1 206 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
 151 0066 CE21     		movs	r1, #206
 152 0068 FFF7FEFF 		bl	_Error_Handler
 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  70:Src/main.c    ****   SystemClock_Config();
 170              		.loc 1 70 1 view -0
 171              		.cfi_startproc
 172              		@ Volatile: function does not return.
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 24
 178              		.cfi_offset 3, -24
 179              		.cfi_offset 4, -20
 180              		.cfi_offset 5, -16
 181              		.cfi_offset 6, -12
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
  71:Src/main.c    **** 
 184              		.loc 1 71 3 view .LVU38
 185 0002 FFF7FEFF 		bl	SystemClock_Config
 186              	.LVL10:
  74:Src/main.c    **** 
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 9


 187              		.loc 1 74 3 view .LVU39
  74:Src/main.c    **** 
 188              		.loc 1 74 6 is_stmt 0 view .LVU40
 189 0006 6D4A     		ldr	r2, .L18
 190 0008 5169     		ldr	r1, [r2, #20]
  74:Src/main.c    **** 
 191              		.loc 1 74 15 view .LVU41
 192 000a 8023     		movs	r3, #128
 193 000c 1B03     		lsls	r3, r3, #12
 194 000e 0B43     		orrs	r3, r1
 195 0010 5361     		str	r3, [r2, #20]
  78:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 196              		.loc 1 78 3 is_stmt 1 view .LVU42
  78:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 197              		.loc 1 78 8 is_stmt 0 view .LVU43
 198 0012 6B4B     		ldr	r3, .L18+4
 199 0014 1968     		ldr	r1, [r3]
  78:Src/main.c    ****   GPIOC->MODER &= ~(3 << 14);
 200              		.loc 1 78 16 view .LVU44
 201 0016 6B4E     		ldr	r6, .L18+8
 202 0018 3140     		ands	r1, r6
 203 001a 1960     		str	r1, [r3]
  79:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 204              		.loc 1 79 3 is_stmt 1 view .LVU45
  79:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 205              		.loc 1 79 8 is_stmt 0 view .LVU46
 206 001c 1968     		ldr	r1, [r3]
  79:Src/main.c    ****   GPIOC->MODER &= ~(3 << 16);
 207              		.loc 1 79 16 view .LVU47
 208 001e 6A4D     		ldr	r5, .L18+12
 209 0020 2940     		ands	r1, r5
 210 0022 1960     		str	r1, [r3]
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 211              		.loc 1 80 3 is_stmt 1 view .LVU48
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 212              		.loc 1 80 8 is_stmt 0 view .LVU49
 213 0024 1968     		ldr	r1, [r3]
  80:Src/main.c    ****   GPIOC->MODER &= ~(3 << 18);
 214              		.loc 1 80 16 view .LVU50
 215 0026 694C     		ldr	r4, .L18+16
 216 0028 2140     		ands	r1, r4
 217 002a 1960     		str	r1, [r3]
  81:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
 218              		.loc 1 81 3 is_stmt 1 view .LVU51
  81:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
 219              		.loc 1 81 8 is_stmt 0 view .LVU52
 220 002c 1968     		ldr	r1, [r3]
  81:Src/main.c    ****   // Setting PC6-9 to General-Purpose Output Mode
 221              		.loc 1 81 16 view .LVU53
 222 002e 6848     		ldr	r0, .L18+20
 223 0030 0140     		ands	r1, r0
 224 0032 1960     		str	r1, [r3]
  83:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
 225              		.loc 1 83 3 is_stmt 1 view .LVU54
  83:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
 226              		.loc 1 83 8 is_stmt 0 view .LVU55
 227 0034 1F68     		ldr	r7, [r3]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 10


  83:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
 228              		.loc 1 83 16 view .LVU56
 229 0036 8021     		movs	r1, #128
 230 0038 4901     		lsls	r1, r1, #5
 231 003a 3943     		orrs	r1, r7
 232 003c 1960     		str	r1, [r3]
  84:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
 233              		.loc 1 84 3 is_stmt 1 view .LVU57
  84:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
 234              		.loc 1 84 8 is_stmt 0 view .LVU58
 235 003e 1F68     		ldr	r7, [r3]
  84:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
 236              		.loc 1 84 16 view .LVU59
 237 0040 8021     		movs	r1, #128
 238 0042 C901     		lsls	r1, r1, #7
 239 0044 3943     		orrs	r1, r7
 240 0046 1960     		str	r1, [r3]
  85:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 241              		.loc 1 85 3 is_stmt 1 view .LVU60
  85:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 242              		.loc 1 85 8 is_stmt 0 view .LVU61
 243 0048 1F68     		ldr	r7, [r3]
  85:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 244              		.loc 1 85 16 view .LVU62
 245 004a 8021     		movs	r1, #128
 246 004c 4902     		lsls	r1, r1, #9
 247 004e 3943     		orrs	r1, r7
 248 0050 1960     		str	r1, [r3]
  86:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
 249              		.loc 1 86 3 is_stmt 1 view .LVU63
  86:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
 250              		.loc 1 86 8 is_stmt 0 view .LVU64
 251 0052 1F68     		ldr	r7, [r3]
  86:Src/main.c    ****   // Setting PC6-9 to Push-Pull Output Type
 252              		.loc 1 86 16 view .LVU65
 253 0054 8021     		movs	r1, #128
 254 0056 C902     		lsls	r1, r1, #11
 255 0058 3943     		orrs	r1, r7
 256 005a 1960     		str	r1, [r3]
  88:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 257              		.loc 1 88 3 is_stmt 1 view .LVU66
  88:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 258              		.loc 1 88 8 is_stmt 0 view .LVU67
 259 005c 5968     		ldr	r1, [r3, #4]
  88:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 260              		.loc 1 88 17 view .LVU68
 261 005e 4027     		movs	r7, #64
 262 0060 B943     		bics	r1, r7
 263 0062 5960     		str	r1, [r3, #4]
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 264              		.loc 1 89 3 is_stmt 1 view .LVU69
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 265              		.loc 1 89 8 is_stmt 0 view .LVU70
 266 0064 5968     		ldr	r1, [r3, #4]
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 267              		.loc 1 89 17 view .LVU71
 268 0066 4037     		adds	r7, r7, #64
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 11


 269 0068 B943     		bics	r1, r7
 270 006a 5960     		str	r1, [r3, #4]
  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 271              		.loc 1 90 3 is_stmt 1 view .LVU72
  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 272              		.loc 1 90 8 is_stmt 0 view .LVU73
 273 006c 5968     		ldr	r1, [r3, #4]
  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 274              		.loc 1 90 17 view .LVU74
 275 006e 594F     		ldr	r7, .L18+24
 276 0070 3940     		ands	r1, r7
 277 0072 5960     		str	r1, [r3, #4]
  91:Src/main.c    ****   // Set PC6-9 to Low Speed
 278              		.loc 1 91 3 is_stmt 1 view .LVU75
  91:Src/main.c    ****   // Set PC6-9 to Low Speed
 279              		.loc 1 91 8 is_stmt 0 view .LVU76
 280 0074 5968     		ldr	r1, [r3, #4]
  91:Src/main.c    ****   // Set PC6-9 to Low Speed
 281              		.loc 1 91 17 view .LVU77
 282 0076 584F     		ldr	r7, .L18+28
 283 0078 3940     		ands	r1, r7
 284 007a 5960     		str	r1, [r3, #4]
  93:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
 285              		.loc 1 93 3 is_stmt 1 view .LVU78
  93:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
 286              		.loc 1 93 8 is_stmt 0 view .LVU79
 287 007c 9968     		ldr	r1, [r3, #8]
  93:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 14);
 288              		.loc 1 93 18 view .LVU80
 289 007e 9960     		str	r1, [r3, #8]
  94:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
 290              		.loc 1 94 3 is_stmt 1 view .LVU81
  94:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
 291              		.loc 1 94 8 is_stmt 0 view .LVU82
 292 0080 9968     		ldr	r1, [r3, #8]
  94:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 16);
 293              		.loc 1 94 18 view .LVU83
 294 0082 9960     		str	r1, [r3, #8]
  95:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 295              		.loc 1 95 3 is_stmt 1 view .LVU84
  95:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 296              		.loc 1 95 8 is_stmt 0 view .LVU85
 297 0084 9968     		ldr	r1, [r3, #8]
  95:Src/main.c    ****   GPIOC->OSPEEDR &= ~(0 << 18);
 298              		.loc 1 95 18 view .LVU86
 299 0086 9960     		str	r1, [r3, #8]
  96:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
 300              		.loc 1 96 3 is_stmt 1 view .LVU87
  96:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
 301              		.loc 1 96 8 is_stmt 0 view .LVU88
 302 0088 9968     		ldr	r1, [r3, #8]
  96:Src/main.c    ****   // Set the pull-up/pull-down resistors to no pull-up/pull-down since the bits are 00
 303              		.loc 1 96 18 view .LVU89
 304 008a 9960     		str	r1, [r3, #8]
  98:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 305              		.loc 1 98 3 is_stmt 1 view .LVU90
  98:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 12


 306              		.loc 1 98 8 is_stmt 0 view .LVU91
 307 008c D968     		ldr	r1, [r3, #12]
  98:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 14);
 308              		.loc 1 98 16 view .LVU92
 309 008e 3140     		ands	r1, r6
 310 0090 D960     		str	r1, [r3, #12]
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 311              		.loc 1 99 3 is_stmt 1 view .LVU93
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 312              		.loc 1 99 8 is_stmt 0 view .LVU94
 313 0092 D968     		ldr	r1, [r3, #12]
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 16);
 314              		.loc 1 99 16 view .LVU95
 315 0094 2940     		ands	r1, r5
 316 0096 D960     		str	r1, [r3, #12]
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 317              		.loc 1 100 3 is_stmt 1 view .LVU96
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 318              		.loc 1 100 8 is_stmt 0 view .LVU97
 319 0098 D968     		ldr	r1, [r3, #12]
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 18);
 320              		.loc 1 100 16 view .LVU98
 321 009a 2140     		ands	r1, r4
 322 009c D960     		str	r1, [r3, #12]
 101:Src/main.c    **** 
 323              		.loc 1 101 3 is_stmt 1 view .LVU99
 101:Src/main.c    **** 
 324              		.loc 1 101 8 is_stmt 0 view .LVU100
 325 009e D968     		ldr	r1, [r3, #12]
 101:Src/main.c    **** 
 326              		.loc 1 101 16 view .LVU101
 327 00a0 0140     		ands	r1, r0
 328 00a2 D960     		str	r1, [r3, #12]
 104:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 0);
 329              		.loc 1 104 3 is_stmt 1 view .LVU102
 104:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 0);
 330              		.loc 1 104 8 is_stmt 0 view .LVU103
 331 00a4 1968     		ldr	r1, [r3]
 104:Src/main.c    ****   GPIOC->PUPDR &= ~(3 << 0);
 332              		.loc 1 104 16 view .LVU104
 333 00a6 0320     		movs	r0, #3
 334 00a8 0143     		orrs	r1, r0
 335 00aa 1960     		str	r1, [r3]
 105:Src/main.c    **** 
 336              		.loc 1 105 3 is_stmt 1 view .LVU105
 105:Src/main.c    **** 
 337              		.loc 1 105 8 is_stmt 0 view .LVU106
 338 00ac D968     		ldr	r1, [r3, #12]
 105:Src/main.c    **** 
 339              		.loc 1 105 16 view .LVU107
 340 00ae 8143     		bics	r1, r0
 341 00b0 D960     		str	r1, [r3, #12]
 108:Src/main.c    **** 
 342              		.loc 1 108 3 is_stmt 1 view .LVU108
 108:Src/main.c    **** 
 343              		.loc 1 108 6 is_stmt 0 view .LVU109
 344 00b2 9169     		ldr	r1, [r2, #24]
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 13


 108:Src/main.c    **** 
 345              		.loc 1 108 16 view .LVU110
 346 00b4 8023     		movs	r3, #128
 347 00b6 9B00     		lsls	r3, r3, #2
 348 00b8 0B43     		orrs	r3, r1
 349 00ba 9361     		str	r3, [r2, #24]
 111:Src/main.c    ****   ADC1->CFGR1 |= (2 << 3);
 350              		.loc 1 111 3 is_stmt 1 view .LVU111
 111:Src/main.c    ****   ADC1->CFGR1 |= (2 << 3);
 351              		.loc 1 111 7 is_stmt 0 view .LVU112
 352 00bc 474B     		ldr	r3, .L18+32
 353 00be DA68     		ldr	r2, [r3, #12]
 111:Src/main.c    ****   ADC1->CFGR1 |= (2 << 3);
 354              		.loc 1 111 15 view .LVU113
 355 00c0 1821     		movs	r1, #24
 356 00c2 8A43     		bics	r2, r1
 357 00c4 DA60     		str	r2, [r3, #12]
 112:Src/main.c    **** 
 358              		.loc 1 112 3 is_stmt 1 view .LVU114
 112:Src/main.c    **** 
 359              		.loc 1 112 7 is_stmt 0 view .LVU115
 360 00c6 DA68     		ldr	r2, [r3, #12]
 112:Src/main.c    **** 
 361              		.loc 1 112 15 view .LVU116
 362 00c8 0839     		subs	r1, r1, #8
 363 00ca 0A43     		orrs	r2, r1
 364 00cc DA60     		str	r2, [r3, #12]
 115:Src/main.c    **** 
 365              		.loc 1 115 3 is_stmt 1 view .LVU117
 115:Src/main.c    **** 
 366              		.loc 1 115 7 is_stmt 0 view .LVU118
 367 00ce D968     		ldr	r1, [r3, #12]
 115:Src/main.c    **** 
 368              		.loc 1 115 15 view .LVU119
 369 00d0 8022     		movs	r2, #128
 370 00d2 9201     		lsls	r2, r2, #6
 371 00d4 0A43     		orrs	r2, r1
 372 00d6 DA60     		str	r2, [r3, #12]
 118:Src/main.c    **** 
 373              		.loc 1 118 3 is_stmt 1 view .LVU120
 118:Src/main.c    **** 
 374              		.loc 1 118 7 is_stmt 0 view .LVU121
 375 00d8 DA68     		ldr	r2, [r3, #12]
 118:Src/main.c    **** 
 376              		.loc 1 118 15 view .LVU122
 377 00da 0121     		movs	r1, #1
 378 00dc 8A43     		bics	r2, r1
 379 00de DA60     		str	r2, [r3, #12]
 121:Src/main.c    **** 
 380              		.loc 1 121 3 is_stmt 1 view .LVU123
 121:Src/main.c    **** 
 381              		.loc 1 121 7 is_stmt 0 view .LVU124
 382 00e0 986A     		ldr	r0, [r3, #40]
 121:Src/main.c    **** 
 383              		.loc 1 121 16 view .LVU125
 384 00e2 8022     		movs	r2, #128
 385 00e4 D200     		lsls	r2, r2, #3
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 14


 386 00e6 0243     		orrs	r2, r0
 387 00e8 9A62     		str	r2, [r3, #40]
 124:Src/main.c    ****   ADC1->CR |= (1 << 0); // Set the ADEN bit to 1
 388              		.loc 1 124 3 is_stmt 1 view .LVU126
 124:Src/main.c    ****   ADC1->CR |= (1 << 0); // Set the ADEN bit to 1
 389              		.loc 1 124 7 is_stmt 0 view .LVU127
 390 00ea 1868     		ldr	r0, [r3]
 124:Src/main.c    ****   ADC1->CR |= (1 << 0); // Set the ADEN bit to 1
 391              		.loc 1 124 13 view .LVU128
 392 00ec 8022     		movs	r2, #128
 393 00ee 1206     		lsls	r2, r2, #24
 394 00f0 0243     		orrs	r2, r0
 395 00f2 1A60     		str	r2, [r3]
 125:Src/main.c    **** 
 396              		.loc 1 125 3 is_stmt 1 view .LVU129
 125:Src/main.c    **** 
 397              		.loc 1 125 7 is_stmt 0 view .LVU130
 398 00f4 9A68     		ldr	r2, [r3, #8]
 125:Src/main.c    **** 
 399              		.loc 1 125 12 view .LVU131
 400 00f6 0A43     		orrs	r2, r1
 401 00f8 9A60     		str	r2, [r3, #8]
 128:Src/main.c    ****     // Wait for the ADRDY bit to be 1
 402              		.loc 1 128 3 is_stmt 1 view .LVU132
 403              	.L11:
 130:Src/main.c    **** 
 404              		.loc 1 130 3 view .LVU133
 128:Src/main.c    ****     // Wait for the ADRDY bit to be 1
 405              		.loc 1 128 33 discriminator 1 view .LVU134
 128:Src/main.c    ****     // Wait for the ADRDY bit to be 1
 406              		.loc 1 128 15 is_stmt 0 discriminator 1 view .LVU135
 407 00fa 384B     		ldr	r3, .L18+32
 408 00fc 1B68     		ldr	r3, [r3]
 128:Src/main.c    ****     // Wait for the ADRDY bit to be 1
 409              		.loc 1 128 33 discriminator 1 view .LVU136
 410 00fe DB07     		lsls	r3, r3, #31
 411 0100 FBD5     		bpl	.L11
 133:Src/main.c    **** 
 412              		.loc 1 133 3 is_stmt 1 view .LVU137
 133:Src/main.c    **** 
 413              		.loc 1 133 7 is_stmt 0 view .LVU138
 414 0102 364A     		ldr	r2, .L18+32
 415 0104 9368     		ldr	r3, [r2, #8]
 133:Src/main.c    **** 
 416              		.loc 1 133 12 view .LVU139
 417 0106 0421     		movs	r1, #4
 418 0108 0B43     		orrs	r3, r1
 419 010a 9360     		str	r3, [r2, #8]
 420 010c 14E0     		b	.L12
 421              	.L13:
 146:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 422              		.loc 1 146 10 is_stmt 1 view .LVU140
 146:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 423              		.loc 1 146 17 is_stmt 0 view .LVU141
 424 010e 334B     		ldr	r3, .L18+32
 425 0110 1B6C     		ldr	r3, [r3, #64]
 146:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 15


 426              		.loc 1 146 12 view .LVU142
 427 0112 7F2B     		cmp	r3, #127
 428 0114 26D8     		bhi	.L15
 147:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 429              		.loc 1 147 7 is_stmt 1 view .LVU143
 147:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 430              		.loc 1 147 12 is_stmt 0 view .LVU144
 431 0116 2A4B     		ldr	r3, .L18+4
 432 0118 5A69     		ldr	r2, [r3, #20]
 147:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 433              		.loc 1 147 18 view .LVU145
 434 011a 4021     		movs	r1, #64
 435 011c 0A43     		orrs	r2, r1
 436 011e 5A61     		str	r2, [r3, #20]
 148:Src/main.c    ****       GPIOC->ODR &= ~(1 << 8);
 437              		.loc 1 148 7 is_stmt 1 view .LVU146
 148:Src/main.c    ****       GPIOC->ODR &= ~(1 << 8);
 438              		.loc 1 148 12 is_stmt 0 view .LVU147
 439 0120 5A69     		ldr	r2, [r3, #20]
 148:Src/main.c    ****       GPIOC->ODR &= ~(1 << 8);
 440              		.loc 1 148 18 view .LVU148
 441 0122 4031     		adds	r1, r1, #64
 442 0124 0A43     		orrs	r2, r1
 443 0126 5A61     		str	r2, [r3, #20]
 149:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 444              		.loc 1 149 7 is_stmt 1 view .LVU149
 149:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 445              		.loc 1 149 12 is_stmt 0 view .LVU150
 446 0128 5A69     		ldr	r2, [r3, #20]
 149:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 447              		.loc 1 149 18 view .LVU151
 448 012a 2A49     		ldr	r1, .L18+24
 449 012c 0A40     		ands	r2, r1
 450 012e 5A61     		str	r2, [r3, #20]
 150:Src/main.c    ****     }
 451              		.loc 1 150 7 is_stmt 1 view .LVU152
 150:Src/main.c    ****     }
 452              		.loc 1 150 12 is_stmt 0 view .LVU153
 453 0130 5A69     		ldr	r2, [r3, #20]
 150:Src/main.c    ****     }
 454              		.loc 1 150 18 view .LVU154
 455 0132 2949     		ldr	r1, .L18+28
 456 0134 0A40     		ands	r2, r1
 457 0136 5A61     		str	r2, [r3, #20]
 458              	.L12:
 135:Src/main.c    ****     // Read the values of the ADC and turn on and off LEDs based on the value
 459              		.loc 1 135 3 is_stmt 1 view .LVU155
 140:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 460              		.loc 1 140 5 view .LVU156
 140:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 461              		.loc 1 140 12 is_stmt 0 view .LVU157
 462 0138 284B     		ldr	r3, .L18+32
 463 013a 1B6C     		ldr	r3, [r3, #64]
 140:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 464              		.loc 1 140 7 view .LVU158
 465 013c 3F2B     		cmp	r3, #63
 466 013e E6D8     		bhi	.L13
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 16


 141:Src/main.c    ****       GPIOC->ODR &= ~(1 << 7);
 467              		.loc 1 141 7 is_stmt 1 view .LVU159
 141:Src/main.c    ****       GPIOC->ODR &= ~(1 << 7);
 468              		.loc 1 141 12 is_stmt 0 view .LVU160
 469 0140 1F4B     		ldr	r3, .L18+4
 470 0142 5A69     		ldr	r2, [r3, #20]
 141:Src/main.c    ****       GPIOC->ODR &= ~(1 << 7);
 471              		.loc 1 141 18 view .LVU161
 472 0144 4021     		movs	r1, #64
 473 0146 0A43     		orrs	r2, r1
 474 0148 5A61     		str	r2, [r3, #20]
 142:Src/main.c    ****       GPIOC->ODR &= ~(1 << 8);
 475              		.loc 1 142 7 is_stmt 1 view .LVU162
 142:Src/main.c    ****       GPIOC->ODR &= ~(1 << 8);
 476              		.loc 1 142 12 is_stmt 0 view .LVU163
 477 014a 5A69     		ldr	r2, [r3, #20]
 142:Src/main.c    ****       GPIOC->ODR &= ~(1 << 8);
 478              		.loc 1 142 18 view .LVU164
 479 014c 4031     		adds	r1, r1, #64
 480 014e 8A43     		bics	r2, r1
 481 0150 5A61     		str	r2, [r3, #20]
 143:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 482              		.loc 1 143 7 is_stmt 1 view .LVU165
 143:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 483              		.loc 1 143 12 is_stmt 0 view .LVU166
 484 0152 5A69     		ldr	r2, [r3, #20]
 143:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 485              		.loc 1 143 18 view .LVU167
 486 0154 1F49     		ldr	r1, .L18+24
 487 0156 0A40     		ands	r2, r1
 488 0158 5A61     		str	r2, [r3, #20]
 144:Src/main.c    ****     }
 489              		.loc 1 144 7 is_stmt 1 view .LVU168
 144:Src/main.c    ****     }
 490              		.loc 1 144 12 is_stmt 0 view .LVU169
 491 015a 5A69     		ldr	r2, [r3, #20]
 144:Src/main.c    ****     }
 492              		.loc 1 144 18 view .LVU170
 493 015c 1E49     		ldr	r1, .L18+28
 494 015e 0A40     		ands	r2, r1
 495 0160 5A61     		str	r2, [r3, #20]
 496 0162 E9E7     		b	.L12
 497              	.L15:
 152:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 498              		.loc 1 152 10 is_stmt 1 view .LVU171
 152:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 499              		.loc 1 152 17 is_stmt 0 view .LVU172
 500 0164 1D4B     		ldr	r3, .L18+32
 501 0166 1B6C     		ldr	r3, [r3, #64]
 152:Src/main.c    ****       GPIOC->ODR |= (1 << 6);
 502              		.loc 1 152 12 view .LVU173
 503 0168 BF2B     		cmp	r3, #191
 504 016a 12D8     		bhi	.L16
 153:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 505              		.loc 1 153 7 is_stmt 1 view .LVU174
 153:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 506              		.loc 1 153 12 is_stmt 0 view .LVU175
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 17


 507 016c 144B     		ldr	r3, .L18+4
 508 016e 5A69     		ldr	r2, [r3, #20]
 153:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 509              		.loc 1 153 18 view .LVU176
 510 0170 4021     		movs	r1, #64
 511 0172 0A43     		orrs	r2, r1
 512 0174 5A61     		str	r2, [r3, #20]
 154:Src/main.c    ****       GPIOC->ODR |= (1 << 8);
 513              		.loc 1 154 7 is_stmt 1 view .LVU177
 154:Src/main.c    ****       GPIOC->ODR |= (1 << 8);
 514              		.loc 1 154 12 is_stmt 0 view .LVU178
 515 0176 5A69     		ldr	r2, [r3, #20]
 154:Src/main.c    ****       GPIOC->ODR |= (1 << 8);
 516              		.loc 1 154 18 view .LVU179
 517 0178 4031     		adds	r1, r1, #64
 518 017a 0A43     		orrs	r2, r1
 519 017c 5A61     		str	r2, [r3, #20]
 155:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 520              		.loc 1 155 7 is_stmt 1 view .LVU180
 155:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 521              		.loc 1 155 12 is_stmt 0 view .LVU181
 522 017e 5969     		ldr	r1, [r3, #20]
 155:Src/main.c    ****       GPIOC->ODR &= ~(1 << 9);
 523              		.loc 1 155 18 view .LVU182
 524 0180 8022     		movs	r2, #128
 525 0182 5200     		lsls	r2, r2, #1
 526 0184 0A43     		orrs	r2, r1
 527 0186 5A61     		str	r2, [r3, #20]
 156:Src/main.c    ****     }
 528              		.loc 1 156 7 is_stmt 1 view .LVU183
 156:Src/main.c    ****     }
 529              		.loc 1 156 12 is_stmt 0 view .LVU184
 530 0188 5A69     		ldr	r2, [r3, #20]
 156:Src/main.c    ****     }
 531              		.loc 1 156 18 view .LVU185
 532 018a 1349     		ldr	r1, .L18+28
 533 018c 0A40     		ands	r2, r1
 534 018e 5A61     		str	r2, [r3, #20]
 535 0190 D2E7     		b	.L12
 536              	.L16:
 159:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 537              		.loc 1 159 7 is_stmt 1 view .LVU186
 159:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 538              		.loc 1 159 12 is_stmt 0 view .LVU187
 539 0192 0B4B     		ldr	r3, .L18+4
 540 0194 5A69     		ldr	r2, [r3, #20]
 159:Src/main.c    ****       GPIOC->ODR |= (1 << 7);
 541              		.loc 1 159 18 view .LVU188
 542 0196 4021     		movs	r1, #64
 543 0198 0A43     		orrs	r2, r1
 544 019a 5A61     		str	r2, [r3, #20]
 160:Src/main.c    ****       GPIOC->ODR |= (1 << 8);
 545              		.loc 1 160 7 is_stmt 1 view .LVU189
 160:Src/main.c    ****       GPIOC->ODR |= (1 << 8);
 546              		.loc 1 160 12 is_stmt 0 view .LVU190
 547 019c 5A69     		ldr	r2, [r3, #20]
 160:Src/main.c    ****       GPIOC->ODR |= (1 << 8);
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 18


 548              		.loc 1 160 18 view .LVU191
 549 019e 4031     		adds	r1, r1, #64
 550 01a0 0A43     		orrs	r2, r1
 551 01a2 5A61     		str	r2, [r3, #20]
 161:Src/main.c    ****       GPIOC->ODR |= (1 << 9);
 552              		.loc 1 161 7 is_stmt 1 view .LVU192
 161:Src/main.c    ****       GPIOC->ODR |= (1 << 9);
 553              		.loc 1 161 12 is_stmt 0 view .LVU193
 554 01a4 5969     		ldr	r1, [r3, #20]
 161:Src/main.c    ****       GPIOC->ODR |= (1 << 9);
 555              		.loc 1 161 18 view .LVU194
 556 01a6 8022     		movs	r2, #128
 557 01a8 5200     		lsls	r2, r2, #1
 558 01aa 0A43     		orrs	r2, r1
 559 01ac 5A61     		str	r2, [r3, #20]
 162:Src/main.c    ****     }
 560              		.loc 1 162 7 is_stmt 1 view .LVU195
 162:Src/main.c    ****     }
 561              		.loc 1 162 12 is_stmt 0 view .LVU196
 562 01ae 5969     		ldr	r1, [r3, #20]
 162:Src/main.c    ****     }
 563              		.loc 1 162 18 view .LVU197
 564 01b0 8022     		movs	r2, #128
 565 01b2 9200     		lsls	r2, r2, #2
 566 01b4 0A43     		orrs	r2, r1
 567 01b6 5A61     		str	r2, [r3, #20]
 568 01b8 BEE7     		b	.L12
 569              	.L19:
 570 01ba C046     		.align	2
 571              	.L18:
 572 01bc 00100240 		.word	1073876992
 573 01c0 00080048 		.word	1207961600
 574 01c4 FFCFFFFF 		.word	-12289
 575 01c8 FF3FFFFF 		.word	-49153
 576 01cc FFFFFCFF 		.word	-196609
 577 01d0 FFFFF3FF 		.word	-786433
 578 01d4 FFFEFFFF 		.word	-257
 579 01d8 FFFDFFFF 		.word	-513
 580 01dc 00240140 		.word	1073816576
 581              		.cfi_endproc
 582              	.LFE40:
 584              		.text
 585              	.Letext0:
 586              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 587              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 588              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 589              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 590              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 591              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s:19     .text._Error_Handler:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s:162    .text.main:00000000 $t
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s:168    .text.main:00000000 main
/var/folders/2t/dz2wf36n58l1r0cmb7nl3kb40000gq/T//cchD8BDm.s:572    .text.main:000001bc $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
